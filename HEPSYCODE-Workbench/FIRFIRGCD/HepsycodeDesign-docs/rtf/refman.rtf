{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment FirFirGCD Application }FirFirGCD Application}
{\comment Generated by doxygen.}
{\creatim \yr2023\mo3\dy20\hr14\min5\sec1}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt FirFirGCD Application}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Mon Mar 20 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
HEPSYCODE FirFirGCD Application\par \pard\plain 
{\tc \v HEPSYCODE FirFirGCD Application}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
INTRODUCTION
\par}
{\tc\tcl2 \v INTRODUCTION}
Hepsycode is a prototypal tool to improve the design time of embedded applications. It is based on a System-Level methodology for HW/SW Co-Design of Heterogeneous Parallel Dedicated Systems. The whole framework drives the designer from an Electronic System-Level (ESL) behavioral model, with related NF requirements, including real-time and mixed-criticality ones, to the final HW/SW implementation, considering specific HW technologies, scheduling policies and Inter-Process Communication (IPC) mechanisms. The system behavior modeling language introduced in Hepsycode, named HML (HEPSY Modeling Language), is based on the Communicating Sequential Processes (CSP) Model of Computation (MoC). It allows modeling the behavior of the system as a network of processes communicating through unidirectional synchronous channels. By means of HML it is possible to specify the System Behavior Model (SBM), an executable model of the system behavior, a set of Non Functional Constraints (NFC) and a set of Reference Inputs (RI) to be used for simulation-based activities. Through the execution of different steps, including a system-level Design Space Exploration (DSE) approach that allows the related co-design methodology to suggest an HW/SW partitioning of the application specification and a mapping of the partitioned entities onto an automatically defined heterogeneous multi-processor architecture, it is possible to proceed with system implementation.\par
Hepsycode uses Eclipse MDE technologies, SystemC custom simulator implementation and an evolutionary genetic algorithm for partitioning activities, all integrated into an automatic framework that drive the designer from first input to final solution.\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
WEBSITE
\par}
{\tc\tcl3 \v WEBSITE}
{\f2 www.hepsycode.com}\par}
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
LICENSE
\par}
{\tc\tcl3 \v LICENSE}
GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 (see {\f2 gpl-3.0.en.html})\par}
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
SUPPORT
\par}
{\tc\tcl3 \v SUPPORT}
We currently support:\par
Email:{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Luigi Pomante: {\f2 luigi.pomante@univaq.it}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vittoriano Muttillo: {\f2 vittoriano.muttillo@guest.univaq.it}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Main contact: {\f2 info@hepsycode.com}\par}
\par(please take care to use [HEPSYCODE SUPPORT] as object\par}
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
information
\par}
{\tc\tcl3 \v information}
Research publications are available on {\f2 Hepsycode Website} and {\f2 Publications}\par}
\par}
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Use Case FirFirGCD
\par}
{\tc\tcl2 \v Use Case FirFirGCD}
We provide an example Hepsycode project, called FirFirGCD (FFG). FFG is a synthetic application that takes in input pairs of values (triggered by Stimulus), makes two filtering actions (FIR8 and FIR16) and then makes the Greatest Common Divisor (GCD) between the filters outputs and displays the result. This application is composed of three main components: 2 Finite Impulse Response (FIR) digital filters and a Greatest Common Divisor (GCD) component, as show in the figure below.\par
More details can be found at the link: {\f2 www.hepsycode.com} \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Index\par \pard\plain 
{\tc \v Module Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Modules\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all modules:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
FirFirGCD datatypes.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FirFirGCD define.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FirFirGCD Display.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FirFirGCD Macros.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FirFirGCD Main.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FirFirGCD Mainsystem.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FirFirGCD CSP Channel.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FirFirGCD CSP Channel Interfaces.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HEPSIM Scheduling Manager.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FirFirGCD Stimulus.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HEPSIM System Manager.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
HEPSIM Technologies Library.\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all namespaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b sc_core} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BasicBlock\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Channel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
fir16e_parameters\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
fir16e_results\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
fir16s_parameters\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
fir16s_results\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
fir8e_parameters\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
fir8e_results\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
fir8s_parameters\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
fir8s_results\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
gcde_parameters\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
gcde_results\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Memory\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PhysicalLink\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Process\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ProcessingUnit\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sc_interface\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMZ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
sc_core::sc_csp_channel_in_if< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
sc_csp_channel< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
sc_core::sc_csp_channel_out_if< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
sc_csp_channel< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
sc_prim_channel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
sc_csp_channel< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SystemManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b BasicBlock} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Channel} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b fir16e_parameters} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16m to fir16e })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b fir16e_results} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16e to fir16m })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b fir16s_parameters} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16m to fir16s })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b fir16s_results} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16s to fir16m })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b fir8e_parameters} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir8m to fir8e })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b fir8e_results} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct {\b fir8e_results} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b fir8s_parameters} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct {\b fir8s_parameters} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b fir8s_results} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct {\b fir8s_results} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gcde_parameters} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from gcdm to gcde })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gcde_results} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from gcde to gcdm })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Memory} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PhysicalLink} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Process} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ProcessingUnit} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sc_csp_channel< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sc_core::sc_csp_channel_in_if< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sc_core::sc_csp_channel_out_if< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sc_interface} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sc_prim_channel} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SystemManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b HepsycodeDesign/src/{\b datatype.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Datatype Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b define.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b display.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Display Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b display.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Display Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b macros.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macros Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b main.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b mainsystem.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mainsystem Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b sc_csp_channel.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The sc_csp_channel<T> primitive channel class documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b sc_csp_channel_ifs.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The sc_csp_channel<T> interface classes documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b SchedulingManager.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scheduling Manager Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b SchedulingManager.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HEPSIM Scheduling Manager Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b stim_gen.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b stim_gen.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stimulus Generation Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b SystemManager.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System Manager Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b SystemManager.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HEPSIM System Manager Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b tl.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Technologies library Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/{\b tl.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HEPSIM Technologies Library Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/processesInstr/{\b fir16_evaluation.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR16 Evaluation Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/processesInstr/{\b fir16_main.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR16 Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/processesInstr/{\b fir16_shifting.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR16 Shifting Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/processesInstr/{\b fir8_evaluation.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR8 Evaluation Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/processesInstr/{\b fir8_main.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR8 Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/processesInstr/{\b fir8_shifting.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR8 Shifting Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/processesInstr/{\b gcd_evaluation.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GCD Evaluation Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b HepsycodeDesign/src/processesInstr/{\b gcd_main.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GCD Documented file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Module Documentation{\tc \v Module Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FirFirGCD datatypes.\par \pard\plain 
{\tc\tcl2 \v FirFirGCD datatypes.}
{\xe \v FirFirGCD datatypes.}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DATATYPES (i.e., MESSAGES) USED BY THE CHANNELS. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir8e_parameters}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir8m to fir8e. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir8e_results}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8e_results} }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir8s_parameters}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8s_parameters} }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir8s_results}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8s_results} }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir16e_parameters}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16m to fir16e. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir16e_results}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16e to fir16m. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir16s_parameters}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16m to fir16s. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir16s_results}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16s to fir16m. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b gcde_parameters}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from gcdm to gcde. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b gcde_results}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from gcde to gcdm. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DATATYPES (i.e., MESSAGES) USED BY THE CHANNELS. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines all the FirFirGCD related datatypes \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FirFirGCD define.\par \pard\plain 
{\tc\tcl2 \v FirFirGCD define.}
{\xe \v FirFirGCD define.}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DEFINE USED BY HEPSIM2. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NPS}\~ 10\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SBM DEPENDENT. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NCH}\~ 15\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TAP8}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TAP16}\~ 16\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NUMBER_OF_INPUTS}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NBB}\~ 5\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FirFirGCD: constants related to the HW architecture. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NPL}\~ 3\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BBs IDs (#id in the tag is starting from 0 to be aligned with istancesTL) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b APPLICATION}\~ "./XML/application.xml"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SBM INDEPENDENT: DO NOT CHANGE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAPPING_PS_BB}\~ "./XML/mappingPS.xml"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAPPING_LC_PL}\~ "./XML/mappingCH.xml"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b energyComputation}\~ "EPC"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Costants related to energy consumption estimation. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b p_id} \{ {\b stimulus_id}, 
{\b display_id}, 
{\b fir8m_id}, 
{\b fir8e_id}, 
{\b fir8s_id}, 
{\b fir16m_id}, 
{\b fir16e_id}, 
{\b fir16s_id}, 
{\b gcdm_id}, 
{\b gcde_id}, 
{\b s_fir8m_fir8e_id}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b bb_id} \{ {\b BB8051_0_id}, 
{\b BB8051_1_id}, 
{\b BBleon3_0_id}, 
{\b BBleon3_1_id}, 
{\b BBArtix7_0_id}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b state} \{ {\b undefined}, 
{\b waiting}, 
{\b ready}, 
{\b running}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Costants related to processes/schedulers states and BB/modes. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b mode} \{ {\b off}, 
{\b suspended}, 
{\b active}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DEFINE USED BY HEPSIM2. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All the FirFirGCD related define \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v APPLICATION\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:APPLICATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define APPLICATION\~ "./XML/application.xml"}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SBM INDEPENDENT: DO NOT CHANGE. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tags for conditionl compilation (LP: To be provided as flag to compiler) Possible options:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
NO TAGS (Add only functional behavioral simulation?) or FUNCTIONAL?\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
NO TAGS (function alanalyzer = functional simulatoin + communications analysis + functional concurrency analysis)\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TIMING_ENERGY (timing&energy simulation)\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TIMING_ENERGY+CONCURRENCY (timing&energy simulation + timing concurrency analysis)\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TIMING_ENERGY+LOAD (timing&energy simulation + load estimation)\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TIMING_ENERGY+LOAD+CONCURRENCY (timing&energy simulation + load estimation + timing concurrency analysis) - WARNING: scheduler OVH is 0! #define {\i TIMING_ENERGY}  #define {\i LOAD}  #define {\i CONCURRENCY}  Tags for debug and log (LP: To be provided as flag to compiler) #define {\i DEBUG}  #define {\i SAVE_CSV}  Costants related to mapping files \par}
}{
Definition at line 120 of file define.h.}\par
}
{\xe \v energyComputation\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:energyComputation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define energyComputation\~ "EPC"}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Costants related to energy consumption estimation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method used to compute energy consumption (possible values: EPI/EPC) //LP: check formule #define energyComputation "EPI" \par
}{
Definition at line 135 of file define.h.}\par
}
{\xe \v MAPPING_LC_PL\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:MAPPING_LC_PL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAPPING_LC_PL\~ "./XML/mappingCH.xml"}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file define.h.}\par
}
{\xe \v MAPPING_PS_BB\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:MAPPING_PS_BB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAPPING_PS_BB\~ "./XML/mappingPS.xml"}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 121 of file define.h.}\par
}
{\xe \v NBB\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:NBB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NBB\~ 5}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FirFirGCD: constants related to the HW architecture. }}\par
{
Definition at line 87 of file define.h.}\par
}
{\xe \v NCH\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:NCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NCH\~ 15}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file define.h.}\par
}
{\xe \v NPL\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:NPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NPL\~ 3}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BBs IDs (#id in the tag is starting from 0 to be aligned with istancesTL) }}\par
{
Definition at line 89 of file define.h.}\par
}
{\xe \v NPS\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:NPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NPS\~ 10}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SBM DEPENDENT. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FirFirGCD: constants related to the SBM \par
}{
Definition at line 77 of file define.h.}\par
}
{\xe \v NUMBER_OF_INPUTS\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:NUMBER_OF_INPUTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NUMBER_OF_INPUTS\~ 10}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file define.h.}\par
}
{\xe \v TAP16\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:TAP16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TAP16\~ 16}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file define.h.}\par
}
{\xe \v TAP8\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:TAP8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TAP8\~ 8}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file define.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v bb_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:bb_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b bb_id}}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v BB8051_0_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:BB8051_0_id}
{\qr BB8051_0_id{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\cell }{\cell }{\row }
{\xe \v BB8051_1_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:BB8051_1_id}
{\qr BB8051_1_id{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\cell }{\cell }{\row }
{\xe \v BBleon3_0_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:BBleon3_0_id}
{\qr BBleon3_0_id{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\cell }{\cell }{\row }
{\xe \v BBleon3_1_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:BBleon3_1_id}
{\qr BBleon3_1_id{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\cell }{\cell }{\row }
{\xe \v BBArtix7_0_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:BBArtix7_0_id}
{\qr BBArtix7_0_id{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\cell }{\cell }{\row }
}
\par
{
Definition at line 88 of file define.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00088 \{BB8051_0_id, BB8051_1_id, BBleon3_0_id, BBleon3_1_id, BBArtix7_0_id\}; \par
}
}
{\xe \v mode\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b mode}}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v off\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:off}
{\qr off{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\cell }{\cell }{\row }
{\xe \v suspended\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:suspended}
{\qr suspended{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\cell }{\cell }{\row }
{\xe \v active\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:active}
{\qr active{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\cell }{\cell }{\row }
}
\par
{
Definition at line 127 of file define.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00127 \{ off, suspended, active \};\par
}
}
{\xe \v p_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:p_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b p_id}}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v stimulus_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:stimulus_id}
{\qr stimulus_id{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\cell }{\cell }{\row }
{\xe \v display_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:display_id}
{\qr display_id{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\cell }{\cell }{\row }
{\xe \v fir8m_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:fir8m_id}
{\qr fir8m_id{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\cell }{\cell }{\row }
{\xe \v fir8e_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:fir8e_id}
{\qr fir8e_id{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\cell }{\cell }{\row }
{\xe \v fir8s_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:fir8s_id}
{\qr fir8s_id{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\cell }{\cell }{\row }
{\xe \v fir16m_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:fir16m_id}
{\qr fir16m_id{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\cell }{\cell }{\row }
{\xe \v fir16e_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:fir16e_id}
{\qr fir16e_id{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\cell }{\cell }{\row }
{\xe \v fir16s_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:fir16s_id}
{\qr fir16s_id{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\cell }{\cell }{\row }
{\xe \v gcdm_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:gcdm_id}
{\qr gcdm_id{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\cell }{\cell }{\row }
{\xe \v gcde_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:gcde_id}
{\qr gcde_id{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\cell }{\cell }{\row }
{\xe \v s_fir8m_fir8e_id\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:s_fir8m_fir8e_id}
{\qr s_fir8m_fir8e_id{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\cell }{\cell }{\row }
}
\par
{
Definition at line 78 of file define.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00078 \{stimulus_id, display_id, fir8m_id, fir8e_id, fir8s_id, fir16m_id, fir16e_id, fir16s_id, gcdm_id, gcde_id, s_fir8m_fir8e_id\}; {\cf20 // Processes IDs}\par
}
}
{\xe \v state\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b state}}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Costants related to processes/schedulers states and BB/modes. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v undefined\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:undefined}
{\qr undefined{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\cell }{\cell }{\row }
{\xe \v waiting\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:waiting}
{\qr waiting{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\cell }{\cell }{\row }
{\xe \v ready\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:ready}
{\qr ready{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\cell }{\cell }{\row }
{\xe \v running\:FirFirGCD define.}
{\xe \v FirFirGCD define.\:running}
{\qr running{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\cell }{\cell }{\row }
}
\par
{
Definition at line 126 of file define.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00126 \{ undefined, waiting, ready, running \};\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FirFirGCD Display.\par \pard\plain 
{\tc\tcl2 \v FirFirGCD Display.}
{\xe \v FirFirGCD Display.}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Display Implementation. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SC_MODULE} (display)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Display Implementation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v SC_MODULE\:FirFirGCD Display.}
{\xe \v FirFirGCD Display.\:SC_MODULE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SC_MODULE (display )}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file display.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00084 \{\par
00085 \par
00086     {\cf20 // Port for input by channel}\par
00087     sc_port< sc_csp_channel_in_if< sc_uint<8> > > result_channel_port;\par
00088 \par
00089     SC_CTOR(display)\par
00090     \{\par
00091         SC_THREAD(output);\par
00092     \}\par
00093 \par
00094     {\cf20 // Main method}\par
00095     {\cf18 void} output();\par
00096 \};\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FirFirGCD Macros.\par \pard\plain 
{\tc\tcl2 \v FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macros Implementation. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_S}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_P}(X)\~ {\b pSystemManager}->PS_Profiling(X);\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_SCHED_CS}(X,  i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRE_WAIT}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POST_WAIT}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_S_TIMER}(X,  Y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_PS_STATE}(X)\~ {\b pSchedulingManager}->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VPS[X].getEnergy() << "; Process;" << X << "; State;" << pSchedulingManager->process_state[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_PS_STATE_THIS}(X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VPS[X].getEnergy() << "; Process;" << X << "; State;" << this->process_state[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_CH_STATE}(X)\~ {\b pSchedulingManager}->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VCH[X].working_energy << "; Channel;" << X << "; State;" << pSchedulingManager->channel_state[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_CH_STATE_THIS}(X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VCH[X].working_energy << "; Channel;" << X << "; State;" << this->channel_state[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_BB_STATE}(X)\~ {\b pSchedulingManager}->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << 0 << "; BB;" << X << "; Mode;" << pSchedulingManager->BB_mode[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_BB_STATE_THIS}(X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << 0 << "; BB;" << X << "; Mode;" << this->BB_mode[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_SCHED_STATE}(X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << this->sched_en[X] << "; Scheduler;" << X << "; State;" << this->scheduler_state[X] << endl;\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macros Implementation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v HEPSY_P\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:HEPSY_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEPSY_P( X)\~ {\b pSystemManager}->PS_Profiling(X);}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file macros.h.}\par
}
{\xe \v HEPSY_S\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:HEPSY_S}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEPSY_S( X)}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         wait(pSchedulingManager->schedule[X]);                  \\\par
        pSchedulingManager->release[X].notify(SC_ZERO_TIME);\par
}
{
Definition at line 84 of file macros.h.}\par
}
{\xe \v HEPSY_S_TIMER\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:HEPSY_S_TIMER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEPSY_S_TIMER( X,  Y)}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         pSystemManager->increaseTimer(X,Y);                                                     \\\par
        if(!pSystemManager->checkSPP(X)) wait(pSchedulingManager->schedule[X]);                 \\\par
        PRE_WAIT(X)                                                                             \\\par
        wait(Y);                                                                                \\\par
        POST_WAIT(X)                                                                            \\\par
        if(!pSystemManager->checkSPP(X)) pSchedulingManager->release[X].notify(SC_ZERO_TIME);\par
}
{
Definition at line 129 of file macros.h.}\par
}
{\xe \v HEPSY_SCHED_CS\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:HEPSY_SCHED_CS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEPSY_SCHED_CS( X,  i)}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         wait(pSystemManager->VBB[X].getProcessors()[0].getOverheadCS()*i);               \\\par
        this->sched_oh[X] += pSystemManager->VBB[X].getProcessors()[0].getOverheadCS()*i;      \\\par
        this->sched_en[X]+= ((pSystemManager->VBB[X].getProcessors()[0].getOverheadCS().to_seconds() * pSystemManager->VBB[X].getProcessors()[0].getPower())*1000000);\par
}
{
Definition at line 94 of file macros.h.}\par
}
{\xe \v HEPSY_TRACE_BB_STATE\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:HEPSY_TRACE_BB_STATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEPSY_TRACE_BB_STATE( X)\~ {\b pSchedulingManager}->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << 0 << "; BB;" << X << "; Mode;" << pSchedulingManager->BB_mode[X] << endl;}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 156 of file macros.h.}\par
}
{\xe \v HEPSY_TRACE_BB_STATE_THIS\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:HEPSY_TRACE_BB_STATE_THIS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEPSY_TRACE_BB_STATE_THIS( X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << 0 << "; BB;" << X << "; Mode;" << this->BB_mode[X] << endl;}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 160 of file macros.h.}\par
}
{\xe \v HEPSY_TRACE_CH_STATE\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:HEPSY_TRACE_CH_STATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEPSY_TRACE_CH_STATE( X)\~ {\b pSchedulingManager}->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VCH[X].working_energy << "; Channel;" << X << "; State;" << pSchedulingManager->channel_state[X] << endl;}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file macros.h.}\par
}
{\xe \v HEPSY_TRACE_CH_STATE_THIS\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:HEPSY_TRACE_CH_STATE_THIS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEPSY_TRACE_CH_STATE_THIS( X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VCH[X].working_energy << "; Channel;" << X << "; State;" << this->channel_state[X] << endl;}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 152 of file macros.h.}\par
}
{\xe \v HEPSY_TRACE_PS_STATE\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:HEPSY_TRACE_PS_STATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEPSY_TRACE_PS_STATE( X)\~ {\b pSchedulingManager}->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VPS[X].getEnergy() << "; Process;" << X << "; State;" << pSchedulingManager->process_state[X] << endl;}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 140 of file macros.h.}\par
}
{\xe \v HEPSY_TRACE_PS_STATE_THIS\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:HEPSY_TRACE_PS_STATE_THIS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEPSY_TRACE_PS_STATE_THIS( X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VPS[X].getEnergy() << "; Process;" << X << "; State;" << this->process_state[X] << endl;}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 144 of file macros.h.}\par
}
{\xe \v HEPSY_TRACE_SCHED_STATE\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:HEPSY_TRACE_SCHED_STATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEPSY_TRACE_SCHED_STATE( X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << this->sched_en[X] << "; Scheduler;" << X << "; State;" << this->scheduler_state[X] << endl;}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 164 of file macros.h.}\par
}
{\xe \v POST_WAIT\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:POST_WAIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POST_WAIT( X)}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 if} (pSchedulingManager->BB_mode[pSystemManager->allocationPS_BB[X]]==suspended)                 \\\par
    \{                                                                                               \\\par
        if (pSystemManager->checkSPP(X)=={\cf17 true})                                                      \\\par
        \{                                                                                           \\\par
            pSchedulingManager->BB_mode[pSystemManager->allocationPS_BB[X]]=active;                 \\\par
            HEPSY_TRACE_BB_STATE(X)                                                                             \\\par
        \}                                                                                           \\\par
        else pSchedulingManager->activate[pSystemManager->allocationPS_BB[X]].notify(SC_ZERO_TIME); \\\par
    \}                                                                                               \\\par
                                                                                                    \\\par
if (pSystemManager->checkSPP(X)=={\cf17 true}) pSchedulingManager->process_state[X]=running;                \\\par
    else pSchedulingManager->process_state[X]=ready;                                                \\\par
    HEPSY_TRACE_PS_STATE(X)                                                                                     \\\par
                                                                                                    \\\par
if (pSystemManager->checkSPP(X)==false)                                                             \\\par
    pSchedulingManager->process_status_changed[pSystemManager->allocationPS_BB[X]]=true;\par
}
{
Definition at line 109 of file macros.h.}\par
}
{\xe \v PRE_WAIT\:FirFirGCD Macros.}
{\xe \v FirFirGCD Macros.\:PRE_WAIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRE_WAIT( X)}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     pSchedulingManager->process_state[X]=waiting;   \\\par
    HEPSY_TRACE_PS_STATE(X)\par
}
{
Definition at line 101 of file macros.h.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FirFirGCD Main.\par \pard\plain 
{\tc\tcl2 \v FirFirGCD Main.}
{\xe \v FirFirGCD Main.}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MAIN. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sc_main} (int a, char *b[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemManager} * {\b pSystemManager} = new {\b SystemManager}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SchedulingManager * {\b pSchedulingManager} = new SchedulingManager("SchedulingManager")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sampling_period} = 1000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stop_concurrency_sampling} =false\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MAIN. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v sc_main\:FirFirGCD Main.}
{\xe \v FirFirGCD Main.\:sc_main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sc_main (int  {\i a}, char *  {\i b}[])}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Testbench and System (SBM dependent)\par
Instantiation and connection of testbench and system\par
Instantiation and connection of testbench and system\par
Simulation management (maybe SBM dependent)\par
Report (SBM independent)\par
Timing DATA about simulation\par
Communications\par
ENERGY DATA\par
LOAD DATA\par
Report (concurrency)\par
}{
Definition at line 177 of file main.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00178 \{\par
00179 \par
00183     \par
00185 \par
00186     sc_csp_channel< sc_uint<8> >   stim1_channel(12);\par
00187     sc_csp_channel< sc_uint<8> >   stim2_channel(13);\par
00188     sc_csp_channel< sc_uint<8> >   result_channel(14);\par
00189 \par
00191 \par
00192     stim_gen mystimgen({\cf22 "mystimgen"});\par
00193     mystimgen.stim1_channel_port(stim1_channel);\par
00194     mystimgen.stim2_channel_port(stim2_channel);\par
00195 \par
00196     mainsystem mysystem({\cf22 "mysystem"});\par
00197     mysystem.stim1_channel_port(stim1_channel);\par
00198     mysystem.stim2_channel_port(stim2_channel);\par
00199     mysystem.result_channel_port(result_channel);\par
00200 \par
00201     display mydisplay({\cf22 "mydisplay"});\par
00202     mydisplay.result_channel_port(result_channel);\par
00203 \par
00207 \par
00208     {\cf20 // Time info}\par
00209     sc_time end_sim, tot=sc_time(0, SC_MS), tot_sched_oh=sc_time(0, SC_MS);\par
00210 \par
00211     clock_t start = clock();\par
00212 \par
00213     {\cf20 // Start simulation}\par
00214     cout << endl;\par
00215     sc_start();\par
00216 \par
00217     {\cf20 //  Total simulated and simulation times}\par
00218     end_sim=sc_time_stamp();\par
00219     clock_t end = clock();\par
00220 \par
00221 {\cf21     #if _WIN32}\par
00222         system({\cf22 "pause"});\par
00223 {\cf21     #endif}\par
00224 \par
00228 \par
00229     {\cf20 //LP: check tutti i save_csv, save_xml e trace}\par
00230 \par
00231 {\cf21     #if defined(_SAVE_CSV_)}\par
00232         {\cf20 // Initialize csv file for statistics storage}\par
00233         ofstream myStatFile;\par
00234         myStatFile.open ({\cf22 "./Results.csv"},std::ofstream::out | std::ofstream::app);\par
00235 \par
00236         {\cf18 string} scenario_id;\par
00237 \par
00238         cout << {\cf22 "Insert Scenario ID: "};\par
00239 \par
00240         {\cf20 // Take input using cin}\par
00241         cin >> scenario_id;\par
00242 \par
00243         myStatFile << {\cf22 "Scenario ID,"};\par
00244         myStatFile << scenario_id +{\cf22 ","}; {\cf20 // @suppress("Function cannot be resolved")}\par
00245 {\cf21     #endif}\par
00246 \par
00250         \par
00251     cout << endl << {\cf22 "FINAL SIMULATION TIME: "} << (((float)(end - start)) / CLOCKS_PER_SEC) << endl;\par
00252 \par
00253 {\cf21     #if defined _SAVE_CSV_}\par
00254         myStatFile << {\cf22 "FINAL SIMULATION TIME,"};\par
00255         myStatFile << to_string(((({\cf18 float})(end - start)) / CLOCKS_PER_SEC)) +{\cf22 ","}; {\cf20 // @suppress("Function cannot be resolved")}\par
00256 {\cf21     #endif}\par
00257 \par
00258     cout << endl << {\cf22 "FINAL SIMULATED TIME: "} << end_sim.to_seconds() << endl;\par
00259 \par
00260 {\cf21     #if defined _SAVE_CSV_}\par
00261         myStatFile << {\cf22 "FINAL SIMULATED TIME,"};\par
00262         myStatFile << to_string(end_sim.to_seconds()) +{\cf22 ","};  {\cf20 // @suppress("Function cannot be resolved")}\par
00263 {\cf21     #endif}\par
00264 \par
00266     {\cf20 // Processes DATA}\par
00268 {\cf20 }\par
00269 {\cf21     #if defined(_DEBUG_)}\par
00270         {\cf20 // Print process mapping for DEBUG}\par
00271 \par
00272         cout << endl << {\cf22 "PROCESSES MAPPING"} << endl << endl;\par
00273         {\cf19 for} ({\cf18 unsigned} {\cf18 int} j = 2; j<NPS; j++)\par
00274         \{\par
00275             cout << {\cf22 "Process "} << pSystemManager->VPS[j].name << {\cf22 "["} <<pSystemManager->VPS[j].id << {\cf22 "] is on BB"} <<\par
00276             pSystemManager->VBB[pSystemManager->allocationPS_BB[j]].getName()<< {\cf22 "["} << pSystemManager->allocationPS_BB[j] << {\cf22 "]"} << endl;\par
00277         \}\par
00278         cout << endl;\par
00279 \par
00280 {\cf21         #if _WIN32}\par
00281                 system({\cf22 "pause"});\par
00282 {\cf21         #endif}\par
00283 {\cf21     #endif}\par
00284 \par
00285     {\cf20 // Number of times each process has been executed (i.e., number of loops)}\par
00286     cout << endl << {\cf22 "PROCESSES PROFILING"} << endl;\par
00287 \par
00288 {\cf21     #if defined _SAVE_CSV_}\par
00289         myStatFile << {\cf22 "PROCESSES PROFILING,"};\par
00290 {\cf21     #endif}\par
00291 \par
00292     {\cf19 for}( {\cf18 unsigned} {\cf18 int} j=2; j<NPS; j++)\par
00293     \{\par
00294         cout << pSystemManager->VPS[j].id << {\cf22 ": "} << pSystemManager->VPS[j].profiling << endl;\par
00295 \par
00296 {\cf21         #if defined _SAVE_CSV_}\par
00297             myStatFile << to_string(pSystemManager->VPS[j].profiling) +{\cf22 ","}; {\cf20 // @suppress("Function cannot be resolved")}\par
00298 {\cf21         #endif}\par
00299     \}\par
00300     cout << endl;\par
00301 \par
00302 {\cf21     #if _WIN32}\par
00303         system({\cf22 "pause"});\par
00304 {\cf21     #endif}\par
00305 \par
00306     {\cf20 // Number of bytes exchanged among process}\par
00307     cout << endl << {\cf22 "PROCESSES COMMUNICATIONS MATRIX (#written bits from W to R)"} << endl;\par
00308     cout << {\cf22 "   "};\par
00309     {\cf19 for} ({\cf18 int} j = 0; j<NPS; j++)\par
00310     \{\par
00311         cout << setw(4) << j;\par
00312     \}\par
00313     cout << endl;\par
00314 \par
00315     {\cf19 for} ({\cf18 int} i = 0; i<NPS; i++)\par
00316     \{\par
00317         cout << setw(2) << i << {\cf22 " "};\par
00318         {\cf19 for} ({\cf18 int} j = 0; j<NPS; j++)\par
00319         \{\par
00320             pSchedulingManager->matrixCOM[i][j] = 0;\par
00321             {\cf19 for} ({\cf18 int} k = 0; k<NCH; k++)\par
00322             \{\par
00323                 {\cf19 if} (pSystemManager->VCH[k].getW_id() == i && pSystemManager->VCH[k].getR_id() == j)\par
00324                 \{\par
00325                     pSchedulingManager->matrixCOM[i][j] += pSystemManager->VCH[k].getWidth()*pSystemManager->VCH[k].getNum();\par
00326                 \}\par
00327             \}\par
00328             cout << setw(4) << pSchedulingManager->matrixCOM[i][j];\par
00329         \}\par
00330         cout << endl;\par
00331     \}\par
00332 \par
00333 {\cf21     #if _WIN32}\par
00334         system({\cf22 "pause"});\par
00335 {\cf21     #endif}\par
00336 \par
00337 \par
00338 {\cf21     #if defined(_TIMING_ENERGY_)}\par
00339 \par
00340         cout << endl << {\cf22 "PROCESS TIME PROFILING"} << endl;\par
00341 \par
00342         cout << endl << {\cf22 "Average NET TIME for each process:"} << endl << endl;\par
00343 \par
00344 {\cf21         #if defined _SAVE_CSV_}\par
00345             myStatFile << {\cf22 "Average NET TIME,"}; {\cf20 // @suppress("Function cannot be resolved")}\par
00346 {\cf21         #endif}\par
00347 \par
00348         {\cf19 for}({\cf18 unsigned} i =2; i<pSystemManager->VPS.size(); i++)\par
00349         \{\par
00350             cout << pSystemManager->VPS[i].id << {\cf22 " - "} << pSystemManager->VPS[i].name << {\cf22 "\\t\\t"} << (pSystemManager->VPS[i].processTime/pSystemManager->VPS[i].profiling).to_seconds() << endl;\par
00351             tot+=pSystemManager->VPS[i].processTime;\par
00352 \par
00353 {\cf21             #if defined _SAVE_CSV_}\par
00354                 myStatFile << to_string((pSystemManager->VPS[i].processTime/pSystemManager->VPS[i].profiling).to_seconds()) +{\cf22 ","}; {\cf20 // @suppress("Function cannot be resolved")}\par
00355 {\cf21             #endif}\par
00356         \}\par
00357         cout << {\cf22 "Total NET TIME for all the processes:"} << tot.to_seconds() << endl;\par
00358 \par
00359 {\cf21         #if defined _SAVE_CSV_}\par
00360             myStatFile << {\cf22 "Total NET TIME,"}; {\cf20 // @suppress("Function cannot be resolved")}\par
00361             myStatFile << to_string(tot.to_seconds()) +{\cf22 ","}; {\cf20 // @suppress("Function cannot be resolved")}\par
00362 {\cf21         #endif}\par
00363 \par
00364             cout << endl << {\cf22 "Schedulers Overhead [time - #loops/#CS]"} << endl;\par
00365 \par
00366 {\cf21         #if defined _SAVE_CSV_}\par
00367             myStatFile << {\cf22 "Schedulers Overhead,"}; {\cf20 // @suppress("Function cannot be resolved")}\par
00368 {\cf21         #endif}\par
00369 \par
00370         {\cf19 for}({\cf18 int} i = 0; i<NBB; i++) {\cf20 // Figures for SPP will be always 0}\par
00371         \{\par
00372             cout << pSchedulingManager->sched_oh[i].to_seconds() << {\cf22 " - "} << pSchedulingManager->sched_loops[i] << {\cf22 "/"} << pSchedulingManager->sched_CS[i] << endl;\par
00373             tot_sched_oh += pSchedulingManager->sched_oh[i];\par
00374 \par
00375 {\cf21             #if defined _SAVE_CSV_}\par
00376                 myStatFile << to_string(pSchedulingManager->sched_oh[i].to_seconds()) +{\cf22 ","}; {\cf20 // @suppress("Function cannot be resolved")}\par
00377 {\cf21             #endif}\par
00378         \}\par
00379 \par
00380         cout << {\cf22 "Total overhead for all the schedulers: "} << tot_sched_oh.to_seconds() << endl;\par
00381 \par
00382 {\cf21         #if defined _SAVE_CSV_}\par
00383             myStatFile << {\cf22 "Tot Schedulers Overhead,"}; {\cf20 // @suppress("Function cannot be resolved")}\par
00384             myStatFile << to_string(tot_sched_oh.to_seconds()) +{\cf22 ","}; {\cf20 // @suppress("Function cannot be resolved")}\par
00385 {\cf21         #endif}\par
00386 \par
00387         cout << endl;\par
00388 \par
00389 {\cf21         #if _WIN32}\par
00390                 system({\cf22 "pause"});\par
00391 {\cf21         #endif}\par
00392 \par
00393 {\cf21     #endif}\par
00394 \par
00398 \par
00399 {\cf21     #if defined(_DEBUG_)}\par
00400         cout << endl << {\cf22 "CHANNELS MAPPING"} << endl << endl;\par
00401         {\cf19 for}({\cf18 unsigned} {\cf18 int} j=0; j<NCH; j++)\par
00402         \{\par
00403             cout << {\cf22 "Channel "} << pSystemManager->VCH[j].name <<{\cf22 "["} <<pSystemManager->VCH[j].id << {\cf22 "] is on Physical Link "} << pSystemManager->VPL[pSystemManager->allocationCH_PL[j]].getName()<<{\cf22 "["}<< pSystemManager->allocationCH_PL[j]<<{\cf22 "]"}<<endl;\par
00404         \}\par
00405         cout << endl;\par
00406 \par
00407 {\cf21         #if _WIN32}\par
00408                 system({\cf22 "pause"});\par
00409 {\cf21         #endif}\par
00410 {\cf21     #endif}\par
00411 \par
00412     cout << endl << {\cf22 "COMMUNICATION PROFILING"} << endl << endl;\par
00413 \par
00414     {\cf20 // Info about data transfers on CSP channels}\par
00415     cout << endl << {\cf22 "CHANNELS PROFILING"} << endl << endl;\par
00416 \par
00417     cout << {\cf22 "ID-W-R\\tBIT\\tNUM\\tBIT*NUM\\t[TIME(sec)]"} << endl << endl;\par
00418     {\cf19 for}( {\cf18 unsigned} {\cf18 int} j=0; j<NCH; j++)\par
00419     \{\par
00420             cout << pSystemManager->VCH[j].id << {\cf22 "-"} << pSystemManager->VCH[j].w_id << {\cf22 "-"} << pSystemManager->VCH[j].r_id << {\cf22 ": "}\par
00421                 << pSystemManager->VCH[j].width << {\cf22 "\\t"} << pSystemManager->VCH[j].num << {\cf22 "\\t"} << pSystemManager->VCH[j].width*pSystemManager->VCH[j].num\par
00422                 \par
00423 {\cf21                 #if defined(_TIMING_ENERGY_)}\par
00424                     << {\cf22 "\\t"} << pSystemManager->VCH[j].working_time.to_seconds()\par
00425 {\cf21                 #endif}\par
00426                 \par
00427                 << endl;\par
00428 \par
00429     \}\par
00430     cout << endl;\par
00431 \par
00432 {\cf21     #if _WIN32}\par
00433         system({\cf22 "pause"});\par
00434 {\cf21     #endif}\par
00435 \par
00439 \par
00440 {\cf21     #if defined(_TIMING_ENERGY_)}\par
00441         {\cf20 // Energy info}\par
00442         {\cf18 double} totEnergyProcesses = 0;\par
00443         {\cf18 double} totEnergyChannels = 0;\par
00444         {\cf18 double} totEnergySchedulers = 0;\par
00445         {\cf18 double} totEnergyPartSchedulers = 0;\par
00446         {\cf18 double} totEnergy = 0;\par
00447 \par
00448         cout << endl << {\cf22 "Average ENERGY for each process:"} << endl;\par
00449 \par
00450 {\cf21         #if defined _SAVE_CSV_}\par
00451             myStatFile << {\cf22 "Energy For Processes,"}; {\cf20 // @suppress("Function cannot be resolved")}\par
00452 {\cf21         #endif}\par
00453 \par
00454         {\cf19 for}({\cf18 unsigned} i =2; i<pSystemManager->VPS.size(); i++)\par
00455         \{\par
00456             cout << pSystemManager->VPS[i].id << {\cf22 " - "} << pSystemManager->VPS[i].name << {\cf22 "\\t\\t"} << (pSystemManager->VPS[i].energy/pSystemManager->VPS[i].profiling) <<{\cf22 " uJ"}<< endl;\par
00457             totEnergyProcesses+=pSystemManager->VPS[i].getEnergy();\par
00458 \par
00459 {\cf21             #if defined _SAVE_CSV_}\par
00460                 myStatFile << to_string(pSystemManager->VPS[i].energy/pSystemManager->VPS[i].profiling) +{\cf22 ","}; {\cf20 // @suppress("Function cannot be resolved")}\par
00461 {\cf21             #endif}\par
00462 \par
00463         \}\par
00464         cout<<endl;\par
00465         cout << {\cf22 "Total ENERGY for all the processes: "} << totEnergyProcesses <<{\cf22 " uJ"} <<endl;\par
00466 \par
00467 {\cf21         #if defined _SAVE_CSV_}\par
00468             myStatFile << {\cf22 "Total Energy Processes,"}; {\cf20 // @suppress("Function cannot be resolved")}\par
00469             myStatFile << to_string(totEnergyProcesses) +{\cf22 ","}; {\cf20 // @suppress("Function cannot be resolved")}\par
00470 {\cf21         #endif}\par
00471 \par
00472         cout << endl << {\cf22 "CHANNEL ENERGY:"} << endl<<endl;\par
00473         cout<<{\cf22 "ID-W-R\\tENERGY (uJ)"}<<endl<<endl;\par
00474         {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 0; i<NCH; i++)\par
00475         \{\par
00476             cout << pSystemManager->VCH[i].id <<{\cf22 "-"}<<pSystemManager->VCH[i].w_id << {\cf22 "-"} << pSystemManager->VCH[i].r_id << {\cf22 "\\t"}<< pSystemManager->VCH[i].working_energy <<{\cf22 " uJ"}<< endl;\par
00477             totEnergyChannels+=pSystemManager->VCH[i].working_energy;\par
00478         \}\par
00479         cout<<endl;\par
00480         cout << {\cf22 "Total ENERGY for all the channels: "} << totEnergyChannels <<{\cf22 " uJ"} <<endl;\par
00481 \par
00482         cout << endl << {\cf22 "SCHEDULERS ENERGY:"} << endl;\par
00483 \par
00484 {\cf21         #if defined _SAVE_CSV_}\par
00485             myStatFile << {\cf22 "SCHEDULERS ENERGY,"}; {\cf20 // @suppress("Function cannot be resolved")}\par
00486 {\cf21         #endif}\par
00487 \par
00488         {\cf19 for}({\cf18 int} i = 0; i<NBB; i++) {\cf20 // Figures for SPP will be always 0}\par
00489         \{\par
00490             cout << pSchedulingManager->sched_en[i] << {\cf22 " uJ"}<<endl;\par
00491             totEnergySchedulers+=pSchedulingManager->sched_en[i];\par
00492 \par
00493 {\cf21             #if defined _SAVE_CSV_}\par
00494                 myStatFile << to_string(pSchedulingManager->sched_en[i]) +{\cf22 ","}; {\cf20 // @suppress("Function cannot be resolved")}\par
00495 {\cf21             #endif}\par
00496         \}\par
00497 \par
00498         cout<<endl;\par
00499         cout << {\cf22 "Total ENERGY for all the Schedulers: "} << totEnergySchedulers <<{\cf22 " uJ"} <<endl;\par
00500 \par
00501 {\cf21         #if defined _SAVE_CSV_}\par
00502             myStatFile << {\cf22 "TOT SCHEDULERS ENERGY,"}; {\cf20 // @suppress("Function cannot be resolved")}\par
00503             myStatFile << to_string(totEnergySchedulers) +{\cf22 ","};\par
00504 {\cf21         #endif}\par
00505 \par
00506         cout<<endl;\par
00507 \par
00508         totEnergy = totEnergyProcesses + totEnergyChannels + totEnergySchedulers + totEnergyPartSchedulers;\par
00509 \par
00510         cout << endl << {\cf22 "Total Energy (processes + channels + schedulers):  "} << totEnergy <<{\cf22 " uJ"}<<endl;\par
00511 \par
00512 {\cf21         #if defined _LOAD_}\par
00513             pSystemManager->deleteConcXmlEnergy();\par
00514             pSystemManager->updateXmlEnergy();\par
00515 {\cf21         #endif}\par
00516 \par
00517 {\cf21         #if defined _SAVE_CSV_}\par
00518             myStatFile << {\cf22 "TOTAL ENERGY,"};\par
00519             myStatFile << to_string(totEnergy) +{\cf22 ","}; {\cf20 // @suppress("Function cannot be resolved")}\par
00520 {\cf21         #endif}\par
00521 \par
00522 {\cf21     #endif}\par
00523 \par
00527 \par
00528 {\cf21     #if (defined(_TIMING_ENERGY_) && defined(_LOAD_))}\par
00529 \par
00530         cout << endl << {\cf22 "LOAD ESTIMATION"} << endl;\par
00531 \par
00532         {\cf18 double} tot_proc_load = 0;\par
00533 \par
00534         pSystemManager->setFRT(end_sim);\par
00535         pSystemManager->loadEst(end_sim);\par
00536 \par
00537         {\cf19 for}({\cf18 unsigned} i =2; i<pSystemManager->VPS.size(); i++)\par
00538         \{\par
00539             cout <<endl<<{\cf22 "FRL:"}<<{\cf22 " "}<< pSystemManager->VPS[i].id << {\cf22 "-"} << pSystemManager->VPS[i].name << {\cf22 " "} << pSystemManager->getFRL()[i];\par
00540             tot_proc_load += pSystemManager->getFRL()[i];\par
00541         \}\par
00542         cout << endl << endl << {\cf22 "FINAL TOTAL LOAD: "} << tot_proc_load << endl << endl;\par
00543 \par
00544         pSystemManager->deleteConcXmlLoad();\par
00545         pSystemManager->updateXmlLoad();\par
00546 \par
00547 {\cf21     #endif}\par
00548 \par
00552 \par
00553 {\cf21     #if ((!defined(_TIMING_ENERGY_)) || (defined(_TIMING_ENERGY_) && defined(_CONCURRENCY_))) // Printed only if (1) functional analizer or (2) timing concurrency}\par
00554         {\cf20 // Number of times each process has been concurrently working with the others}\par
00555         cout << endl << {\cf22 "POTENTIAL PROCESSES CONCURRENCY"} << endl;\par
00556         cout << {\cf22 "  "};\par
00557         {\cf19 for} ({\cf18 int} j=2; j<NPS; j++)\par
00558         \{\par
00559             cout<< setw(8) << j;\par
00560         \}\par
00561         cout<< endl;\par
00562 \par
00563         {\cf19 for} ({\cf18 int} i=2; i<NPS; i++)\par
00564         \{\par
00565             cout << i << {\cf22 " "} ;\par
00566             {\cf19 for} ({\cf18 int} j=2; j<NPS; j++)\par
00567             \{\par
00568                 cout<< setw(8) << pSchedulingManager->matrixCONC_PS_RR[i][j];\par
00569             \}\par
00570             cout<<endl;\par
00571         \}\par
00572 \par
00573 {\cf21         #if _WIN32}\par
00574             system({\cf22 "pause"});\par
00575 {\cf21         #endif}\par
00576 {\cf21 #endif}\par
00577 \par
00578 {\cf21     #if (defined(_TIMING_ENERGY_) && defined(_CONCURRENCY_)) // Printed only if timing concurrency}\par
00579         {\cf20 // Number of times each process has been concurrently working with the others}\par
00580         cout << endl << {\cf22 "ACTUAL PROCESSES CONCURRENCY"} << endl;\par
00581         cout << {\cf22 "  "};\par
00582         {\cf19 for} ({\cf18 int} j=2; j<NPS; j++)\par
00583         \{\par
00584             cout<< setw(8) << j;\par
00585         \}\par
00586         cout<< endl;\par
00587 \par
00588         {\cf19 for} ({\cf18 int} i=2; i<NPS; i++)\par
00589         \{\par
00590             cout << i << {\cf22 " "} ;\par
00591             {\cf19 for} ({\cf18 int} j=2; j<NPS; j++)\par
00592             \{\par
00593                 cout<< setw(8) << pSchedulingManager->matrixCONC_PS_R[i][j];\par
00594             \}\par
00595             cout<<endl;\par
00596         \}\par
00597 \par
00598 {\cf21         #if _WIN32}\par
00599             system({\cf22 "pause"});\par
00600 {\cf21         #endif}\par
00601 {\cf21 #endif}\par
00602 \par
00603 {\cf21     #if ((!defined(_TIMING_ENERGY_)) || (defined(_TIMING_ENERGY_) && defined(_CONCURRENCY_))) // Printed only if (1) functional analizer or (2) timing concurrency}\par
00604         {\cf20 // Number of times each process has been concurrent with the others}\par
00605         {\cf20 //with respect to the number of checks}\par
00606         cout << endl << {\cf22 "NORMALIZED POTENTIAL PROCESSES CONCURRENCY (#TEST: "} << pSchedulingManager->num_tests_CONC_PS_RR << {\cf22 ")"} << endl;\par
00607         cout<< {\cf22 "   "};\par
00608         {\cf19 for} ({\cf18 int} j=2; j<NPS; j++)\par
00609         \{\par
00610             cout<< setw(8) << j;\par
00611         \}\par
00612         cout<< endl;\par
00613 \par
00614         {\cf19 for} ({\cf18 int} i=2; i<NPS; i++)\par
00615         \{\par
00616             cout<< setw(2) << i << {\cf22 " "} ;\par
00617             {\cf19 for} ({\cf18 int} j=2; j<NPS; j++)\par
00618             \{\par
00619                 pSchedulingManager->matrixCONC_PS_RR_N[i][j] = pSchedulingManager->matrixCONC_PS_RR[i][j]/(float)pSchedulingManager->num_tests_CONC_PS_RR;\par
00620                 cout<< setw(8) << setprecision(2) << pSchedulingManager->matrixCONC_PS_RR_N[i][j];\par
00621             \}\par
00622             cout<<endl;\par
00623         \}\par
00624 \par
00625 {\cf21         #if _WIN32}\par
00626             system({\cf22 "pause"});\par
00627 {\cf21         #endif}\par
00628 {\cf21 #endif}\par
00629 \par
00630 {\cf21     #if (defined(_TIMING_ENERGY_) && defined(_CONCURRENCY_)) // Printed only if timing concurrency}\par
00631         {\cf20 // Number of times each process has been concurrent with the others}\par
00632         {\cf20 //with respect to the number of checks}\par
00633             cout << endl << {\cf22 "NORMALIZED ACTUAL PROCESSES CONCURRENCY (#TEST: "} << pSchedulingManager->num_tests_CONC_PS_R << {\cf22 ")"} << endl;\par
00634         cout<< {\cf22 "   "};\par
00635         {\cf19 for} ({\cf18 int} j=2; j<NPS; j++)\par
00636         \{\par
00637             cout<< setw(8) << j;\par
00638         \}\par
00639         cout<< endl;\par
00640 \par
00641         {\cf19 for} ({\cf18 int} i=2; i<NPS; i++)\par
00642         \{\par
00643             cout<< setw(2) << i << {\cf22 " "} ;\par
00644             {\cf19 for} ({\cf18 int} j=2; j<NPS; j++)\par
00645             \{\par
00646                 pSchedulingManager->matrixCONC_PS_R_N[i][j] = pSchedulingManager->matrixCONC_PS_R[i][j]/(float)pSchedulingManager->num_tests_CONC_PS_R;\par
00647                 cout<< setw(8) << setprecision(2) << pSchedulingManager->matrixCONC_PS_R_N[i][j];\par
00648             \}\par
00649             cout<<endl;\par
00650         \}\par
00651 \par
00652 {\cf21         #if _WIN32}\par
00653             system({\cf22 "pause"});\par
00654 {\cf21         #endif}\par
00655 {\cf21 #endif}\par
00656 \par
00657 {\cf21     #if ((!defined(_TIMING_ENERGY_)) || (defined(_TIMING_ENERGY_) && defined(_CONCURRENCY_))) // Printed only if (1) functional analizer or (2) timing concurrency}\par
00658         {\cf20 // Number of times each channels has been concurrently working with the others}\par
00659         cout << endl << {\cf22 "POTENTIAL CHANNELS CONCURRENCY"} << endl;\par
00660         cout<< setw(2) << {\cf22 "   "};\par
00661         {\cf19 for} ({\cf18 int} j=0; j<NCH; j++)\par
00662         \{\par
00663             cout<< setw(8) << j;\par
00664         \}\par
00665         cout<< endl;\par
00666 \par
00667         {\cf19 for} ({\cf18 int} i=0; i<NCH; i++)\par
00668         \{\par
00669             cout<< setw(2) << i << {\cf22 " "} ;\par
00670             {\cf19 for} ({\cf18 int} j=0; j<NCH; j++)\par
00671             \{\par
00672                 cout<< setw(8) << setprecision(2) << pSchedulingManager->matrixCONC_CH_RR[i][j];\par
00673             \}\par
00674             cout<<endl;\par
00675         \}\par
00676 \par
00677 {\cf21         #if _WIN32}\par
00678             system({\cf22 "pause"});\par
00679 {\cf21         #endif}\par
00680 {\cf21 #endif}\par
00681 \par
00682 {\cf21     #if (defined(_TIMING_ENERGY_) && defined(_CONCURRENCY_)) // Printed only if timing concurrency}\par
00683         {\cf20 // Number of times each channels has been concurrently working with the others}\par
00684         cout << endl << {\cf22 "ACTUAL CHANNELS CONCURRENCY"} << endl;\par
00685         cout<< setw(2) << {\cf22 "   "};\par
00686         {\cf19 for} ({\cf18 int} j=0; j<NCH; j++)\par
00687         \{\par
00688             cout<< setw(8) << j;\par
00689         \}\par
00690         cout<< endl;\par
00691 \par
00692         {\cf19 for} ({\cf18 int} i=0; i<NCH; i++)\par
00693         \{\par
00694             cout<< setw(2) << i << {\cf22 " "} ;\par
00695             {\cf19 for} ({\cf18 int} j=0; j<NCH; j++)\par
00696             \{\par
00697                 cout<< setw(8) << setprecision(2) << pSchedulingManager->matrixCONC_CH_R[i][j];\par
00698             \}\par
00699             cout<<endl;\par
00700         \}\par
00701 \par
00702 {\cf21         #if _WIN32}\par
00703             system({\cf22 "pause"});\par
00704 {\cf21         #endif}\par
00705 {\cf21 #endif}\par
00706 \par
00707 {\cf21     #if ((!defined(_TIMING_ENERGY_)) || (defined(_TIMING_ENERGY_) && defined(_CONCURRENCY_))) // Printed only if (1) functional analizer or (2) timing concurrency}\par
00708         {\cf20 // Number of times each channels has been concurrently working with the others}\par
00709         {\cf20 //with respect to the number of checks}\par
00710         cout << endl << {\cf22 "NORMALIZED POTENTIAL CHANNELS CONCURRENCY (#TEST: "} << pSchedulingManager->num_tests_CONC_CH_RR << {\cf22 ")"} << endl;\par
00711         cout<< setw(2) << {\cf22 "   "};\par
00712         {\cf19 for} ({\cf18 int} j=0; j<NCH; j++)\par
00713         \{\par
00714             cout<< setw(8) << j;\par
00715         \}\par
00716         cout<< endl;\par
00717 \par
00718         {\cf19 for} ({\cf18 int} i=0; i<NCH; i++)\par
00719         \{\par
00720             cout<< setw(2) << i << {\cf22 " "} ;\par
00721             {\cf19 for} ({\cf18 int} j=0; j<NCH; j++)\par
00722             \{\par
00723                 pSchedulingManager->matrixCONC_CH_RR_N[i][j] = pSchedulingManager->matrixCONC_CH_RR[i][j]/(float)pSchedulingManager->num_tests_CONC_CH_RR;\par
00724                 cout<< setw(8) << setprecision(2) << pSchedulingManager->matrixCONC_CH_RR_N[i][j];\par
00725             \}\par
00726             cout<<endl;\par
00727         \}\par
00728 \par
00729 {\cf21         #if _WIN32}\par
00730             system({\cf22 "pause"});\par
00731 {\cf21         #endif}\par
00732 {\cf21 #endif}\par
00733 \par
00734 {\cf21     #if (defined(_TIMING_ENERGY_) && defined(_CONCURRENCY_)) // Printed only if timing concurrency}\par
00735         {\cf20 // Number of times each channels has been concurrently working with the others}\par
00736         {\cf20 //with respect to the number of checks}\par
00737         cout << endl << {\cf22 "NORMALIZED ACTUAL CHANNELS CONCURRENCY (#TEST: "} << pSchedulingManager->num_tests_CONC_CH_R << {\cf22 ")"} << endl;\par
00738         cout<< setw(2) << {\cf22 "   "};\par
00739         {\cf19 for} ({\cf18 int} j=0; j<NCH; j++)\par
00740         \{\par
00741             cout<< setw(8) << j;\par
00742         \}\par
00743         cout<< endl;\par
00744 \par
00745         {\cf19 for} ({\cf18 int} i=0; i<NCH; i++)\par
00746         \{\par
00747             cout<< setw(2) << i << {\cf22 " "} ;\par
00748             {\cf19 for} ({\cf18 int} j=0; j<NCH; j++)\par
00749             \{\par
00750                 pSchedulingManager->matrixCONC_CH_R_N[i][j] = pSchedulingManager->matrixCONC_CH_R[i][j]/(float)pSchedulingManager->num_tests_CONC_CH_R;\par
00751                 cout<< setw(8) << setprecision(2) << pSchedulingManager->matrixCONC_CH_R_N[i][j];\par
00752             \}\par
00753             cout<<endl;\par
00754         \}\par
00755 \par
00756 {\cf21         #if _WIN32}\par
00757             system({\cf22 "pause"});\par
00758 {\cf21         #endif}\par
00759 \par
00760         {\cf20 // Number of times each BB has been concurrently active with the others}\par
00761         cout << endl << {\cf22 "ACTUAL BB CONCURRENCY"} << endl;\par
00762         cout<< setw(2) << {\cf22 "   "};\par
00763         {\cf19 for} ({\cf18 int} j=0; j<NBB; j++)\par
00764         \{\par
00765             cout<< setw(8) << j;\par
00766         \}\par
00767         cout<< endl;\par
00768 \par
00769         {\cf19 for} ({\cf18 int} i=0; i<NBB; i++)\par
00770         \{\par
00771             cout<< setw(2) << i << {\cf22 " "} ;\par
00772             {\cf19 for} ({\cf18 int} j=0; j<NBB; j++)\par
00773             \{\par
00774                 cout<< setw(8) << setprecision(2) << pSchedulingManager->matrixCONC_BB[i][j];\par
00775             \}\par
00776             cout<<endl;\par
00777         \}\par
00778 \par
00779 {\cf21         #if _WIN32}\par
00780             system({\cf22 "pause"});\par
00781 {\cf21         #endif}\par
00782 \par
00783         {\cf20 // Number of times each BB has been concurrently active with the others}\par
00784         {\cf20 //with respect to the number of checks}\par
00785         cout << endl << {\cf22 "NORMALIZED ACTUAL BB CONCURRENCY (#TEST: "} << pSchedulingManager->num_tests_CONC_BB << {\cf22 ")"} << endl;\par
00786         cout<< setw(2) << {\cf22 "   "};\par
00787         {\cf19 for} ({\cf18 int} j=0; j<NBB; j++)\par
00788         \{\par
00789             cout<< setw(8) << j;\par
00790         \}\par
00791         cout<< endl;\par
00792 \par
00793         {\cf19 for} ({\cf18 int} i=0; i<NBB; i++)\par
00794         \{\par
00795             cout<< setw(2) << i << {\cf22 " "} ;\par
00796             {\cf19 for} ({\cf18 int} j=0; j<NBB; j++)\par
00797             \{\par
00798                 pSchedulingManager->matrixCONC_BB_N[i][j] = pSchedulingManager->matrixCONC_BB[i][j]/(float)pSchedulingManager->num_tests_CONC_BB;\par
00799                 cout<< setw(8) << setprecision(2) << pSchedulingManager->matrixCONC_BB_N[i][j];\par
00800             \}\par
00801             cout<<endl;\par
00802         \}\par
00803 \par
00804 {\cf21         #if _WIN32}\par
00805             system({\cf22 "pause"});\par
00806 {\cf21         #endif}\par
00807 \par
00808         {\cf20 // Number of times a group of BBs have been concurrently active}\par
00809         cout << endl << {\cf22 "ACTUAL BB GROUP CONCURRENCY"} << endl;\par
00810         {\cf19 for} ({\cf18 int} j=0; j<NBB+1; j++)\par
00811         \{\par
00812                 cout << j << {\cf22 " ACTIVE BBs: "} << pSchedulingManager->vectorCONC_BB[j] << endl;\par
00813         \}\par
00814 \par
00815         {\cf20 // Number of times a group of BBs have been concurrently active}\par
00816         cout << endl << {\cf22 "NORMALIZED ACTUAL BB GROUP CONCURRENCY (#TEST: "} << pSchedulingManager->num_tests_CONC_BB << {\cf22 ")"} << endl;\par
00817         {\cf19 for} ({\cf18 int} j=0; j<NBB+1; j++)\par
00818         \{\par
00819                 pSchedulingManager->vectorCONC_BB_N[j] = pSchedulingManager->vectorCONC_BB[j]/(float)pSchedulingManager->num_tests_CONC_BB;\par
00820                 cout << j << {\cf22 " ACTIVE BBs: "} << pSchedulingManager->vectorCONC_BB_N[j] << endl;\par
00821         \}\par
00822 \par
00823 {\cf21         #if _WIN32}\par
00824             system({\cf22 "pause"});\par
00825 {\cf21         #endif}\par
00826 {\cf21     #endif}\par
00827 \par
00828 {\cf21     #if ((!defined(_TIMING_ENERGY_))) // || (defined(_TIMING_ENERGY_) && defined(_CONCURRENCY_))) // Printed only if (1) functional analizer or (2) timing concurrency}\par
00829         cout << {\cf22 "Processes and Channels Concurrency, and Channels Communication XML update"} << endl;\par
00830 \par
00831         {\cf20 // LP: Da controllare}\par
00832         pSystemManager->deleteConcXmlConCom();\par
00833 \par
00834         {\cf20 // LP: da controllare}\par
00835         pSystemManager->updateXmlConCom(pSchedulingManager->matrixCONC_PS_RR_N, pSchedulingManager->matrixCOM, pSchedulingManager->matrixCONC_CH_RR_N);\par
00836 {\cf21     #endif}\par
00837 \par
00838 {\cf21     #if defined _SAVE_CSV_}\par
00839         myStatFile << {\cf22 "\\n"};;\par
00840 \par
00841         {\cf20 // Save information about final population statistics into csv file}\par
00842         myStatFile.close();\par
00843 {\cf21     #endif}\par
00844 \par
00845 {\cf21     #if _WIN32}\par
00846         system({\cf22 "pause"});\par
00847 {\cf21     #endif}\par
00848 \par
00849     {\cf19 return} 0;\par
00850 \}\par
}
{
\ql
References SystemManager::allocationCH_PL, SystemManager::allocationPS_BB, SystemManager::deleteConcXmlConCom(), SystemManager::deleteConcXmlEnergy(), SystemManager::deleteConcXmlLoad(), SystemManager::getFRL(), SystemManager::loadEst(), NBB, NCH, NPS, pSchedulingManager, pSystemManager, SystemManager::setFRT(), SystemManager::updateXmlConCom(), SystemManager::updateXmlEnergy(), SystemManager::updateXmlLoad(), SystemManager::VBB, SystemManager::VCH, SystemManager::VPL, and SystemManager::VPS.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "group__firfirgcd__main__group_ga865e3def6cd1a641230218579d0a958f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v pSchedulingManager\:FirFirGCD Main.}
{\xe \v FirFirGCD Main.\:pSchedulingManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SchedulingManager* pSchedulingManager = new SchedulingManager("SchedulingManager")}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 166 of file main.cpp.}\par
{
\ql
Referenced by sc_csp_channel< T >::read(), sc_main(), and sc_csp_channel< T >::write().}\par
}
{\xe \v pSystemManager\:FirFirGCD Main.}
{\xe \v FirFirGCD Main.\:pSystemManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SystemManager}* pSystemManager = new {\b SystemManager}()}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 163 of file main.cpp.}\par
{
\ql
Referenced by sc_csp_channel< T >::init(), sc_csp_channel< T >::read(), sc_csp_channel< T >::sc_csp_channel(), sc_main(), SC_MODULE(), and sc_csp_channel< T >::write().}\par
}
{\xe \v sampling_period\:FirFirGCD Main.}
{\xe \v FirFirGCD Main.\:sampling_period}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int sampling_period = 1000}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 170 of file main.cpp.}\par
}
{\xe \v stop_concurrency_sampling\:FirFirGCD Main.}
{\xe \v FirFirGCD Main.\:stop_concurrency_sampling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool stop_concurrency_sampling =false}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 171 of file main.cpp.}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FirFirGCD Mainsystem.\par \pard\plain 
{\tc\tcl2 \v FirFirGCD Mainsystem.}
{\xe \v FirFirGCD Mainsystem.}
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mainsystem Implementation. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SC_MODULE} (mainsystem)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mainsystem Implementation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v SC_MODULE\:FirFirGCD Mainsystem.}
{\xe \v FirFirGCD Mainsystem.\:SC_MODULE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SC_MODULE (mainsystem )}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file mainsystem.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00081 \{\par
00082     {\cf20 // Ports for testbench connections}\par
00083     sc_port< sc_csp_channel_in_if< sc_uint<8> > > stim1_channel_port;\par
00084     sc_port< sc_csp_channel_in_if< sc_uint<8> > > stim2_channel_port;\par
00085     sc_port< sc_csp_channel_out_if< sc_uint<8> > > result_channel_port;\par
00086 \par
00087     {\cf20 // PROCESSES}\par
00088 \par
00089     {\cf18 void} fir8_main();\par
00090     {\cf18 void} fir8_evaluation();\par
00091     {\cf18 void} fir8_shifting();\par
00092 \par
00093     {\cf18 void} fir16_main();\par
00094     {\cf18 void} fir16_evaluation();\par
00095     {\cf18 void} fir16_shifting();\par
00096 \par
00097     {\cf20 // Process}\par
00098     {\cf18 void} gcd_main();\par
00099     {\cf18 void} gcd_evaluation();\par
00100 \par
00101     {\cf20 // CHANNELS}\par
00102 \par
00103     {\cf20 // fir8}\par
00104     sc_csp_channel< fir8e_parameters > *fir8e_parameters_channel;\par
00105     sc_csp_channel< fir8e_results > *fir8e_results_channel;\par
00106     sc_csp_channel< fir8s_parameters > *fir8s_parameters_channel;\par
00107     sc_csp_channel< fir8s_results > *fir8s_results_channel;\par
00108 \par
00109     {\cf20 // fir16}\par
00110     sc_csp_channel< fir16e_parameters > *fir16e_parameters_channel;\par
00111     sc_csp_channel< fir16e_results > *fir16e_results_channel;\par
00112     sc_csp_channel< fir16s_parameters > *fir16s_parameters_channel;\par
00113     sc_csp_channel< fir16s_results > *fir16s_results_channel;\par
00114 \par
00115     {\cf20 // gcd}\par
00116     sc_csp_channel< gcde_parameters > *gcde_parameters_channel;\par
00117     sc_csp_channel< gcde_results > *gcde_results_channel;\par
00118 \par
00119     {\cf20 // Inter-process connections}\par
00120     sc_csp_channel< sc_uint<8> > *results8_channel;\par
00121     sc_csp_channel< sc_uint<8> >   *results16_channel;\par
00122 \par
00123     SC_CTOR(mainsystem)\par
00124     \{\par
00125         fir8e_parameters_channel= {\cf17 new} sc_csp_channel< fir8e_parameters > (0);\par
00126         fir8e_results_channel= {\cf17 new} sc_csp_channel< fir8e_results > (1);\par
00127         fir8s_parameters_channel= {\cf17 new} sc_csp_channel< fir8s_parameters > (2);\par
00128         fir8s_results_channel= {\cf17 new} sc_csp_channel< fir8s_results > (3);\par
00129 \par
00130         fir16e_parameters_channel= {\cf17 new} sc_csp_channel< fir16e_parameters > (4);\par
00131         fir16e_results_channel= {\cf17 new} sc_csp_channel< fir16e_results > (5);\par
00132         fir16s_parameters_channel= {\cf17 new} sc_csp_channel< fir16s_parameters > (6);\par
00133         fir16s_results_channel= {\cf17 new} sc_csp_channel< fir16s_results > (7);\par
00134 \par
00135         gcde_parameters_channel = {\cf17 new} sc_csp_channel< gcde_parameters > (10);\par
00136         gcde_results_channel = {\cf17 new} sc_csp_channel< gcde_results > (11);\par
00137 \par
00138         results8_channel= {\cf17 new} sc_csp_channel< sc_uint<8> > (8);\par
00139         results16_channel= {\cf17 new} sc_csp_channel< sc_uint<8> > (9);\par
00140 \par
00141         SC_THREAD(fir8_main);\par
00142         SC_THREAD(fir8_evaluation);\par
00143         SC_THREAD(fir8_shifting);\par
00144 \par
00145         SC_THREAD(fir16_main);\par
00146         SC_THREAD(fir16_evaluation);\par
00147         SC_THREAD(fir16_shifting);\par
00148 \par
00149         SC_THREAD(gcd_main);\par
00150         SC_THREAD(gcd_evaluation);\par
00151     \}\par
00152 \};\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FirFirGCD CSP Channel.\par \pard\plain 
{\tc\tcl2 \v FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.}
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CSP {\b Channel} Implementation. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b sc_csp_channel< T >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b sc_csp_channel< T >::register_port} (sc_port_base &, const char *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b sc_csp_channel< T >::read} (T &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual T {\b sc_csp_channel< T >::read} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b sc_csp_channel< T >::write} (const T &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sc_csp_channel< T >::trace} (sc_trace_file *tf) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sc_csp_channel< T >::init} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b sc_csp_channel< T >::read_test} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b sc_csp_channel< T >::write_test} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b sc_csp_channel< T >::register_alt} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const sc_event & {\b sc_csp_channel< T >::get_alt_event} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemManager} * {\b pSystemManager}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SchedulingManager * {\b pSchedulingManager}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CSP {\b Channel} Implementation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v get_alt_event\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:get_alt_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > const sc_event & {\b sc_csp_channel}< T >::get_alt_event{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b sc_core::sc_csp_channel_in_if< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 540 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00541 \{\par
00542     {\cf19 return} ready_alt_event;\par
00543 \}\par
}
}
{\xe \v init\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void {\b sc_csp_channel}< T >::init{\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 442 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00443 \{\par
00444     m_reader = 0;\par
00445     m_writer = 0;\par
00446 \par
00447     num=0;\par
00448     ready_to_read={\cf17 false};\par
00449     ready_to_write={\cf17 false};\par
00450     enable_alt_events = {\cf17 false};\par
00451 \par
00452     working_time = sc_time(0, SC_MS);\par
00453     working_energy=0;\par
00454 \par
00455     {\cf20 // verify if the processes are allocated on the same BB (then IPC=false)}\par
00456     {\cf19 if} ((w_id==stimulus_id) || (w_id==display_id) || (r_id==stimulus_id) || (r_id==display_id))\par
00457     \{\par
00458         {\cf20 // Communications toward testbench are always considered}\par
00459         IPC = {\cf17 true};\par
00460     \}\par
00461     {\cf19 else} {\cf19 if} (pSystemManager->VBB[pSystemManager->allocationPS_BB[w_id]].getProcessors()[0].getName() !=\par
00462         pSystemManager->VBB[pSystemManager->allocationPS_BB[r_id]].getProcessors()[0].getName())\par
00463     \{\par
00464         {\cf20 // Different BB names}\par
00465         IPC = {\cf17 true};\par
00466     \}\par
00467     {\cf19 else} {\cf19 if} (pSystemManager->VBB[pSystemManager->allocationPS_BB[w_id]].getId() !=\par
00468         pSystemManager->VBB[pSystemManager->allocationPS_BB[r_id]].getId())\par
00469     \{\par
00470         {\cf20 // Different BB instances}\par
00471         IPC = {\cf17 true};\par
00472     \}\par
00473     {\cf19 else} IPC={\cf17 false};\par
00474 \par
00475     {\cf19 if} (IPC=={\cf17 true})\par
00476     \{\par
00477 \par
00478         {\cf20 // compute the time needed for the communication}\par
00479         waiting_time = (ceil(({\cf18 float})width/pSystemManager->VPL[pSystemManager->allocationCH_PL[{\cf18 id}]].getPhysicalWidth())*pSystemManager->VPL[pSystemManager->allocationCH_PL[id]].getTcomm()+pSystemManager->VPL[pSystemManager->allocationCH_PL[id]].getTAcomm());\par
00480 \par
00481         {\cf20 // LP: non mi torna la trasmissione seriale di pi\'EF\'BF\'BD bit dato che ne consideriamo sempre solo uno alla volta (check tesi Marinella)}\par
00482         {\cf20 // compute the energy needed for the communication }\par
00483         {\cf20 // energy for x bit is: a2 * x^2 + a1 * x}\par
00484         {\cf20 // en_bit = energy for 1 bit = a2 + a1}\par
00485         {\cf18 float} en_bit =  pSystemManager->VPL[pSystemManager->allocationCH_PL[id]].geta2() + pSystemManager->VPL[pSystemManager->allocationCH_PL[id]].geta1();\par
00486 \par
00487         {\cf20 // energy for 1 transmission is: en_bit * PhysicalWidth}\par
00488         {\cf18 float} en_trans = en_bit * pSystemManager->VPL[pSystemManager->allocationCH_PL[id]].getPhysicalWidth();\par
00489 \par
00490         {\cf20 // energy for communication is: energy for 1 transmission * #transmissions}\par
00491         partial_energy = ceil(({\cf18 float})width/pSystemManager->VPL[pSystemManager->allocationCH_PL[{\cf18 id}]].getPhysicalWidth()) * en_trans;\par
00492 \par
00493     \}\par
00494     {\cf19 else}\par
00495     \{\par
00496 \par
00497         {\cf20 // Zero for processes on the same BB/PU}\par
00498         waiting_time = sc_time(0, SC_MS);\par
00499 \par
00500         {\cf20 // Zero for processes on the same BB/PU}\par
00501         partial_energy = 0;\par
00502 \par
00503     \}\par
00504 \par
00505 \}\par
}
{
\ql
References SystemManager::allocationCH_PL, SystemManager::allocationPS_BB, display_id, pSystemManager, stimulus_id, SystemManager::VBB, and SystemManager::VPL.}\par
}
{\xe \v read\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > T {\b sc_csp_channel}< T >::read{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b sc_core::sc_csp_channel_in_if< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 310 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00311 \{\par
00312     T tmp;\par
00313     read( tmp );\par
00314     {\cf19 return} tmp;\par
00315 \}\par
}
}
{\xe \v read\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void {\b sc_csp_channel}< T >::read (T &  {\i val_}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b sc_core::sc_csp_channel_in_if< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 232 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00233 \{\par
00234     {\cf20 //  Update process status (also testbench processes)}\par
00235     pSchedulingManager->process_state[r_id]=waiting;\par
00236     HEPSY_TRACE_PS_STATE(r_id)\par
00237 \par
00238     {\cf20 // Update channel status (if needed)}\par
00239     {\cf19 if} (pSchedulingManager->channel_state[{\cf18 id}]==waiting)\par
00240     \{\par
00241         pSchedulingManager->channel_state[id]=ready;\par
00242         HEPSY_TRACE_CH_STATE({\cf18 id})\par
00243     \}\par
00244 \par
00245     {\cf20 // Update BB mode (only for SPP, the others PUs are managed in the schedulers)}\par
00246     {\cf19 if} (pSystemManager->checkSPP(r_id)=={\cf17 true})\par
00247     \{\par
00248         pSchedulingManager->BB_mode[pSystemManager->allocationPS_BB[r_id]]=suspended;\par
00249         HEPSY_TRACE_BB_STATE(r_id)\par
00250     \}\par
00251 \par
00252     {\cf19 if}(ready_to_write=={\cf17 true})\par
00253     \{\par
00254         ready_to_read={\cf17 true};\par
00255         ready_to_read_event.notify(SC_ZERO_TIME);\par
00256         sc_core::wait(ready_to_write_event);\par
00257 \par
00258         val_=csp_buf;\par
00259 \par
00260         ready_to_read={\cf17 false};\par
00261         ready_to_read_event.notify(SC_ZERO_TIME);\par
00262     \}\par
00263     {\cf19 else}\par
00264     \{\par
00265         ready_to_read={\cf17 true};\par
00266 \par
00267         {\cf19 if} (enable_alt_events) ready_alt_event.notify(SC_ZERO_TIME); {\cf20 // added for ALT}\par
00268         sc_core::wait(ready_to_write_event);\par
00269 \par
00270         val_=csp_buf;\par
00271 \par
00272         ready_to_read={\cf17 false};\par
00273         ready_to_read_event.notify(SC_ZERO_TIME);\par
00274         sc_core::wait(ready_to_write_event);\par
00275     \}\par
00276 \par
00277     {\cf20 // Update BB mode}\par
00278     {\cf19 if} (pSchedulingManager->BB_mode[pSystemManager->allocationPS_BB[r_id]]==suspended)\par
00279     \{\par
00280         {\cf19 if} (pSystemManager->checkSPP(r_id)=={\cf17 true})\par
00281         \{\par
00282             pSchedulingManager->BB_mode[pSystemManager->allocationPS_BB[r_id]]=active;\par
00283             HEPSY_TRACE_BB_STATE(r_id)\par
00284         \}\par
00285         {\cf19 else} pSchedulingManager->activate[pSystemManager->allocationPS_BB[r_id]].notify(SC_ZERO_TIME); {\cf20 // Ask to the scheduler to reactivate BB}\par
00286     \}\par
00287 \par
00288     {\cf20 // Update channel status (if needed)}\par
00289     {\cf19 if} (pSchedulingManager->channel_state[{\cf18 id}]==ready)\par
00290     \{\par
00291         pSchedulingManager->channel_state[id]=waiting;\par
00292         HEPSY_TRACE_CH_STATE({\cf18 id})\par
00293     \}\par
00294 \par
00295     {\cf20 //  Update process status (also testbench processes)}\par
00296     {\cf19 if} (pSystemManager->checkSPP(r_id)=={\cf17 true}) pSchedulingManager->process_state[r_id]=running;\par
00297     {\cf19 else}\par
00298     \{\par
00299         pSchedulingManager->process_state[r_id]=ready;\par
00300 \par
00301         {\cf20 //WARNING: needed to correctly perform the round check (see WARNING in scheduler)}\par
00302         pSchedulingManager->process_status_changed[pSystemManager->allocationPS_BB[r_id]]={\cf17 true};\par
00303     \}\par
00304     HEPSY_TRACE_PS_STATE(r_id)\par
00305 \}\par
}
{
\ql
References active, SystemManager::allocationPS_BB, SystemManager::checkSPP(), HEPSY_TRACE_BB_STATE, HEPSY_TRACE_CH_STATE, HEPSY_TRACE_PS_STATE, pSchedulingManager, pSystemManager, ready, running, suspended, and waiting.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "group__firfirgcd__csp__channel__group_ga23046a4820dcf9ef26a75eba9cb7d49b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v read_test\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:read_test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > bool {\b sc_csp_channel}< T >::read_test{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b sc_core::sc_csp_channel_in_if< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 513 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00514 \{\par
00515     {\cf19 return} ready_to_write;\par
00516 \}\par
}
}
{\xe \v register_alt\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:register_alt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void {\b sc_csp_channel}< T >::register_alt{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b sc_core::sc_csp_channel_in_if< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 531 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00532 \{\par
00533     enable_alt_events = {\cf17 true};\par
00534 \}\par
}
}
{\xe \v register_port\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:register_port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void {\b sc_csp_channel}< T >::register_port (sc_port_base &  {\i port_}, const char *  {\i if_typename_}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 202 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00204 \{\par
00205     std::string nm( if_typename_ );\par
00206     {\cf19 if}( nm == {\cf17 typeid}( sc_csp_channel_in_if<T> ).name())\par
00207     \{\par
00208         {\cf20 // only one reader can be connected}\par
00209         {\cf19 if}( m_reader != 0 ) \{\par
00210             SC_REPORT_ERROR({\cf22 "sc_csp_channel<T> cannot have more than one reader"}, 0 );\par
00211     \}\par
00212     m_reader = &port_;\par
00213     \} {\cf19 else} {\cf19 if}( nm == {\cf17 typeid}( sc_csp_channel_out_if<T> ).name()) \{\par
00214         {\cf20 // only one writer can be connected}\par
00215         {\cf19 if}( m_writer != 0 ) \{\par
00216             SC_REPORT_ERROR({\cf22 "sc_csp_channel<T> cannot have more than one writer"}, 0 );\par
00217         \}\par
00218     m_writer = &port_;\par
00219     \}\par
00220     {\cf19 else}\par
00221     \{\par
00222         SC_REPORT_ERROR( SC_ID_BIND_IF_TO_PORT_, \par
00223                      {\cf22 "sc_csp_channel<T> port not recognized"} );\par
00224     \}\par
00225 \}\par
}
}
{\xe \v trace\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:trace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void {\b sc_csp_channel}< T >::trace (sc_trace_file *  {\i tf}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 433 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00434 \{\par
00435     {\cf20 // WIP}\par
00436 \}\par
}
}
{\xe \v write\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > void {\b sc_csp_channel}< T >::write (const T &  {\i val_}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b sc_core::sc_csp_channel_out_if< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 322 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00323 \{\par
00324     {\cf20 //  Update process status (also testbench processes)}\par
00325     pSchedulingManager->process_state[w_id]=waiting;\par
00326     HEPSY_TRACE_PS_STATE(w_id)\par
00327 \par
00328     {\cf20 // Update channel status (if needed)}\par
00329     {\cf19 if} (pSchedulingManager->channel_state[{\cf18 id}]==waiting)\par
00330     \{\par
00331         pSchedulingManager->channel_state[id]=ready;\par
00332         HEPSY_TRACE_CH_STATE({\cf18 id})\par
00333     \}\par
00334 \par
00335     {\cf20 // Update BB mode (only for SPP, the others PUs are managed in the schedulers)}\par
00336     {\cf19 if} (pSystemManager->checkSPP(w_id)=={\cf17 true})\par
00337     \{\par
00338         pSchedulingManager->BB_mode[pSystemManager->allocationPS_BB[w_id]]=suspended;\par
00339         HEPSY_TRACE_BB_STATE(w_id)\par
00340     \}\par
00341 \par
00342     {\cf19 if}( ready_to_read=={\cf17 true})\par
00343     \{\par
00344         csp_buf=val_;\par
00345 \par
00346         ready_to_write={\cf17 true};\par
00347         ready_to_write_event.notify(SC_ZERO_TIME);\par
00348         sc_core::wait(ready_to_read_event);\par
00349 \par
00350         {\cf20 // Update channel status}\par
00351         pSchedulingManager->channel_state[id]=running;\par
00352         HEPSY_TRACE_CH_STATE({\cf18 id})\par
00353 \par
00354         {\cf20 // Manage simulated time and energy}\par
00355         wait(waiting_time);\par
00356         working_time+= waiting_time;\par
00357         working_energy+=partial_energy;\par
00358 \par
00359         {\cf20 // Update channel status}\par
00360         pSchedulingManager->channel_state[id]=ready;\par
00361         HEPSY_TRACE_CH_STATE({\cf18 id})\par
00362 \par
00363         ready_to_write={\cf17 false};\par
00364         ready_to_write_event.notify(SC_ZERO_TIME);\par
00365     \}\par
00366     {\cf19 else}\par
00367     \{\par
00368         ready_to_write={\cf17 true};\par
00369 \par
00370         {\cf19 if} (enable_alt_events) ready_alt_event.notify(SC_ZERO_TIME); {\cf20 // added for ALT}\par
00371         sc_core::wait(ready_to_read_event);\par
00372 \par
00373         csp_buf=val_;\par
00374 \par
00375         {\cf20 // Update channel status}\par
00376         pSchedulingManager->channel_state[id]=running;\par
00377         HEPSY_TRACE_CH_STATE({\cf18 id})\par
00378 \par
00379         {\cf20 // Manage simulated time and energy}\par
00380         wait(waiting_time);\par
00381         working_time+= waiting_time;\par
00382         working_energy+=partial_energy;\par
00383 \par
00384         {\cf20 // Update channel status}\par
00385         pSchedulingManager->channel_state[id]=ready;\par
00386         HEPSY_TRACE_CH_STATE({\cf18 id})\par
00387 \par
00388         ready_to_write={\cf17 false};\par
00389         ready_to_write_event.notify(SC_ZERO_TIME);\par
00390         sc_core::wait(ready_to_read_event);\par
00391     \}                                       \par
00392 \par
00393     {\cf20 // Update BB mode}\par
00394     {\cf19 if} (pSchedulingManager->BB_mode[pSystemManager->allocationPS_BB[w_id]]==suspended)\par
00395     \{\par
00396         {\cf19 if} (pSystemManager->checkSPP(w_id)=={\cf17 true})\par
00397         \{\par
00398             pSchedulingManager->BB_mode[pSystemManager->allocationPS_BB[w_id]]=active;\par
00399             HEPSY_TRACE_BB_STATE(w_id)\par
00400         \}\par
00401         {\cf19 else}\par
00402             pSchedulingManager->activate[pSystemManager->allocationPS_BB[w_id]].notify(SC_ZERO_TIME);\par
00403     \}\par
00404 \par
00405     {\cf20 // Update channel status (if needed)}\par
00406     {\cf19 if} (pSchedulingManager->channel_state[{\cf18 id}]==ready)\par
00407     \{\par
00408         pSchedulingManager->channel_state[id]=waiting;\par
00409         HEPSY_TRACE_CH_STATE({\cf18 id})\par
00410     \}\par
00411 \par
00412     {\cf20 //  Update process status}\par
00413     {\cf19 if} (pSystemManager->checkSPP(w_id)=={\cf17 true}) pSchedulingManager->process_state[w_id]=running;\par
00414     {\cf19 else}\par
00415     \{\par
00416         pSchedulingManager->process_state[w_id]=ready;\par
00417 \par
00418         {\cf20 //WARNING: needed to correctly perform the round check (see WARNING in scheduler)}\par
00419         pSchedulingManager->process_status_changed[pSystemManager->allocationPS_BB[w_id]]={\cf17 true};\par
00420     \}\par
00421     HEPSY_TRACE_PS_STATE(w_id)\par
00422 \par
00423     {\cf20 // Channel profiling (done only in write metod)}\par
00424     num++;\par
00425     pSystemManager->VCH[id].setNum(num);\par
00426     pSystemManager->VCH[id].working_time = working_time;\par
00427     pSystemManager->VCH[id].working_energy = working_energy;\par
00428 \}\par
}
{
\ql
References active, SystemManager::allocationPS_BB, SystemManager::checkSPP(), HEPSY_TRACE_BB_STATE, HEPSY_TRACE_CH_STATE, HEPSY_TRACE_PS_STATE, pSchedulingManager, pSystemManager, ready, running, suspended, SystemManager::VCH, and waiting.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "group__firfirgcd__csp__channel__group_gaf8a9ace576ff2e0462c8db276f9f388d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v write_test\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:write_test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > bool {\b sc_csp_channel}< T >::write_test{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b sc_core::sc_csp_channel_out_if< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 522 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00523 \{\par
00524     {\cf19 return} ready_to_read;\par
00525 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v pSchedulingManager\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:pSchedulingManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SchedulingManager* pSchedulingManager}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 166 of file main.cpp.}\par
{
\ql
Referenced by sc_csp_channel< T >::read(), sc_main(), and sc_csp_channel< T >::write().}\par
}
{\xe \v pSystemManager\:FirFirGCD CSP Channel.}
{\xe \v FirFirGCD CSP Channel.\:pSystemManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SystemManager}* pSystemManager}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 163 of file main.cpp.}\par
{
\ql
Referenced by sc_csp_channel< T >::init(), sc_csp_channel< T >::read(), sc_csp_channel< T >::sc_csp_channel(), and sc_csp_channel< T >::write().}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FirFirGCD CSP Channel Interfaces.\par \pard\plain 
{\tc\tcl2 \v FirFirGCD CSP Channel Interfaces.}
{\xe \v FirFirGCD CSP Channel Interfaces.}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CSP {\b Channel} Interfaces. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
 {\b sc_core}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CSP {\b Channel} Interfaces. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HEPSIM Scheduling Manager.\par \pard\plain 
{\tc\tcl2 \v HEPSIM Scheduling Manager.}
{\xe \v HEPSIM Scheduling Manager.}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scheduling Manager Implementation. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SC_MODULE} (SchedulingManager)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemManager} * {\b pSystemManager}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scheduling Manager Implementation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v SC_MODULE\:HEPSIM Scheduling Manager.}
{\xe \v HEPSIM Scheduling Manager.\:SC_MODULE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SC_MODULE (SchedulingManager )}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file SchedulingManager.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00086 \{\par
00087     {\cf17 public}:\par
00088 \par
00089     {\cf20 // Data structure to manage scheduling and analysis}\par
00090 \par
00091     state process_state[NPS]; {\cf20 // Status of processes: ready (waiting for PU), run, waiting (when a process is waiting to complete a communication over a channel)}\par
00092     state channel_state[NCH]; {\cf20 // Status of channels: ready (1 process is arrived), run (data transfer), waiting (0 processes)}\par
00093     state scheduler_state[NBB]; {\cf20 // Status of schedulers: run (scheduler is performing ContextSwitch activities), ready (waiting for token from a process), waiting (if BB suspended)}\par
00094 \par
00095     {\cf18 unsigned} {\cf18 int} matrixCOM[NPS][NPS]; {\cf20 //Communication Matrix}\par
00096 \par
00097     {\cf20 // Check READY&RUN - Potential concurrency}\par
00098     {\cf18 unsigned} {\cf18 int} matrixCONC_PS_RR[NPS][NPS]; {\cf20 //Processes Concurrency matrix}\par
00099     {\cf18 float} matrixCONC_PS_RR_N[NPS][NPS]; {\cf20 //Normalized Processes Concurrency matrix (with respect to the number of tests)}\par
00100     {\cf18 unsigned} {\cf18 int} matrixCONC_CH_RR[NCH][NCH]; {\cf20 //Channels Concurrency matrix}\par
00101     {\cf18 float} matrixCONC_CH_RR_N[NCH][NCH]; {\cf20 //Normalized Channels Concurrency matrix (with respect to the number of tests)}\par
00102 \par
00103     {\cf18 void} checkStatesProcessesRR(); {\cf20 // Check processes pairs}\par
00104     {\cf18 void} checkStatesChannelsRR(); {\cf20 // Check channels pairs}\par
00105 \par
00106     {\cf20 // Check only RUN - Actual concurrency}\par
00107     {\cf18 unsigned} {\cf18 int} matrixCONC_PS_R[NPS][NPS]; {\cf20 //Processes Concurrency matrix}\par
00108     {\cf18 float} matrixCONC_PS_R_N[NPS][NPS]; {\cf20 //Normalized Processes Concurrency matrix (with respect to the number of tests)}\par
00109     {\cf18 unsigned} {\cf18 int} matrixCONC_CH_R[NCH][NCH]; {\cf20 //Channels Concurrency matrix}\par
00110     {\cf18 float} matrixCONC_CH_R_N[NCH][NCH]; {\cf20 //Normalized Channels Concurrency matrix (with respect to the number of tests)}\par
00111 \par
00112     {\cf18 void} checkStatesProcessesR(); {\cf20 // Check processes pairs}\par
00113     {\cf18 void} checkStatesChannelsR(); {\cf20 // Check channels pairs}\par
00114 \par
00115     {\cf20 // Check BB (actual) concurrency}\par
00116     {\cf18 unsigned} {\cf18 int} matrixCONC_BB[NBB][NBB]; {\cf20 //BB Concurrency matrix}\par
00117     {\cf18 float} matrixCONC_BB_N[NBB][NBB]; {\cf20 //Normalized BB Concurrency matrix (number of tests?)}\par
00118     {\cf18 unsigned} {\cf18 int} vectorCONC_BB[NBB+1]; {\cf20 //Number of BBs concurrenty active}\par
00119     {\cf18 float} vectorCONC_BB_N[NBB+1]; {\cf20 //Normalized number of BBs concurrenty active (number of tests?)}\par
00120 \par
00121     {\cf18 void} checkStatesBB(); {\cf20 // Check BB pairs}\par
00122 \par
00123     {\cf20 //Number of concurrency tests: used to normalize the concurrency matrixes}\par
00124     {\cf18 unsigned} {\cf18 int} num_tests_CONC_PS_RR;\par
00125     {\cf18 unsigned} {\cf18 int} num_tests_CONC_PS_R;\par
00126     {\cf18 unsigned} {\cf18 int} num_tests_CONC_CH_RR;\par
00127     {\cf18 unsigned} {\cf18 int} num_tests_CONC_CH_R;\par
00128     {\cf18 unsigned} {\cf18 int} num_tests_CONC_BB;\par
00129 \par
00130     {\cf20 // Events exchanged by scheduler and processes on the base of process IDs}\par
00131     sc_event schedule[NPS], release[NPS];\par
00132 \par
00133     {\cf20 // Functional Analyzer}\par
00134     sc_event unblock;\par
00135     {\cf18 bool} blocked;\par
00136     {\cf18 bool} process_status_changed[NBB]; {\cf20 // Used to avoid the block of schedulers if some changes in the processes state happened}\par
00137 \par
00138     {\cf20 // Items used to manage state of BB/PU}\par
00139     mode BB_mode[NBB]; {\cf20 // Mode of BB (suspended, active)}\par
00140     sc_event activate[NBB];\par
00141 \par
00142     {\cf20 // Data structure to keep track of scheduler timing overhead (the array is of NBB elements, the one related to SPP will not be used)}\par
00143     sc_time sched_oh[NBB];\par
00144 \par
00145     {\cf20 // Data structure to keep track of scheduler energy consumption (the array is of NBB elements, the one related to SPP will not be used)}\par
00146     {\cf18 double} sched_en[NBB];\par
00147 \par
00148     {\cf20 // Data structure to keep track of the number of scheduler executions (i.e., scheduler SC_THREAD loops)}\par
00149     {\cf18 unsigned} {\cf18 int} sched_loops[NBB]; {\cf20 // (the array is of NBB elements, the one related to SPP will not be used)}\par
00150     {\cf20 // Data structure to keep track of the number of Context Switches}\par
00151     {\cf18 unsigned} {\cf18 int} sched_CS[NBB]; {\cf20 // (the array is of NBB elements, the one related to SPP will not be used)}\par
00152 \par
00153     ofstream LOG; {\cf20 // File to log each stat change (PSs, CHs, BBs, and schedulers)}\par
00154 \par
00155     {\cf20 //Scheduler instances assigned to SC_THREADs, one for each possible instance of of SW-PU (see instanceTL.xml)}\par
00156     {\cf18 void} scheduler_8051_0();\par
00157     {\cf18 void} scheduler_8051_1();\par
00158     {\cf18 void} scheduler_leon3_2();\par
00159     {\cf18 void} scheduler_leon3_3();\par
00160     {\cf18 void} functional_analyzer();\par
00161 \par
00162     {\cf20 // Timing concurrency analysis}\par
00163     {\cf18 void} concurrency_sampling();\par
00164 \par
00165     {\cf20 //Scheduling policies that can be used by scheduler instances}\par
00166     {\cf20 // pinstance: ID of BB/SW-PU}\par
00167     {\cf20 // full_oh: weight for context switch time (normally 1)}\par
00168     {\cf20 // part_oh: weight for activities of the scheduler that doesn't imply a context switch (normally 0.25)}\par
00169 \par
00170     {\cf18 void} policy_SCHED_RR({\cf18 int} pinstance, {\cf18 float} full_oh, {\cf18 float} part_oh);\par
00171     {\cf18 void} policy_SCHED_FCFS({\cf18 int} pinstance, {\cf18 float} full_oh, {\cf18 float} part_oh);\par
00172     {\cf18 void} policy_SCHED_FP({\cf18 int} pinstance, {\cf18 float} full_oh, {\cf18 float} part_oh);\par
00173 \par
00174     SC_CTOR(SchedulingManager)\par
00175     \{\par
00176         LOG.open({\cf22 "LOG.csv"}); {\cf20 // Open file (closed in the destructor)}\par
00177 \par
00178         {\cf20 // Creation of a scheduler instance for each possible instance of of SW-PU (as listed in instanceTL.xml) }\par
00179         {\cf20 // The NOT needed ones (i.e., no processes alocated on them) will self-quit}\par
00180 \par
00181 {\cf21         #if defined(_TIMING_ENERGY_)}\par
00182 \par
00183             SC_THREAD(scheduler_8051_0);\par
00184             SC_THREAD(scheduler_8051_1);\par
00185             SC_THREAD(scheduler_leon3_2);\par
00186             SC_THREAD(scheduler_leon3_3);\par
00187 \par
00188 {\cf21         #else}\par
00189 \par
00190             SC_THREAD(functional_analyzer);\par
00191 \par
00192 {\cf21         #endif}\par
00193 \par
00194 {\cf21         #if defined(_TIMING_ENERGY_) && defined(_CONCURRENCY_)}\par
00195 \par
00196             {\cf20 // Thread for concurrency analysis (if activated)}\par
00197             SC_THREAD(concurrency_sampling);\par
00198 \par
00199 {\cf21         #endif}\par
00200 \par
00201         LOG << {\cf22 "sep=;"} << endl; {\cf20 // LP: ???}\par
00202 \par
00203         {\cf20 // Init}\par
00204 \par
00205         {\cf19 for}({\cf18 unsigned} {\cf18 int} j=0; j<NBB; j++)\par
00206         \{\par
00207             scheduler_state[j] = undefined;\par
00208             {\cf19 if}(pSystemManager->VBB[j].getProcessors()[0].getProcessorType() != {\cf22 "SPP"})\par
00209             \{\par
00210                 HEPSY_TRACE_SCHED_STATE(j)                                                              \\\par
00211             \}\par
00212 \par
00213             sched_oh[j]=sc_time(0, SC_MS);\par
00214             sched_en[j]=0;\par
00215             sched_loops[j]=0;\par
00216             sched_CS[j]=0;\par
00217 \par
00218             BB_mode[j]=off;\par
00219             HEPSY_TRACE_BB_STATE_THIS(j)\par
00220 \par
00221             process_status_changed[j]={\cf17 false};\par
00222         \}\par
00223 \par
00224         {\cf19 for} ({\cf18 unsigned} {\cf18 int} j = 0; j<NBB+1; j++)\par
00225         \{\par
00226             vectorCONC_BB[j] = 0;\par
00227             vectorCONC_BB_N[j] = 0;\par
00228         \}\par
00229 \par
00230         {\cf20 // Init}\par
00231         {\cf19 for}({\cf18 unsigned} {\cf18 int} j=0; j<pSystemManager->VPS.size(); j++)\par
00232         \{\par
00233             {\cf19 if} (pSystemManager->checkSPP(j)=={\cf17 true}) process_state[j]=running;\par
00234             {\cf19 else} {\cf19 if} (j==0) process_state[j]=running;\par
00235             {\cf19 else} {\cf19 if} (j==1) process_state[j]=running;\par
00236             {\cf19 else} process_state[j]=ready;\par
00237             HEPSY_TRACE_PS_STATE_THIS(j)\par
00238 \par
00239             {\cf20 // BB with processes are activated}\par
00240             {\cf19 if} (BB_mode[pSystemManager->allocationPS_BB[j]]!=active)\par
00241             \{\par
00242                 BB_mode[pSystemManager->allocationPS_BB[j]]=active;             \par
00243                 HEPSY_TRACE_BB_STATE_THIS(j)\par
00244             \}\par
00245         \}\par
00246 \par
00247         {\cf19 for} ({\cf18 int} i=0; i<NPS; i++)\par
00248         \{\par
00249             {\cf19 for} ({\cf18 int} j=0; j<NPS; j++)\par
00250             \{\par
00251                 matrixCONC_PS_RR[i][j]=0;\par
00252                 matrixCONC_PS_RR_N[i][j]=0;\par
00253                 matrixCONC_PS_R[i][j]=0;\par
00254                 matrixCONC_PS_R_N[i][j]=0;\par
00255                 matrixCOM[i][j]=0;\par
00256             \}\par
00257         \}\par
00258 \par
00259         {\cf19 for} ({\cf18 int} i=0; i<NBB; i++)\par
00260         \{\par
00261             {\cf19 for} ({\cf18 int} j=0; j<NBB; j++)\par
00262             \{\par
00263                 matrixCONC_BB[i][j]=0;\par
00264             \}\par
00265         \}\par
00266 \par
00267         {\cf19 for} ({\cf18 int} i=0; i<NCH; i++)\par
00268         \{\par
00269             channel_state[i]=waiting;\par
00270             HEPSY_TRACE_CH_STATE_THIS(i)\par
00271 \par
00272             {\cf19 for} ({\cf18 int} j=0; j<NCH; j++)\par
00273             \{\par
00274                 matrixCONC_CH_RR[i][j]=0;\par
00275                 matrixCONC_CH_RR_N[i][j]=0;\par
00276                 matrixCONC_CH_R[i][j]=0;\par
00277                 matrixCONC_CH_R_N[i][j]=0;\par
00278             \}\par
00279         \}\par
00280 \par
00281         blocked = {\cf17 false};\par
00282         num_tests_CONC_PS_RR=0;\par
00283         num_tests_CONC_CH_RR=0;\par
00284         num_tests_CONC_PS_R=0;\par
00285         num_tests_CONC_CH_R=0;\par
00286         num_tests_CONC_BB=0;\par
00287 \par
00288     \}  \par
00289 \par
00290     ~SchedulingManager()\par
00291     \{\par
00292         LOG.close(); {\cf20 // Close file}\par
00293     \}\par
00294 \par
00295 \};\par
}
{
\ql
References active, SystemManager::allocationPS_BB, SystemManager::checkSPP(), HEPSY_TRACE_BB_STATE_THIS, HEPSY_TRACE_CH_STATE_THIS, HEPSY_TRACE_PS_STATE_THIS, HEPSY_TRACE_SCHED_STATE, NBB, NCH, NPS, off, pSystemManager, ready, running, undefined, SystemManager::VBB, SystemManager::VPS, and waiting.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "group__scheduling__manager__group_ga8bb983276d3b9929ea5985632a3fa4e0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v pSystemManager\:HEPSIM Scheduling Manager.}
{\xe \v HEPSIM Scheduling Manager.\:pSystemManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SystemManager}* pSystemManager}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 163 of file main.cpp.}\par
{
\ql
Referenced by sc_main(), and SC_MODULE().}\par
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FirFirGCD Stimulus.\par \pard\plain 
{\tc\tcl2 \v FirFirGCD Stimulus.}
{\xe \v FirFirGCD Stimulus.}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stimulus Implementation. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SC_MODULE} (stim_gen)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stimulus Implementation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v SC_MODULE\:FirFirGCD Stimulus.}
{\xe \v FirFirGCD Stimulus.\:SC_MODULE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SC_MODULE (stim_gen )}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file stim_gen.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00081 \{\par
00082     {\cf20 // Port for outputs to the channels}\par
00083     sc_port < sc_csp_channel_out_if < sc_uint<8> > > stim1_channel_port;        \par
00084     sc_port < sc_csp_channel_out_if < sc_uint<8> > > stim2_channel_port;        \par
00085 \par
00086     {\cf20 // Used to stop concurrency sampling (to allow the simulation to finish), if needed}\par
00087     {\cf18 bool} stop_sampling1, stop_sampling2;\par
00088 \par
00089     SC_CTOR(stim_gen)\par
00090     \{\par
00091         SC_THREAD(stimulus1);\par
00092         SC_THREAD(stimulus2);\par
00093 \par
00094         {\cf20 // Used to stop concurrency sampling (to allow the simulation to finish), if needed}\par
00095         stop_sampling1={\cf17 false};\par
00096         stop_sampling2={\cf17 false};\par
00097     \}  \par
00098 \par
00099     {\cf20 // Main methods}\par
00100     {\cf18 void} stimulus1();\par
00101     {\cf18 void} stimulus2();\par
00102 \};\par
}
}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HEPSIM System Manager.\par \pard\plain 
{\tc\tcl2 \v HEPSIM System Manager.}
{\xe \v HEPSIM System Manager.}
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System Manager Implementation. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SystemManager}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System Manager Implementation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HEPSIM Technologies Library.\par \pard\plain 
{\tc\tcl2 \v HEPSIM Technologies Library.}
{\xe \v HEPSIM Technologies Library.}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Technologies Library Implementation. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ProcessingUnit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Memory}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Process}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BasicBlock}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PhysicalLink}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Channel}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Technologies Library Implementation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V. Muttillo, L. Pomante \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Apr. 2022 \par
}}}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sc_core Namespace Reference\par \pard\plain 
{\tc\tcl2 \v sc_core}
{\xe \v sc_core}
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b sc_csp_channel_in_if}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b sc_csp_channel_out_if}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BasicBlock Class Reference\par \pard\plain 
{\tc\tcl2 \v BasicBlock}
{\xe \v BasicBlock}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\par
{
{\f2 #include <tl.h>}}\par
Collaboration diagram for BasicBlock:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_basic_block__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b getName} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (string x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setId} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b getType} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setType} (string x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getIdPU} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIdPU} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b ProcessingUnit} > {\b getProcessors} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setProcessor} (vector< {\b ProcessingUnit} > pu)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getCodeSize} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCodeSize} (unsigned int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getDataSize} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDataSize} (unsigned int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getEqG} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEqG} (unsigned int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getFRT} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFRT} (float x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b idPU}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b ProcessingUnit} > {\b vpu}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b codeSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b dataSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b eqG}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b FRT}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 219 of file tl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getCodeSize\:BasicBlock}
{\xe \v BasicBlock\:getCodeSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int BasicBlock::getCodeSize ()}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 277 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00277                                     \{\par
00278     {\cf19 return} this->codeSize;\par
00279 \}\par
}
}
{\xe \v getDataSize\:BasicBlock}
{\xe \v BasicBlock\:getDataSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int BasicBlock::getDataSize ()}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 285 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00285                                     \{\par
00286     {\cf19 return} this->dataSize;\par
00287 \}\par
}
}
{\xe \v getEqG\:BasicBlock}
{\xe \v BasicBlock\:getEqG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int BasicBlock::getEqG ()}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 293 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00293                                \{\par
00294     {\cf19 return} this->eqG;\par
00295 \}\par
}
}
{\xe \v getFRT\:BasicBlock}
{\xe \v BasicBlock\:getFRT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float BasicBlock::getFRT ()}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 305 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00305                          \{\par
00306     {\cf19 return} FRT;\par
00307 \}\par
}
}
{\xe \v getId\:BasicBlock}
{\xe \v BasicBlock\:getId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int BasicBlock::getId ()}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 229 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00230 \{\par
00231     {\cf19 return} this->id;\par
00232 \}\par
}
}
{\xe \v getIdPU\:BasicBlock}
{\xe \v BasicBlock\:getIdPU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int BasicBlock::getIdPU ()}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 250 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00251 \{\par
00252     {\cf19 return} this->idPU;\par
00253 \}\par
}
}
{\xe \v getName\:BasicBlock}
{\xe \v BasicBlock\:getName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string BasicBlock::getName ()}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 219 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00220 \{\par
00221     {\cf19 return} this->name;\par
00222 \}\par
}
}
{\xe \v getProcessors\:BasicBlock}
{\xe \v BasicBlock\:getProcessors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< {\b ProcessingUnit} > BasicBlock::getProcessors ()}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 271 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00272 \{\par
00273     {\cf19 return} vpu;\par
00274 \}\par
}
}
{\xe \v getType\:BasicBlock}
{\xe \v BasicBlock\:getType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string BasicBlock::getType ()}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 239 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00240 \{\par
00241     {\cf19 return} type;\par
00242 \}\par
}
}
{\xe \v setCodeSize\:BasicBlock}
{\xe \v BasicBlock\:setCodeSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BasicBlock::setCodeSize (unsigned int  {\i c})}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 281 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00281                                           \{\par
00282     this->codeSize = c;\par
00283 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_basic_block_a14bbb26476609a17b226400d2fd8ec05_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setDataSize\:BasicBlock}
{\xe \v BasicBlock\:setDataSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BasicBlock::setDataSize (unsigned int  {\i c})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 289 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00289                                           \{\par
00290     this->dataSize = d;\par
00291 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_basic_block_a9f71209e93288e8eb82311fe5961e2ff_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setEqG\:BasicBlock}
{\xe \v BasicBlock\:setEqG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BasicBlock::setEqG (unsigned int  {\i c})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 297 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00297                                      \{\par
00298     this->eqG = e;\par
00299 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_basic_block_aa3a9be4f5f76e76b91e5a3a009f95f44_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setFRT\:BasicBlock}
{\xe \v BasicBlock\:setFRT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BasicBlock::setFRT (float  {\i x})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 301 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00301                                \{\par
00302     FRT = x;\par
00303 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_basic_block_aee9fb07de76f430ec78e48e85c3d5fd9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setId\:BasicBlock}
{\xe \v BasicBlock\:setId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BasicBlock::setId (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 234 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00235 \{\par
00236     {\cf18 id} = x;\par
00237 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_basic_block_a1abdc5c467f903b3bb6f51fb68283b21_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setIdPU\:BasicBlock}
{\xe \v BasicBlock\:setIdPU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BasicBlock::setIdPU (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 255 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00256 \{\par
00257     idPU = x;\par
00258 \}\par
}
}
{\xe \v setName\:BasicBlock}
{\xe \v BasicBlock\:setName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BasicBlock::setName (string  {\i x})}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 224 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00225 \{\par
00226     name = x;\par
00227 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_basic_block_a2be928b15c8a74a0f171f97c285791f2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setProcessor\:BasicBlock}
{\xe \v BasicBlock\:setProcessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BasicBlock::setProcessor (vector< {\b ProcessingUnit} >  {\i pu})}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 260 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00261 \{\par
00262     vpu= p;\par
00263 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_basic_block_a4cbb966d0ce3b7364877cf6e46e33672_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setType\:BasicBlock}
{\xe \v BasicBlock\:setType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BasicBlock::setType (string  {\i x})}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 245 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00246 \{\par
00247     type = x;\par
00248 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_basic_block_ae33921bd8c15b268aba6f5b1526f893b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v codeSize\:BasicBlock}
{\xe \v BasicBlock\:codeSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int BasicBlock::codeSize{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 229 of file tl.h.}\par
}
{\xe \v dataSize\:BasicBlock}
{\xe \v BasicBlock\:dataSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int BasicBlock::dataSize{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 230 of file tl.h.}\par
}
{\xe \v eqG\:BasicBlock}
{\xe \v BasicBlock\:eqG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int BasicBlock::eqG{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 231 of file tl.h.}\par
}
{\xe \v FRT\:BasicBlock}
{\xe \v BasicBlock\:FRT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float BasicBlock::FRT{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 232 of file tl.h.}\par
}
{\xe \v id\:BasicBlock}
{\xe \v BasicBlock\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int BasicBlock::id{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 223 of file tl.h.}\par
}
{\xe \v idPU\:BasicBlock}
{\xe \v BasicBlock\:idPU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int BasicBlock::idPU{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 225 of file tl.h.}\par
}
{\xe \v name\:BasicBlock}
{\xe \v BasicBlock\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string BasicBlock::name{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 222 of file tl.h.}\par
}
{\xe \v type\:BasicBlock}
{\xe \v BasicBlock\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string BasicBlock::type{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 224 of file tl.h.}\par
}
{\xe \v vpu\:BasicBlock}
{\xe \v BasicBlock\:vpu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<{\b ProcessingUnit}> BasicBlock::vpu{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 226 of file tl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Channel Class Reference\par \pard\plain 
{\tc\tcl2 \v Channel}
{\xe \v Channel}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\par
{
{\f2 #include <tl.h>}}\par
Collaboration diagram for Channel:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_channel__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b getName} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (string x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setId} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getW_id} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setW_id} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getR_id} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setR_id} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getWidth} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWidth} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNum} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNum} (int x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b w_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b r_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b num}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b working_time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b working_energy}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 312 of file tl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getId\:Channel}
{\xe \v Channel\:getId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Channel::getId ()}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 559 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00560 \{\par
00561     {\cf19 return} this->id;\par
00562 \}\par
}
}
{\xe \v getName\:Channel}
{\xe \v Channel\:getName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Channel::getName ()}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 554 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00555 \{\par
00556     {\cf19 return} this->name;\par
00557 \}\par
}
}
{\xe \v getNum\:Channel}
{\xe \v Channel\:getNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Channel::getNum ()}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 579 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00580 \{\par
00581     {\cf19 return} this->num;\par
00582 \}\par
}
}
{\xe \v getR_id\:Channel}
{\xe \v Channel\:getR_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Channel::getR_id ()}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 574 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00575 \{\par
00576     {\cf19 return} this->r_id;\par
00577 \}\par
}
}
{\xe \v getW_id\:Channel}
{\xe \v Channel\:getW_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Channel::getW_id ()}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 569 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00570 \{\par
00571     {\cf19 return} this->w_id;\par
00572 \}\par
}
}
{\xe \v getWidth\:Channel}
{\xe \v Channel\:getWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Channel::getWidth ()}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 564 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00565 \{\par
00566     {\cf19 return} this->width;\par
00567 \}\par
}
}
{\xe \v setId\:Channel}
{\xe \v Channel\:setId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Channel::setId (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 589 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00590 \{\par
00591     {\cf18 id} = x;\par
00592 \}\par
}
{
\ql
Referenced by SystemManager::generateChannelInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_channel_a12e1cdd1b9887f1ed483d778772bfc53_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setName\:Channel}
{\xe \v Channel\:setName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Channel::setName (string  {\i x})}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 584 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00585 \{\par
00586     name = x;\par
00587 \}\par
}
{
\ql
Referenced by SystemManager::generateChannelInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_channel_a0a74f31ad2fd5c1bb1af019313e510c6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setNum\:Channel}
{\xe \v Channel\:setNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Channel::setNum (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 609 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00610 \{\par
00611     num = x;\par
00612 \}\par
}
{
\ql
Referenced by SystemManager::generateChannelInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_channel_adb8356f7bba44722ed6923684b8fdd7f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setR_id\:Channel}
{\xe \v Channel\:setR_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Channel::setR_id (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 604 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00605 \{\par
00606     r_id = x;\par
00607 \}\par
}
{
\ql
Referenced by SystemManager::generateChannelInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_channel_a87fe96b999c9503c2a8839ee6498f256_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setW_id\:Channel}
{\xe \v Channel\:setW_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Channel::setW_id (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 599 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00600 \{\par
00601     w_id = x;\par
00602 \}\par
}
{
\ql
Referenced by SystemManager::generateChannelInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_channel_af9e34fe60361f6e0c234e691d9d2824d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setWidth\:Channel}
{\xe \v Channel\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Channel::setWidth (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 594 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00595 \{\par
00596     width = x;\par
00597 \}\par
}
{
\ql
Referenced by SystemManager::generateChannelInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_channel_a448e2f0beb2b7ce2a02a19e2eaf17d55_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v id\:Channel}
{\xe \v Channel\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Channel::id}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 316 of file tl.h.}\par
}
{\xe \v name\:Channel}
{\xe \v Channel\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Channel::name}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 315 of file tl.h.}\par
}
{\xe \v num\:Channel}
{\xe \v Channel\:num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Channel::num}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 320 of file tl.h.}\par
}
{\xe \v r_id\:Channel}
{\xe \v Channel\:r_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Channel::r_id}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 318 of file tl.h.}\par
}
{\xe \v w_id\:Channel}
{\xe \v Channel\:w_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Channel::w_id}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 317 of file tl.h.}\par
}
{\xe \v width\:Channel}
{\xe \v Channel\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Channel::width}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 319 of file tl.h.}\par
}
{\xe \v working_energy\:Channel}
{\xe \v Channel\:working_energy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Channel::working_energy}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 322 of file tl.h.}\par
}
{\xe \v working_time\:Channel}
{\xe \v Channel\:working_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time Channel::working_time}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 321 of file tl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fir16e_parameters Struct Reference\par \pard\plain 
{\tc\tcl2 \v fir16e_parameters}
{\xe \v fir16e_parameters}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16m to fir16e. }}\par
{
{\f2 #include <datatype.h>}}\par
Collaboration diagram for fir16e_parameters:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structfir16e__parameters__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 19 > {\b acc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 9 > {\b coef} [16]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b shift} [16]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b sample_tmp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16m to fir16e. \par
}{
Definition at line 144 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v acc\:fir16e_parameters}
{\xe \v fir16e_parameters\:acc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<19> fir16e_parameters::acc}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file datatype.h.}\par
}
{\xe \v coef\:fir16e_parameters}
{\xe \v fir16e_parameters\:coef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<9> fir16e_parameters::coef[16]}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 149 of file datatype.h.}\par
}
{\xe \v sample_tmp\:fir16e_parameters}
{\xe \v fir16e_parameters\:sample_tmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> fir16e_parameters::sample_tmp}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 151 of file datatype.h.}\par
}
{\xe \v shift\:fir16e_parameters}
{\xe \v fir16e_parameters\:shift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> fir16e_parameters::shift[16]}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 150 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b datatype.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fir16e_results Struct Reference\par \pard\plain 
{\tc\tcl2 \v fir16e_results}
{\xe \v fir16e_results}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16e to fir16m. }}\par
{
{\f2 #include <datatype.h>}}\par
Collaboration diagram for fir16e_results:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structfir16e__results__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 19 > {\b acc}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16e to fir16m. \par
}{
Definition at line 153 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v acc\:fir16e_results}
{\xe \v fir16e_results\:acc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<19> fir16e_results::acc}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 155 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b datatype.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fir16s_parameters Struct Reference\par \pard\plain 
{\tc\tcl2 \v fir16s_parameters}
{\xe \v fir16s_parameters}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16m to fir16s. }}\par
{
{\f2 #include <datatype.h>}}\par
Collaboration diagram for fir16s_parameters:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structfir16s__parameters__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b shift} [16]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b sample_tmp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16m to fir16s. \par
}{
Definition at line 159 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v sample_tmp\:fir16s_parameters}
{\xe \v fir16s_parameters\:sample_tmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> fir16s_parameters::sample_tmp}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 162 of file datatype.h.}\par
}
{\xe \v shift\:fir16s_parameters}
{\xe \v fir16s_parameters\:shift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> fir16s_parameters::shift[16]}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 161 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b datatype.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fir16s_results Struct Reference\par \pard\plain 
{\tc\tcl2 \v fir16s_results}
{\xe \v fir16s_results}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16s to fir16m. }}\par
{
{\f2 #include <datatype.h>}}\par
Collaboration diagram for fir16s_results:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structfir16s__results__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b shift} [16]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16s to fir16m. \par
}{
Definition at line 166 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v shift\:fir16s_results}
{\xe \v fir16s_results\:shift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> fir16s_results::shift[16]}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 168 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b datatype.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fir8e_parameters Struct Reference\par \pard\plain 
{\tc\tcl2 \v fir8e_parameters}
{\xe \v fir8e_parameters}
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir8m to fir8e. }}\par
{
{\f2 #include "src/datatype.h"}}\par
Collaboration diagram for fir8e_parameters:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structfir8e__parameters__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 19 > {\b acc}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Example 1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 9 > {\b coef} [8]\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Example 2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b shift} [8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b sample_tmp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir8m to fir8e. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8e_parameters}\par
Some details about the {\b fir8e_parameters} struct. \par
}{
Definition at line 94 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v acc\:fir8e_parameters}
{\xe \v fir8e_parameters\:acc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<19> fir8e_parameters::acc}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Example 1. }}\par
{
Definition at line 96 of file datatype.h.}\par
}
{\xe \v coef\:fir8e_parameters}
{\xe \v fir8e_parameters\:coef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<9> fir8e_parameters::coef[8]}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Example 2. }}\par
{
Definition at line 97 of file datatype.h.}\par
}
{\xe \v sample_tmp\:fir8e_parameters}
{\xe \v fir8e_parameters\:sample_tmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> fir8e_parameters::sample_tmp}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Example 4. \par
}{
Definition at line 99 of file datatype.h.}\par
}
{\xe \v shift\:fir8e_parameters}
{\xe \v fir8e_parameters\:shift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> fir8e_parameters::shift[8]}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Example 3. \par
}{
Definition at line 98 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b datatype.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fir8e_results Struct Reference\par \pard\plain 
{\tc\tcl2 \v fir8e_results}
{\xe \v fir8e_results}
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8e_results} }}\par
{
{\f2 #include "src/datatype.h"}}\par
Collaboration diagram for fir8e_results:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structfir8e__results__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 19 > {\b acc}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8e_results} \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Some details about the {\b fir8e_results} struct. \par
Message from fir8e to fir8m \par
}{
Definition at line 109 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v acc\:fir8e_results}
{\xe \v fir8e_results\:acc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<19> fir8e_results::acc}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b datatype.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fir8s_parameters Struct Reference\par \pard\plain 
{\tc\tcl2 \v fir8s_parameters}
{\xe \v fir8s_parameters}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8s_parameters} }}\par
{
{\f2 #include "src/datatype.h"}}\par
Collaboration diagram for fir8s_parameters:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structfir8s__parameters__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b shift} [8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b sample_tmp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8s_parameters} \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Some details about the {\b fir8s_parameters} struct. \par
Message from fir8m to fir8s \par
}{
Definition at line 121 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v sample_tmp\:fir8s_parameters}
{\xe \v fir8s_parameters\:sample_tmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> fir8s_parameters::sample_tmp}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file datatype.h.}\par
}
{\xe \v shift\:fir8s_parameters}
{\xe \v fir8s_parameters\:shift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> fir8s_parameters::shift[8]}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 123 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b datatype.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fir8s_results Struct Reference\par \pard\plain 
{\tc\tcl2 \v fir8s_results}
{\xe \v fir8s_results}
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8s_results} }}\par
{
{\f2 #include "src/datatype.h"}}\par
Collaboration diagram for fir8s_results:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structfir8s__results__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b shift} [8]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8s_results} \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Some details about the {\b fir8s_results} struct. \par
Message from fir8s to fir8m \par
}{
Definition at line 134 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v shift\:fir8s_results}
{\xe \v fir8s_results\:shift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> fir8s_results::shift[8]}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 136 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b datatype.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gcde_parameters Struct Reference\par \pard\plain 
{\tc\tcl2 \v gcde_parameters}
{\xe \v gcde_parameters}
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from gcdm to gcde. }}\par
{
{\f2 #include <datatype.h>}}\par
Collaboration diagram for gcde_parameters:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structgcde__parameters__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b sample1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b sample2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from gcdm to gcde. \par
}{
Definition at line 176 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v sample1\:gcde_parameters}
{\xe \v gcde_parameters\:sample1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> gcde_parameters::sample1}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 180 of file datatype.h.}\par
}
{\xe \v sample2\:gcde_parameters}
{\xe \v gcde_parameters\:sample2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> gcde_parameters::sample2}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 181 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b datatype.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gcde_results Struct Reference\par \pard\plain 
{\tc\tcl2 \v gcde_results}
{\xe \v gcde_results}
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from gcde to gcdm. }}\par
{
{\f2 #include <datatype.h>}}\par
Collaboration diagram for gcde_results:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structgcde__results__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_uint< 8 > {\b result}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from gcde to gcdm. \par
}{
Definition at line 183 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v result\:gcde_results}
{\xe \v gcde_results\:result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_uint<8> gcde_results::result}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 185 of file datatype.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b datatype.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Memory Class Reference\par \pard\plain 
{\tc\tcl2 \v Memory}
{\xe \v Memory}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\par
{
{\f2 #include <tl.h>}}\par
Collaboration diagram for Memory:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_memory__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Memory} (unsigned int code, unsigned int data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getCodeSize} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCodeSize} (unsigned int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getDataSize} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDataSize} (unsigned int c)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b codeSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b dataSize}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 144 of file tl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Memory\:Memory}
{\xe \v Memory\:Memory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Memory::Memory (unsigned int  {\i code}, unsigned int  {\i data})}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 448 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00448                                             \{\par
00449     this->codeSize = c;\par
00450     this->dataSize = d;\par
00451 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getCodeSize\:Memory}
{\xe \v Memory\:getCodeSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Memory::getCodeSize ()}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 454 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00454                                 \{\par
00455     {\cf19 return} this->codeSize;\par
00456 \}\par
}
}
{\xe \v getDataSize\:Memory}
{\xe \v Memory\:getDataSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Memory::getDataSize ()}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 462 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00462                                 \{\par
00463     {\cf19 return} this->dataSize;\par
00464 \}\par
}
}
{\xe \v setCodeSize\:Memory}
{\xe \v Memory\:setCodeSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Memory::setCodeSize (unsigned int  {\i c})}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 458 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00458                                       \{\par
00459     this->codeSize = c;\par
00460 \}\par
}
}
{\xe \v setDataSize\:Memory}
{\xe \v Memory\:setDataSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Memory::setDataSize (unsigned int  {\i c})}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 466 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00466                                       \{\par
00467     this->dataSize = d;\par
00468 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v codeSize\:Memory}
{\xe \v Memory\:codeSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Memory::codeSize{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 147 of file tl.h.}\par
}
{\xe \v dataSize\:Memory}
{\xe \v Memory\:dataSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Memory::dataSize{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file tl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PhysicalLink Class Reference\par \pard\plain 
{\tc\tcl2 \v PhysicalLink}
{\xe \v PhysicalLink}
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
\par
{
{\f2 #include <tl.h>}}\par
Collaboration diagram for PhysicalLink:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_physical_link__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b getName} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (string x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setId} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getPhysicalWidth} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPhysicalWidth} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b getTcomm} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTcomm} (sc_time x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b getTAcomm} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTAcomm} (sc_time x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getBandwidth} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBandwidth} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b geta2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b seta2} (float x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b geta1} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b seta1} (float x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b physical_width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b tcomm}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b tacomm}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b bandwidth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b a2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b a1}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 273 of file tl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v geta1\:PhysicalLink}
{\xe \v PhysicalLink\:geta1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float PhysicalLink::geta1 ()}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 542 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00543 \{\par
00544     {\cf19 return} this->a1;\par
00545 \}\par
}
}
{\xe \v geta2\:PhysicalLink}
{\xe \v PhysicalLink\:geta2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float PhysicalLink::geta2 ()}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 532 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00533 \{\par
00534     {\cf19 return} this->a2;\par
00535 \}\par
}
}
{\xe \v getBandwidth\:PhysicalLink}
{\xe \v PhysicalLink\:getBandwidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int PhysicalLink::getBandwidth ()}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 497 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00498 \{\par
00499     {\cf19 return} this->bandwidth;\par
00500 \}\par
}
}
{\xe \v getId\:PhysicalLink}
{\xe \v PhysicalLink\:getId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int PhysicalLink::getId ()}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 472 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00473 \{\par
00474     {\cf19 return} this->id;\par
00475 \}\par
}
}
{\xe \v getName\:PhysicalLink}
{\xe \v PhysicalLink\:getName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string PhysicalLink::getName ()}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 477 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00478 \{\par
00479     {\cf19 return} this->name;\par
00480 \}\par
}
}
{\xe \v getPhysicalWidth\:PhysicalLink}
{\xe \v PhysicalLink\:getPhysicalWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int PhysicalLink::getPhysicalWidth ()}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 482 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00483 \{\par
00484     {\cf19 return} this->physical_width;\par
00485 \}\par
}
}
{\xe \v getTAcomm\:PhysicalLink}
{\xe \v PhysicalLink\:getTAcomm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time PhysicalLink::getTAcomm ()}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 492 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00493 \{\par
00494     {\cf19 return} this->tacomm;\par
00495 \}\par
}
}
{\xe \v getTcomm\:PhysicalLink}
{\xe \v PhysicalLink\:getTcomm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time PhysicalLink::getTcomm ()}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 487 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00488 \{\par
00489     {\cf19 return} this->tcomm;\par
00490 \}\par
}
}
{\xe \v seta1\:PhysicalLink}
{\xe \v PhysicalLink\:seta1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PhysicalLink::seta1 (float  {\i x})}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 547 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00548 \{\par
00549     a1 = x;\par
00550 \}\par
}
}
{\xe \v seta2\:PhysicalLink}
{\xe \v PhysicalLink\:seta2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PhysicalLink::seta2 (float  {\i x})}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 537 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00538 \{\par
00539     a2 = x;\par
00540 \}\par
}
}
{\xe \v setBandwidth\:PhysicalLink}
{\xe \v PhysicalLink\:setBandwidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PhysicalLink::setBandwidth (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 527 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00528 \{\par
00529     bandwidth = x;\par
00530 \}\par
}
}
{\xe \v setId\:PhysicalLink}
{\xe \v PhysicalLink\:setId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PhysicalLink::setId (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 502 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00503 \{\par
00504     {\cf18 id} = x;\par
00505 \}\par
}
{
\ql
Referenced by SystemManager::generatePhysicalLinkInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_physical_link_a4c1ca22f348862858653c4f02496218f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setName\:PhysicalLink}
{\xe \v PhysicalLink\:setName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PhysicalLink::setName (string  {\i x})}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 507 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00508 \{\par
00509     name = x;\par
00510 \}\par
}
{
\ql
Referenced by SystemManager::generatePhysicalLinkInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_physical_link_a720451548bfac94a60eca8c8f47d343b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setPhysicalWidth\:PhysicalLink}
{\xe \v PhysicalLink\:setPhysicalWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PhysicalLink::setPhysicalWidth (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 512 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00513 \{\par
00514     physical_width = x;\par
00515 \}\par
}
}
{\xe \v setTAcomm\:PhysicalLink}
{\xe \v PhysicalLink\:setTAcomm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PhysicalLink::setTAcomm (sc_time  {\i x})}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 522 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00523 \{\par
00524     tacomm = x;\par
00525 \}\par
}
}
{\xe \v setTcomm\:PhysicalLink}
{\xe \v PhysicalLink\:setTcomm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PhysicalLink::setTcomm (sc_time  {\i x})}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 517 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00518 \{\par
00519     tcomm = x;\par
00520 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v a1\:PhysicalLink}
{\xe \v PhysicalLink\:a1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float PhysicalLink::a1}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 283 of file tl.h.}\par
{
\ql
Referenced by SystemManager::generatePhysicalLinkInstances().}\par
}
{\xe \v a2\:PhysicalLink}
{\xe \v PhysicalLink\:a2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float PhysicalLink::a2}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 282 of file tl.h.}\par
{
\ql
Referenced by SystemManager::generatePhysicalLinkInstances().}\par
}
{\xe \v bandwidth\:PhysicalLink}
{\xe \v PhysicalLink\:bandwidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int PhysicalLink::bandwidth}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 281 of file tl.h.}\par
{
\ql
Referenced by SystemManager::generatePhysicalLinkInstances().}\par
}
{\xe \v id\:PhysicalLink}
{\xe \v PhysicalLink\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int PhysicalLink::id}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 277 of file tl.h.}\par
}
{\xe \v name\:PhysicalLink}
{\xe \v PhysicalLink\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string PhysicalLink::name}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 276 of file tl.h.}\par
}
{\xe \v physical_width\:PhysicalLink}
{\xe \v PhysicalLink\:physical_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int PhysicalLink::physical_width}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 278 of file tl.h.}\par
{
\ql
Referenced by SystemManager::generatePhysicalLinkInstances().}\par
}
{\xe \v tacomm\:PhysicalLink}
{\xe \v PhysicalLink\:tacomm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time PhysicalLink::tacomm}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 280 of file tl.h.}\par
{
\ql
Referenced by SystemManager::generatePhysicalLinkInstances().}\par
}
{\xe \v tcomm\:PhysicalLink}
{\xe \v PhysicalLink\:tcomm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time PhysicalLink::tcomm}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 279 of file tl.h.}\par
{
\ql
Referenced by SystemManager::generatePhysicalLinkInstances().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Process Class Reference\par \pard\plain 
{\tc\tcl2 \v Process}
{\xe \v Process}
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
\par
{
{\f2 #include <tl.h>}}\par
Collaboration diagram for Process:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Process} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b getName} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (string x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setId} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getPriority} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPriority} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getCriticality} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCriticality} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getEqGate} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEqGate} (float g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getDataType} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDataType} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMemSize} ({\b Memory} m)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCodeSize} (string procName, unsigned int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDataSize} (string procName, unsigned int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getAffinityByName} (string processorName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAffinity} (string processorName, float {\b affinity})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setConcurrency} (int procId, float conc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLoad} (int procId, float value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getPS_Profiling} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b getProcessTime} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEnergy} (float {\b energy})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getEnergy} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b priority}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b criticality}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b eqGate}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b dataType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
map< string, unsigned int > {\b codeSizeMap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
map< string, unsigned int > {\b dataSizeMap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
map< string, float > {\b affinity}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
map< int, float > {\b concurrency}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
map< int, float > {\b load}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b profiling}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b processTime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b energy}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 161 of file tl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Process\:Process}
{\xe \v Process\:Process}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Process::Process ()}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 311 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00311                 \{\par
00312     {\cf18 id} = 0;\par
00313     eqGate = 0;\par
00314     dataType = 0;\par
00315     criticality = 0;\par
00316     profiling = 0;\par
00317     processTime = sc_time(0, SC_MS);\par
00318     priority = 0;\par
00319     energy = 0;\par
00320 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getAffinityByName\:Process}
{\xe \v Process\:getAffinityByName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Process::getAffinityByName (string  {\i processorName})}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 406 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00406                                                      \{\par
00407     map<string, float>::iterator it = this->affinity.find(processorName);\par
00408     {\cf19 if} ( it != this->affinity.end() )\par
00409         {\cf19 return} it->second;\par
00410     {\cf19 else}\par
00411         {\cf19 return} 0;\par
00412 \}\par
}
}
{\xe \v getCriticality\:Process}
{\xe \v Process\:getCriticality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Process::getCriticality ()}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 360 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00361 \{\par
00362     {\cf19 return} this->criticality;\par
00363 \}\par
}
}
{\xe \v getDataType\:Process}
{\xe \v Process\:getDataType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Process::getDataType ()}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 380 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00381 \{\par
00382     {\cf19 return} this->dataType;\par
00383 \}\par
}
}
{\xe \v getEnergy\:Process}
{\xe \v Process\:getEnergy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Process::getEnergy ()}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 342 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00342                         \{\par
00343     {\cf19 return} this->energy;\par
00344 \}\par
}
}
{\xe \v getEqGate\:Process}
{\xe \v Process\:getEqGate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Process::getEqGate ()}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 370 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00371 \{\par
00372     {\cf19 return} this->eqGate;\par
00373 \}\par
}
}
{\xe \v getId\:Process}
{\xe \v Process\:getId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Process::getId ()}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 332 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00333 \{\par
00334     {\cf19 return} this->id;\par
00335 \}\par
}
}
{\xe \v getName\:Process}
{\xe \v Process\:getName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Process::getName ()}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 322 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00323 \{\par
00324     {\cf19 return} this->name;\par
00325 \}\par
}
}
{\xe \v getPriority\:Process}
{\xe \v Process\:getPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Process::getPriority ()}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 350 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00351 \{\par
00352     {\cf19 return} this->priority;\par
00353 \}\par
}
}
{\xe \v getProcessTime\:Process}
{\xe \v Process\:getProcessTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time Process::getProcessTime ()}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 440 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00441 \{\par
00442     {\cf19 return} this->processTime;\par
00443 \}\par
}
}
{\xe \v getPS_Profiling\:Process}
{\xe \v Process\:getPS_Profiling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Process::getPS_Profiling ()}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 435 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00436 \{\par
00437     {\cf19 return} this->profiling;\par
00438 \}\par
}
}
{\xe \v setAffinity\:Process}
{\xe \v Process\:setAffinity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setAffinity (string  {\i processorName}, float  {\i affinity})}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 414 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00415 \{\par
00416     map <string, float>::iterator end = this->affinity.end();\par
00417     pair<string, float> item (x, y);\par
00418     this->affinity.insert(end, item);\par
00419 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_a6f1fdb3ef348ebe19f1fd44671edfed8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setCodeSize\:Process}
{\xe \v Process\:setCodeSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setCodeSize (string  {\i procName}, unsigned int  {\i value})}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 390 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00390                                                    \{\par
00391     map <string, unsigned int>::iterator end = this->codeSizeMap.end();\par
00392     pair<string, unsigned int> item (p, mem);\par
00393     this->codeSizeMap.insert(end, item);\par
00394 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_af55a4774a1519b84988e4e3ec3fcc7a2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setConcurrency\:Process}
{\xe \v Process\:setConcurrency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setConcurrency (int  {\i procId}, float  {\i conc})}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 421 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00422 \{\par
00423     map <int, float>::iterator end = this->concurrency.end();\par
00424     pair<int, float> item (p, c);\par
00425     this->concurrency.insert(end, item);\par
00426 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_a8fb82ba026f5530a9f9724fbf1142aba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setCriticality\:Process}
{\xe \v Process\:setCriticality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setCriticality (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 365 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00366 \{\par
00367     criticality = x;\par
00368 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_a43c73ef0483b869e4231830eeff46d48_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setDataSize\:Process}
{\xe \v Process\:setDataSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setDataSize (string  {\i procName}, unsigned int  {\i value})}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 396 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00396                                                    \{\par
00397     map <string, unsigned int>::iterator end = this->dataSizeMap.end();\par
00398     pair<string, unsigned int> item (p, mem);\par
00399     this->dataSizeMap.insert(end, item);\par
00400 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_a268bc20c1c875e94e50c5d6d1ad9ec06_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setDataType\:Process}
{\xe \v Process\:setDataType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setDataType (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 385 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00386 \{\par
00387     dataType = x;\par
00388 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_a3aaefcd2768bd481e22228851b161546_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setEnergy\:Process}
{\xe \v Process\:setEnergy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setEnergy (float  {\i energy})}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 346 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00346                                \{\par
00347     energy = en;\par
00348 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_a2991ac041e868df69f3f394ee91791cb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setEqGate\:Process}
{\xe \v Process\:setEqGate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setEqGate (float  {\i g})}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 375 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00376 \{\par
00377     eqGate = g;\par
00378 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_a74caf223f4391e3145eee5899b30a09b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setId\:Process}
{\xe \v Process\:setId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setId (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 337 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00338 \{\par
00339     {\cf18 id} = x;\par
00340 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_ac2d4d655dc9fe6317889938783ec2848_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setLoad\:Process}
{\xe \v Process\:setLoad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setLoad (int  {\i procId}, float  {\i value})}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 428 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00428                                        \{\par
00429     map <int, float>::iterator end = this->load.end();\par
00430     pair<int, float> item (p, value);\par
00431     this->load.insert(end, item);\par
00432 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_a9d9cfc179387b12e2bb1cdc214b6a9d8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setMemSize\:Process}
{\xe \v Process\:setMemSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setMemSize ({\b Memory}  {\i m})}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setName\:Process}
{\xe \v Process\:setName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setName (string  {\i x})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 327 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00328 \{\par
00329     name = x;\par
00330 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_ad1d3a2fd1af703ff1b986512d675660b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setPriority\:Process}
{\xe \v Process\:setPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Process::setPriority (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 355 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00356 \{\par
00357     priority = x;\par
00358 \}\par
}
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_process_a011879a0a11d6bacd3a6d768293ab0d2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v affinity\:Process}
{\xe \v Process\:affinity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
map<string,float> Process::affinity}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 173 of file tl.h.}\par
}
{\xe \v codeSizeMap\:Process}
{\xe \v Process\:codeSizeMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
map<string, unsigned int> Process::codeSizeMap}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 170 of file tl.h.}\par
}
{\xe \v concurrency\:Process}
{\xe \v Process\:concurrency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
map<int,float> Process::concurrency}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 174 of file tl.h.}\par
}
{\xe \v criticality\:Process}
{\xe \v Process\:criticality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Process::criticality}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 167 of file tl.h.}\par
}
{\xe \v dataSizeMap\:Process}
{\xe \v Process\:dataSizeMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
map<string, unsigned int> Process::dataSizeMap}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 171 of file tl.h.}\par
}
{\xe \v dataType\:Process}
{\xe \v Process\:dataType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Process::dataType}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 169 of file tl.h.}\par
}
{\xe \v energy\:Process}
{\xe \v Process\:energy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Process::energy}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 178 of file tl.h.}\par
}
{\xe \v eqGate\:Process}
{\xe \v Process\:eqGate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Process::eqGate}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 168 of file tl.h.}\par
}
{\xe \v id\:Process}
{\xe \v Process\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Process::id}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 165 of file tl.h.}\par
}
{\xe \v load\:Process}
{\xe \v Process\:load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
map<int,float> Process::load}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 175 of file tl.h.}\par
}
{\xe \v name\:Process}
{\xe \v Process\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Process::name}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 164 of file tl.h.}\par
}
{\xe \v priority\:Process}
{\xe \v Process\:priority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Process::priority}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 166 of file tl.h.}\par
}
{\xe \v processTime\:Process}
{\xe \v Process\:processTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time Process::processTime}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 177 of file tl.h.}\par
{
\ql
Referenced by SystemManager::generateProcessInstances().}\par
}
{\xe \v profiling\:Process}
{\xe \v Process\:profiling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Process::profiling}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 176 of file tl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ProcessingUnit Class Reference\par \pard\plain 
{\tc\tcl2 \v ProcessingUnit}
{\xe \v ProcessingUnit}
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\par
{
{\f2 #include <tl.h>}}\par
Collaboration diagram for ProcessingUnit:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setId} (unsigned int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b getName} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (string x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b getProcessorType} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setProcessorType} (string x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getCost} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCost} (float x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b getISA} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setISA} (string x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getFrequency} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFrequency} (float x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float ** {\b getCC4S} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCC4S} (float **x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getPower} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPower} (float x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getMIPS} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMIPS} (float x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getI4CSmin} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setI4CSmin} (float x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getI4CSmax} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setI4CSmax} (float x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getVdd} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVdd} (float x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getIdd} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIdd} (float x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b getOverheadCS} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOverheadCS} (sc_time x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b processorType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b cost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ISA}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b frequency}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float ** {\b CC4CS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Power}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b MIPS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b I4CSmin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b I4CSmax}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Vdd}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Idd}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b overheadCS}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 80 of file tl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getCC4S\:ProcessingUnit}
{\xe \v ProcessingUnit\:getCC4S}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ** ProcessingUnit::getCC4S ()}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 129 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00130 \{\par
00131     {\cf19 return} this->CC4CS;\par
00132 \}\par
}
}
{\xe \v getCost\:ProcessingUnit}
{\xe \v ProcessingUnit\:getCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::getCost ()}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00100 \{\par
00101     {\cf19 return} this->cost;\par
00102 \}\par
}
}
{\xe \v getFrequency\:ProcessingUnit}
{\xe \v ProcessingUnit\:getFrequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::getFrequency ()}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00120 \{\par
00121     {\cf19 return} this->frequency;\par
00122 \}\par
}
}
{\xe \v getI4CSmax\:ProcessingUnit}
{\xe \v ProcessingUnit\:getI4CSmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::getI4CSmax ()}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 169 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00170 \{\par
00171     {\cf19 return} this->I4CSmax;\par
00172 \}\par
}
}
{\xe \v getI4CSmin\:ProcessingUnit}
{\xe \v ProcessingUnit\:getI4CSmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::getI4CSmin ()}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 159 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00160 \{\par
00161     {\cf19 return} this->I4CSmin;\par
00162 \}\par
}
}
{\xe \v getId\:ProcessingUnit}
{\xe \v ProcessingUnit\:getId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int ProcessingUnit::getId ()}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00071                                   \{\par
00072     {\cf19 return} this->id;\par
00073 \}\par
}
}
{\xe \v getIdd\:ProcessingUnit}
{\xe \v ProcessingUnit\:getIdd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::getIdd ()}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 189 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00190 \{\par
00191     {\cf19 return} this->Idd;\par
00192 \}\par
}
}
{\xe \v getISA\:ProcessingUnit}
{\xe \v ProcessingUnit\:getISA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string ProcessingUnit::getISA ()}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00110 \{\par
00111     {\cf19 return} this->ISA;\par
00112 \}\par
}
}
{\xe \v getMIPS\:ProcessingUnit}
{\xe \v ProcessingUnit\:getMIPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::getMIPS ()}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 149 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00150 \{\par
00151     {\cf19 return} this->MIPS;\par
00152 \}\par
}
}
{\xe \v getName\:ProcessingUnit}
{\xe \v ProcessingUnit\:getName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string ProcessingUnit::getName ()}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00080 \{\par
00081     {\cf19 return} this->name;\par
00082 \}\par
}
}
{\xe \v getOverheadCS\:ProcessingUnit}
{\xe \v ProcessingUnit\:getOverheadCS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time ProcessingUnit::getOverheadCS ()}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 199 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00200 \{\par
00201     {\cf19 return} this->overheadCS;\par
00202 \}\par
}
}
{\xe \v getPower\:ProcessingUnit}
{\xe \v ProcessingUnit\:getPower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::getPower ()}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 139 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00140 \{\par
00141     {\cf19 return} this->Power;\par
00142 \}\par
}
}
{\xe \v getProcessorType\:ProcessingUnit}
{\xe \v ProcessingUnit\:getProcessorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string ProcessingUnit::getProcessorType ()}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 89 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00090 \{\par
00091     {\cf19 return} this->processorType;\par
00092 \}\par
}
}
{\xe \v getVdd\:ProcessingUnit}
{\xe \v ProcessingUnit\:getVdd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::getVdd ()}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 179 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00180 \{\par
00181     {\cf19 return} this->Vdd;\par
00182 \}\par
}
}
{\xe \v setCC4S\:ProcessingUnit}
{\xe \v ProcessingUnit\:setCC4S}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setCC4S (float **  {\i x})}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 134 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00135 \{\par
00136     CC4CS = x;\par
00137 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_a0878e37abdc168f31758d4df208c6663_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setCost\:ProcessingUnit}
{\xe \v ProcessingUnit\:setCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setCost (float  {\i x})}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00105 \{\par
00106     cost = x;\par
00107 \}\par
}
}
{\xe \v setFrequency\:ProcessingUnit}
{\xe \v ProcessingUnit\:setFrequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setFrequency (float  {\i x})}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00125 \{\par
00126     frequency = x;\par
00127 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_a48a63b09d626c9563d36404b5f95a04a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setI4CSmax\:ProcessingUnit}
{\xe \v ProcessingUnit\:setI4CSmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setI4CSmax (float  {\i x})}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 174 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00175 \{\par
00176     I4CSmax = x;\par
00177 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_a9995278db81888144089791e7eef8b71_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setI4CSmin\:ProcessingUnit}
{\xe \v ProcessingUnit\:setI4CSmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setI4CSmin (float  {\i x})}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 164 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00165 \{\par
00166     I4CSmin = x;\par
00167 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_afb3bb2c3b1421dfabf867ff1bd084968_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setId\:ProcessingUnit}
{\xe \v ProcessingUnit\:setId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setId (unsigned int  {\i c})}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00075                                         \{\par
00076     this->{\cf18 id} = c;\par
00077 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_a95737a4e4a2bd424cb4455f0c4a84cf5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setIdd\:ProcessingUnit}
{\xe \v ProcessingUnit\:setIdd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setIdd (float  {\i x})}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 194 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00195 \{\par
00196     Idd = x;\par
00197 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_a12212762fb57a5b582782c66861443fc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setISA\:ProcessingUnit}
{\xe \v ProcessingUnit\:setISA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setISA (string  {\i x})}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 114 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00115 \{\par
00116     ISA = x;\par
00117 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_a32aac7fd512cb23a8cc629d87ce317d8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setMIPS\:ProcessingUnit}
{\xe \v ProcessingUnit\:setMIPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setMIPS (float  {\i x})}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 154 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00155 \{\par
00156     MIPS = x;\par
00157 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_af91c01d3a84acf6f310949e80906e824_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setName\:ProcessingUnit}
{\xe \v ProcessingUnit\:setName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setName (string  {\i x})}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00085 \{\par
00086     name = x;\par
00087 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_a24c691bffdbf8b79fa8301ba6493e0e5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setOverheadCS\:ProcessingUnit}
{\xe \v ProcessingUnit\:setOverheadCS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setOverheadCS (sc_time  {\i x})}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 204 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00205 \{\par
00206     overheadCS = x;\par
00207 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_a4c38556d47f2cd40adc4092b09dba992_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setPower\:ProcessingUnit}
{\xe \v ProcessingUnit\:setPower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setPower (float  {\i x})}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 144 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00145 \{\par
00146     Power = x;\par
00147 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_a4994085fb506708d4c0f1c27565ffe2b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setProcessorType\:ProcessingUnit}
{\xe \v ProcessingUnit\:setProcessorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setProcessorType (string  {\i x})}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00095 \{\par
00096     processorType = x;\par
00097 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_a11749a7a862ab46b771844fddc373ed6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setVdd\:ProcessingUnit}
{\xe \v ProcessingUnit\:setVdd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ProcessingUnit::setVdd (float  {\i x})}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 184 of file tl.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00185 \{\par
00186     Vdd = x;\par
00187 \}\par
}
{
\ql
Referenced by SystemManager::generateBBInstances().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_processing_unit_ac4ef8b2cafc7e379b4cb05e463840128_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v CC4CS\:ProcessingUnit}
{\xe \v ProcessingUnit\:CC4CS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float** ProcessingUnit::CC4CS}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file tl.h.}\par
}
{\xe \v cost\:ProcessingUnit}
{\xe \v ProcessingUnit\:cost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::cost}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 89 of file tl.h.}\par
}
{\xe \v frequency\:ProcessingUnit}
{\xe \v ProcessingUnit\:frequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::frequency}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file tl.h.}\par
}
{\xe \v I4CSmax\:ProcessingUnit}
{\xe \v ProcessingUnit\:I4CSmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::I4CSmax}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file tl.h.}\par
}
{\xe \v I4CSmin\:ProcessingUnit}
{\xe \v ProcessingUnit\:I4CSmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::I4CSmin}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file tl.h.}\par
}
{\xe \v id\:ProcessingUnit}
{\xe \v ProcessingUnit\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int ProcessingUnit::id}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file tl.h.}\par
}
{\xe \v Idd\:ProcessingUnit}
{\xe \v ProcessingUnit\:Idd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::Idd}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 98 of file tl.h.}\par
}
{\xe \v ISA\:ProcessingUnit}
{\xe \v ProcessingUnit\:ISA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string ProcessingUnit::ISA}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file tl.h.}\par
}
{\xe \v MIPS\:ProcessingUnit}
{\xe \v ProcessingUnit\:MIPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::MIPS}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file tl.h.}\par
}
{\xe \v name\:ProcessingUnit}
{\xe \v ProcessingUnit\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string ProcessingUnit::name}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file tl.h.}\par
}
{\xe \v overheadCS\:ProcessingUnit}
{\xe \v ProcessingUnit\:overheadCS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time ProcessingUnit::overheadCS}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file tl.h.}\par
}
{\xe \v Power\:ProcessingUnit}
{\xe \v ProcessingUnit\:Power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::Power}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file tl.h.}\par
}
{\xe \v processorType\:ProcessingUnit}
{\xe \v ProcessingUnit\:processorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string ProcessingUnit::processorType}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file tl.h.}\par
}
{\xe \v Vdd\:ProcessingUnit}
{\xe \v ProcessingUnit\:Vdd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float ProcessingUnit::Vdd}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file tl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b tl.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sc_csp_channel< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >}
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\par
{
{\f2 #include <sc_csp_channel.h>}}\par
Inheritance diagram for sc_csp_channel< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classsc__csp__channel__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for sc_csp_channel< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classsc__csp__channel__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b sc_csp_channel} (unsigned int channel_id=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b register_port} (sc_port_base &, const char *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b read} (T &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual T {\b read} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b write} (const T &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b read_test} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b write_test} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b register_alt} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const sc_event & {\b get_alt_event} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b operator T} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b sc_csp_channel}< T > & {\b operator=} (const T &a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trace} (sc_trace_file *tf) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const char * {\b kind} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b w_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b r_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b num}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IPC}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b waiting_time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b working_time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b partial_energy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b working_energy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b tcomm}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b tacomm}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b physical_width}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b init} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_event {\b ready_to_read_event}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_event {\b ready_to_write_event}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_event {\b ready_alt_event}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ready_to_read}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ready_to_write}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b enable_alt_events}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T {\b csp_buf}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_port_base * {\b m_reader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_port_base * {\b m_writer}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T>\par
class sc_csp_channel< T >\par
}

\par
{
Definition at line 101 of file sc_csp_channel.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v sc_csp_channel\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:sc_csp_channel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\b sc_csp_channel}< T >::{\b sc_csp_channel} (unsigned int  {\i channel_id} = {\f2 0}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00110                          :sc_prim_channel( sc_gen_unique_name( {\cf22 "csp_channel"} ) ),\par
00111                           ready_to_read_event(sc_gen_unique_name( {\cf22 "read_event"} )),\par
00112                           ready_to_write_event(sc_gen_unique_name({\cf22 "write_event"} )),\par
00113                           ready_alt_event(sc_gen_unique_name({\cf22 "alt_event"}))\par
00114                     \{\par
00115                         {\cf18 id}=channel_id;\par
00116                         w_id= pSystemManager->VCH[id].getW_id();\par
00117                         r_id= pSystemManager->VCH[id].getR_id();\par
00118                         width= pSystemManager->VCH[id].getWidth();\par
00119 \par
00120                         tcomm= pSystemManager->VPL[pSystemManager->allocationCH_PL[id]].getTcomm();\par
00121                         tacomm= pSystemManager->VPL[pSystemManager->allocationCH_PL[id]].getTAcomm();\par
00122                         physical_width= pSystemManager->VPL[pSystemManager->allocationCH_PL[id]].getPhysicalWidth();\par
00123 \par
00124                         init();\par
00125                     \}\par
00126 \par
00127 \par
}
{
\ql
References SystemManager::allocationCH_PL, pSystemManager, SystemManager::VCH, and SystemManager::VPL.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v kind\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:kind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual const char* {\b sc_csp_channel}< T >::kind () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 156 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00157              :\par
}
}
{\xe \v operator T\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:operator T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\b sc_csp_channel}< T >::operator T (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00150         \{ write( a ); {\cf19 return} *{\cf17 this}; \}\par
}
}
{\xe \v operator=\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\b sc_csp_channel}<T>& {\b sc_csp_channel}< T >::operator= (const T &  {\i a}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 151 of file sc_csp_channel.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00155         \{ {\cf19 return} {\cf22 "sc_csp_channel"}; \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v csp_buf\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:csp_buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > T {\b sc_csp_channel}< T >::csp_buf{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 171 of file sc_csp_channel.h.}\par
}
{\xe \v enable_alt_events\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:enable_alt_events}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > bool {\b sc_csp_channel}< T >::enable_alt_events{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 169 of file sc_csp_channel.h.}\par
}
{\xe \v id\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > unsigned int {\b sc_csp_channel}< T >::id}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 174 of file sc_csp_channel.h.}\par
}
{\xe \v IPC\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:IPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > bool {\b sc_csp_channel}< T >::IPC}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 179 of file sc_csp_channel.h.}\par
}
{\xe \v m_reader\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:m_reader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > sc_port_base* {\b sc_csp_channel}< T >::m_reader{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 192 of file sc_csp_channel.h.}\par
}
{\xe \v m_writer\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:m_writer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > sc_port_base* {\b sc_csp_channel}< T >::m_writer{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 193 of file sc_csp_channel.h.}\par
}
{\xe \v num\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > unsigned int {\b sc_csp_channel}< T >::num}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 178 of file sc_csp_channel.h.}\par
}
{\xe \v partial_energy\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:partial_energy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > double {\b sc_csp_channel}< T >::partial_energy}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 184 of file sc_csp_channel.h.}\par
}
{\xe \v physical_width\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:physical_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > unsigned int {\b sc_csp_channel}< T >::physical_width}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 189 of file sc_csp_channel.h.}\par
}
{\xe \v r_id\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:r_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > unsigned int {\b sc_csp_channel}< T >::r_id}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 176 of file sc_csp_channel.h.}\par
}
{\xe \v ready_alt_event\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:ready_alt_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > sc_event {\b sc_csp_channel}< T >::ready_alt_event{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 165 of file sc_csp_channel.h.}\par
}
{\xe \v ready_to_read\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:ready_to_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > bool {\b sc_csp_channel}< T >::ready_to_read{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 167 of file sc_csp_channel.h.}\par
}
{\xe \v ready_to_read_event\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:ready_to_read_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > sc_event {\b sc_csp_channel}< T >::ready_to_read_event{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 163 of file sc_csp_channel.h.}\par
}
{\xe \v ready_to_write\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:ready_to_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > bool {\b sc_csp_channel}< T >::ready_to_write{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 168 of file sc_csp_channel.h.}\par
}
{\xe \v ready_to_write_event\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:ready_to_write_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > sc_event {\b sc_csp_channel}< T >::ready_to_write_event{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 164 of file sc_csp_channel.h.}\par
}
{\xe \v tacomm\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:tacomm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > sc_time {\b sc_csp_channel}< T >::tacomm}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 188 of file sc_csp_channel.h.}\par
}
{\xe \v tcomm\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:tcomm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > sc_time {\b sc_csp_channel}< T >::tcomm}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 187 of file sc_csp_channel.h.}\par
}
{\xe \v w_id\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:w_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > unsigned int {\b sc_csp_channel}< T >::w_id}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 175 of file sc_csp_channel.h.}\par
}
{\xe \v waiting_time\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:waiting_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > sc_time {\b sc_csp_channel}< T >::waiting_time}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 181 of file sc_csp_channel.h.}\par
}
{\xe \v width\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > unsigned int {\b sc_csp_channel}< T >::width}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 177 of file sc_csp_channel.h.}\par
}
{\xe \v working_energy\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:working_energy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > double {\b sc_csp_channel}< T >::working_energy}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 185 of file sc_csp_channel.h.}\par
}
{\xe \v working_time\:sc_csp_channel< T >}
{\xe \v sc_csp_channel< T >\:working_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > sc_time {\b sc_csp_channel}< T >::working_time}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 182 of file sc_csp_channel.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b sc_csp_channel.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sc_core::sc_csp_channel_in_if< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v sc_core::sc_csp_channel_in_if< T >}
{\xe \v sc_core::sc_csp_channel_in_if< T >}
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
\par
{
{\f2 #include <sc_csp_channel_ifs.h>}}\par
Inheritance diagram for sc_core::sc_csp_channel_in_if< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classsc__core_1_1sc__csp__channel__in__if__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for sc_core::sc_csp_channel_in_if< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classsc__core_1_1sc__csp__channel__in__if__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b read} (T &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual T {\b read} ()=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b read_test} ()=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b register_alt} ()=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const sc_event & {\b get_alt_event} ()=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b sc_csp_channel_in_if} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T>\par
class sc_core::sc_csp_channel_in_if< T >\par
}

\par
{
Definition at line 86 of file sc_csp_channel_ifs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v sc_csp_channel_in_if\:sc_core::sc_csp_channel_in_if< T >}
{\xe \v sc_core::sc_csp_channel_in_if< T >\:sc_csp_channel_in_if}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\b sc_core::sc_csp_channel_in_if}< T >::{\b sc_csp_channel_in_if} (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 107 of file sc_csp_channel_ifs.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00111 :{\cf17 virtual} {\cf17 public} sc_interface \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_alt_event\:sc_core::sc_csp_channel_in_if< T >}
{\xe \v sc_core::sc_csp_channel_in_if< T >\:get_alt_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual const sc_event& {\b sc_core::sc_csp_channel_in_if}< T >::get_alt_event (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b sc_csp_channel< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v read\:sc_core::sc_csp_channel_in_if< T >}
{\xe \v sc_core::sc_csp_channel_in_if< T >\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual T {\b sc_core::sc_csp_channel_in_if}< T >::read (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b sc_csp_channel< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v read\:sc_core::sc_csp_channel_in_if< T >}
{\xe \v sc_core::sc_csp_channel_in_if< T >\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual void {\b sc_core::sc_csp_channel_in_if}< T >::read (T & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b sc_csp_channel< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v read_test\:sc_core::sc_csp_channel_in_if< T >}
{\xe \v sc_core::sc_csp_channel_in_if< T >\:read_test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual bool {\b sc_core::sc_csp_channel_in_if}< T >::read_test (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b sc_csp_channel< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v register_alt\:sc_core::sc_csp_channel_in_if< T >}
{\xe \v sc_core::sc_csp_channel_in_if< T >\:register_alt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual void {\b sc_core::sc_csp_channel_in_if}< T >::register_alt (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b sc_csp_channel< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b sc_csp_channel_ifs.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sc_core::sc_csp_channel_out_if< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v sc_core::sc_csp_channel_out_if< T >}
{\xe \v sc_core::sc_csp_channel_out_if< T >}
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\par
{
{\f2 #include <sc_csp_channel_ifs.h>}}\par
Inheritance diagram for sc_core::sc_csp_channel_out_if< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classsc__core_1_1sc__csp__channel__out__if__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for sc_core::sc_csp_channel_out_if< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classsc__core_1_1sc__csp__channel__out__if__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b write} (const T &)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b write_test} ()=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b register_alt} ()=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual const sc_event & {\b get_alt_event} ()=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b sc_csp_channel_out_if} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T>\par
class sc_core::sc_csp_channel_out_if< T >\par
}

\par
{
Definition at line 114 of file sc_csp_channel_ifs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v sc_csp_channel_out_if\:sc_core::sc_csp_channel_out_if< T >}
{\xe \v sc_core::sc_csp_channel_out_if< T >\:sc_csp_channel_out_if}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\b sc_core::sc_csp_channel_out_if}< T >::{\b sc_csp_channel_out_if} (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file sc_csp_channel_ifs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_alt_event\:sc_core::sc_csp_channel_out_if< T >}
{\xe \v sc_core::sc_csp_channel_out_if< T >\:get_alt_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual const sc_event& {\b sc_core::sc_csp_channel_out_if}< T >::get_alt_event (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b sc_csp_channel< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v register_alt\:sc_core::sc_csp_channel_out_if< T >}
{\xe \v sc_core::sc_csp_channel_out_if< T >\:register_alt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual void {\b sc_core::sc_csp_channel_out_if}< T >::register_alt (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b sc_csp_channel< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v write\:sc_core::sc_csp_channel_out_if< T >}
{\xe \v sc_core::sc_csp_channel_out_if< T >\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual void {\b sc_core::sc_csp_channel_out_if}< T >::write (const T & ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b sc_csp_channel< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v write_test\:sc_core::sc_csp_channel_out_if< T >}
{\xe \v sc_core::sc_csp_channel_out_if< T >\:write_test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual bool {\b sc_core::sc_csp_channel_out_if}< T >::write_test (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b sc_csp_channel< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b sc_csp_channel_ifs.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sc_interface Class Reference\par \pard\plain 
{\tc\tcl2 \v sc_interface}
{\xe \v sc_interface}
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
Inheritance diagram for sc_interface:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classsc__interface__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for sc_interface:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classsc__interface__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b sc_csp_channel_ifs.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sc_prim_channel Class Reference\par \pard\plain 
{\tc\tcl2 \v sc_prim_channel}
{\xe \v sc_prim_channel}
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
Inheritance diagram for sc_prim_channel:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classsc__prim__channel__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for sc_prim_channel:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classsc__prim__channel__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b sc_csp_channel.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SystemManager Class Reference\par \pard\plain 
{\tc\tcl2 \v SystemManager}
{\xe \v SystemManager}
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\par
{
{\f2 #include <SystemManager.h>}}\par
Collaboration diagram for SystemManager:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemManager} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b Process} > {\b generateProcessInstances} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b Channel} > {\b generateChannelInstances} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PS_Profiling} (int processId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkSPP} (int processId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deleteConcXmlConCom} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateXmlConCom} (float matrixCONC_PS_N[10][10], unsigned int matrixCOM[10][10], float matrixCONC_CH_N[15][15])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< int > {\b getAllocationPS_BB} (int {\b bb_id})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b updateSimulatedTime} (int processId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b increaseSimulatedTime} (int processId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b increaseTimer} (int processId, sc_time delta)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b updateEstimatedEnergy} (int processId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b increaseEstimatedEnergy} (int processId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deleteConcXmlEnergy} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateXmlEnergy} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b BasicBlock} > {\b generateBBInstances} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b PhysicalLink} > {\b generatePhysicalLinkInstances} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mappingPS} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mappingCH} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b getFRT} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFRT} (sc_time x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b loadEst} (sc_time FRT_n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b getFRL} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deleteConcXmlLoad} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateXmlLoad} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b Process} > {\b VPS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b Channel} > {\b VCH}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b BasicBlock} > {\b VBB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< {\b PhysicalLink} > {\b VPL}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< int > {\b allocationPS_BB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< int > {\b allocationCH_PL}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b FRL} [10]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sc_time {\b FRT}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 86 of file SystemManager.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SystemManager\:SystemManager}
{\xe \v SystemManager\:SystemManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SystemManager::SystemManager ()}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00079 \{\par
00080 \par
00081     VPS = generateProcessInstances();\par
00082     VCH = generateChannelInstances();\par
00083 \par
00084     VBB = generateBBInstances();\par
00085     VPL = generatePhysicalLinkInstances();\par
00086     mappingPS();\par
00087     mappingCH();\par
00088 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v checkSPP\:SystemManager}
{\xe \v SystemManager\:checkSPP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SystemManager::checkSPP (int  {\i processId})}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 267 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00268 \{\par
00269     {\cf19 return} VBB[allocationPS_BB[processId]].getProcessors()[0].getProcessorType() == {\cf22 "SPP"};\par
00270 \}\par
}
{
\ql
Referenced by sc_csp_channel< T >::read(), SC_MODULE(), and sc_csp_channel< T >::write().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_a21d2bb74e4472f99ec04243168e7964e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v deleteConcXmlConCom\:SystemManager}
{\xe \v SystemManager\:deleteConcXmlConCom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::deleteConcXmlConCom ()}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 286 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00287 \{\par
00288 \par
00289     pugi::xml_document myDoc;\par
00290     pugi::xml_parse_result myResult = myDoc.load_file({\cf22 "./XML/application.xml"});\par
00291     cout << {\cf22 "XML Delete result: "} << myResult.description() << endl;\par
00292 \par
00293     {\cf20 //method 2: use object/node structure}\par
00294     pugi::xml_node instancesPS = myDoc.child({\cf22 "instancesPS"});\par
00295     xml_node processes = instancesPS.child({\cf22 "process"});\par
00296 \par
00297     {\cf19 for} ({\cf18 int} i = 0; i < NPS; i++)\{\par
00298 \par
00299         xml_node concom = processes.child({\cf22 "concurrency"});\par
00300         {\cf19 for} (pugi::xml_node processorId = concom.child({\cf22 "processId"}); processorId; processorId = processorId.next_sibling()) \{\par
00301             concom.remove_child(processorId);\par
00302         \}\par
00303 \par
00304         xml_node concom2 = processes.child({\cf22 "comunication"});\par
00305         {\cf19 for} (pugi::xml_node processorId = concom2.child({\cf22 "rec"}); processorId; processorId = processorId.next_sibling()) \{\par
00306             concom2.remove_child(processorId);\par
00307         \}\par
00308 \par
00309         processes = processes.next_sibling();\par
00310 \par
00311     \}\par
00312 \par
00313     xml_node instancesCH = myDoc.child({\cf22 "instancesLL"});\par
00314     xml_node processesCH = instancesCH.child({\cf22 "logical_link"});\par
00315 \par
00316     {\cf19 for} ({\cf18 int} i = 0; i < NCH; i++)\{\par
00317 \par
00318         xml_node concom3 = processesCH.child({\cf22 "concurrency"});\par
00319         {\cf19 for} (pugi::xml_node processorId = concom3.child({\cf22 "channelId"}); processorId; processorId = processorId.next_sibling()) \{\par
00320             concom3.remove_child(processorId);\par
00321         \}\par
00322 \par
00323         processesCH = processesCH.next_sibling();\par
00324 \par
00325     \}\par
00326 \par
00327     myDoc.save_file({\cf22 "./XML/application.xml"});\par
00328     cout << endl;\par
00329 \}\par
}
{
\ql
References NCH, and NPS.}\par
{
\ql
Referenced by sc_main().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_ab6efb1ee75ff2df870bd8e65480dc6e7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v deleteConcXmlEnergy\:SystemManager}
{\xe \v SystemManager\:deleteConcXmlEnergy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::deleteConcXmlEnergy ()}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1104 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01104                                            \{\par
01105         {\cf18 char}* temp;\par
01106         {\cf18 int} Id;\par
01107 \par
01108         pugi::xml_document myDoc;\par
01109         pugi::xml_parse_result myResult = myDoc.load_file({\cf22 "./XML/application.xml"});\par
01110         cout << {\cf22 "XML Delete result: "} << myResult.description() << endl;\par
01111 \par
01112         {\cf20 //method 2: use object/node structure}\par
01113         pugi::xml_node instancesPS = myDoc.child({\cf22 "instancesPS"});\par
01114         xml_node processes = instancesPS.child({\cf22 "process"});\par
01115         {\cf19 for}({\cf18 int} i = 0; i < NPS; i++)\{\par
01116             temp = ({\cf18 char}*) processes.child_value({\cf22 "id"});\par
01117             Id = atoi(temp); {\cf20 //id process}\par
01118 \par
01119             xml_node energy = processes.child({\cf22 "energy"});\par
01120             {\cf19 for} (pugi::xml_node processorId = energy.child({\cf22 "processorId"}); processorId; processorId = processorId.next_sibling()) \{\par
01121                 {\cf18 unsigned} {\cf18 int} processor_id_n = processorId.attribute({\cf22 "id"}).as_int();{\cf20 //}\par
01122                 {\cf18 float} process_load_value = processorId.attribute({\cf22 "value"}).as_float();{\cf20 //}\par
01123                 {\cf19 if}(allocationPS_BB[Id] == processor_id_n)\{\par
01124                     energy.remove_child(processorId);\par
01125                 \}\par
01126             \}\par
01127             processes = processes.next_sibling();\par
01128         \}\par
01129         myDoc.save_file({\cf22 "./XML/application.xml"});\par
01130         cout<<endl;\par
01131 \par
01133 \par
01134         pugi::xml_document myDoc2;\par
01135         pugi::xml_parse_result myResult2 = myDoc2.load_file({\cf22 "./XML/instancesTL.xml"});\par
01136         cout << {\cf22 "XML result: "} << myResult2.description() << endl;\par
01137 \par
01138         pugi::xml_node instancesBB = myDoc2.child({\cf22 "instancesBB"});\par
01139         xml_node basicBlock = instancesBB.child({\cf22 "basicBlock"});\par
01140         {\cf19 for}({\cf18 int} i = 0; i < NBB; i++)\{\par
01141             temp = ({\cf18 char}*) basicBlock.child_value({\cf22 "id"});\par
01142             Id = atoi(temp); {\cf20 //id process}\par
01143 \par
01144             xml_node energyEst = basicBlock.child({\cf22 "energyEstimation"});\par
01145             {\cf19 for} (pugi::xml_node energyTOT = energyEst.child({\cf22 "energyTOT"}); energyTOT; energyTOT = energyTOT.next_sibling()) \{\par
01146                 {\cf18 unsigned} {\cf18 int} processor_id_n = energyTOT.attribute({\cf22 "id"}).as_int();{\cf20 //}\par
01147                 {\cf18 float} energy_value = energyTOT.attribute({\cf22 "value"}).as_float();{\cf20 //}\par
01148                 {\cf19 if}(Id == allocationPS_BB[2])\{\par
01149                     energyEst.remove_child(energyTOT);\par
01150                 \}\par
01151             \}\par
01152             basicBlock = basicBlock.next_sibling();\par
01153         \}\par
01154         cout << {\cf22 "Saving result: "} << myDoc2.save_file({\cf22 "./XML/instancesTL.xml"}) << endl;\par
01155         cout<<endl;\par
01156 \par
01157     \}\par
}
{
\ql
References NBB, and NPS.}\par
{
\ql
Referenced by sc_main().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_a9a32595149efd0a69d09c46387415aa0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v deleteConcXmlLoad\:SystemManager}
{\xe \v SystemManager\:deleteConcXmlLoad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::deleteConcXmlLoad ()}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1247 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01247                                          \{\par
01248         {\cf18 char}* temp;\par
01249         {\cf18 int} Id;\par
01250 \par
01251         pugi::xml_document myDoc;\par
01252         pugi::xml_parse_result myResult = myDoc.load_file({\cf22 "./XML/application.xml"});\par
01253         cout << {\cf22 "XML Delete result: "} << myResult.description() << endl;\par
01254 \par
01255         {\cf20 //method 2: use object/node structure}\par
01256         pugi::xml_node instancesPS = myDoc.child({\cf22 "instancesPS"});\par
01257         xml_node processes = instancesPS.child({\cf22 "process"});\par
01258             {\cf19 for}({\cf18 int} i = 0; i < NPS; i++)\{\par
01259                 temp = ({\cf18 char}*) processes.child_value({\cf22 "id"});\par
01260                 Id = atoi(temp); {\cf20 //id process}\par
01261                 xml_node load = processes.child({\cf22 "load"});\par
01262                 {\cf19 for} (pugi::xml_node processorId = load.child({\cf22 "processorId"}); processorId; processorId = processorId.next_sibling()) \{\par
01263                         {\cf18 unsigned} {\cf18 int} processor_id_n = processorId.attribute({\cf22 "id"}).as_int();{\cf20 //}\par
01264                         {\cf18 float} process_load_value = processorId.attribute({\cf22 "value"}).as_float();{\cf20 //}\par
01265                         {\cf19 if}(allocationPS_BB[Id] == processor_id_n)\{\par
01266                             load.remove_child(processorId);\par
01267                         \}\par
01268                 \}\par
01269 \par
01270                 {\cf20 /*  xml_node WCET = processes.child("WCET");}\par
01271 {\cf20                 for (pugi::xml_node processorId = WCET.child("processorId"); processorId; processorId = processorId.next_sibling()) \{}\par
01272 {\cf20                     WCET.remove_child(processorId);}\par
01273 {\cf20                 \}}\par
01274 {\cf20 }\par
01275 {\cf20                 xml_node Period = processes.child("Period");}\par
01276 {\cf20                 for (pugi::xml_node processorId = Period.child("processorId"); processorId; processorId = processorId.next_sibling()) \{}\par
01277 {\cf20                     Period.remove_child(processorId);}\par
01278 {\cf20                 \}}\par
01279 {\cf20 }\par
01280 {\cf20                 xml_node Deadline = processes.child("Deadline");}\par
01281 {\cf20                 for (pugi::xml_node processorId = Deadline.child("processorId"); processorId; processorId = processorId.next_sibling()) \{}\par
01282 {\cf20                     Deadline.remove_child(processorId);}\par
01283 {\cf20                 \} */}\par
01284 \par
01285                 processes = processes.next_sibling();\par
01286             \}\par
01287         myDoc.save_file({\cf22 "./XML/application.xml"});\par
01288         cout<<endl;\par
01289 \par
01290         pugi::xml_document myDoc2;\par
01291         pugi::xml_parse_result myResult2 = myDoc2.load_file({\cf22 "./XML/instancesTL.xml"});\par
01292         cout << {\cf22 "XML result: "} << myResult2.description() << endl;\par
01293 \par
01294         pugi::xml_node instancesBB = myDoc2.child({\cf22 "instancesBB"});\par
01295         xml_node basicBlock = instancesBB.child({\cf22 "basicBlock"});\par
01296         {\cf19 for}({\cf18 int} i = 0; i < NBB; i++)\{\par
01297             temp = ({\cf18 char}*) basicBlock.child_value({\cf22 "id"});\par
01298             Id = atoi(temp); {\cf20 //id process}\par
01299 \par
01300             xml_node loadEst = basicBlock.child({\cf22 "loadEstimation"});\par
01301             {\cf19 for} (pugi::xml_node loadTOT = loadEst.child({\cf22 "FreeRunningTime"}); loadTOT; loadTOT = loadTOT.next_sibling()) \{\par
01302                     {\cf18 unsigned} {\cf18 int} processor_id_n = loadTOT.attribute({\cf22 "id"}).as_int();{\cf20 //}\par
01303                     {\cf18 float} energy_value = loadTOT.attribute({\cf22 "value"}).as_float();{\cf20 //}\par
01304                     {\cf19 if}(Id == allocationPS_BB[2])\{\par
01305                         loadEst.remove_child(loadTOT);\par
01306                     \}\par
01307             \}\par
01308             basicBlock = basicBlock.next_sibling();\par
01309         \}\par
01310         cout << {\cf22 "Saving result: "} << myDoc2.save_file({\cf22 "./XML/instancesTL.xml"}) << endl;\par
01311         myDoc2.reset();\par
01312         cout<<endl;\par
01313 \par
01314     \}\par
}
{
\ql
References NBB, and NPS.}\par
{
\ql
Referenced by sc_main().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_aa25f8e4f2e4460d9652875772f48bb0e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v generateBBInstances\:SystemManager}
{\xe \v SystemManager\:generateBBInstances}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< {\b BasicBlock} > SystemManager::generateBBInstances ()}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 636 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00636                                                      \{\par
00637 \par
00638     vector<BasicBlock> vbb;\par
00639 \par
00640     {\cf19 for} ({\cf18 int} i = 0; i < NBB; i++)\{\par
00641 \par
00642         BasicBlock bb;\par
00643 \par
00644         {\cf20 //BB-ID}\par
00645         bb.setId(i);\par
00646 \par
00647         {\cf20 //BB-NAME}\par
00648         bb.setName({\cf22 "dummy"});\par
00649 \par
00650         {\cf20 //BB-TYPE}\par
00651         bb.setType({\cf22 "dummy"});\par
00652 \par
00653         {\cf20 // PROCESSING UNIT}\par
00654 \par
00655         vector<ProcessingUnit> vpu;\par
00656 \par
00657         {\cf19 for} ({\cf18 int} j = 0; j < 4; j++)\{       {\cf20 // each block contains at most 4 pu}\par
00658 \par
00659 \par
00660             ProcessingUnit pu;\par
00661 \par
00662             {\cf20 //PU-NAME}\par
00663 \par
00664             pu.setName({\cf22 "dummy"});\par
00665 \par
00666             {\cf20 //PU-ID}\par
00667             {\cf18 int} idPU = j;\par
00668 \par
00669             pu.setId(idPU);\par
00670 \par
00671             {\cf20 //Processor Type}\par
00672             pu.setProcessorType({\cf22 "dummy"});\par
00673 \par
00675             {\cf20 //pu.setCost(0);}\par
00676 \par
00677             {\cf20 //PU-ISA}\par
00678             pu.setISA({\cf22 "dummy"});\par
00679 \par
00680             {\cf20 // PU-Frequency (MHz)}\par
00681             pu.setFrequency(0);\par
00682 \par
00683             {\cf20 // PU-CC4CS}\par
00684             {\cf18 float}** array = {\cf17 new} {\cf18 float}*[5]; {\cf20 //TODO: eliminare **?}\par
00685 \par
00686             {\cf20 //Int8}\par
00687             {\cf18 float} idCC4CSminint8 = 0;\par
00688             {\cf18 float} idCC4CSmaxint8 = 0;\par
00689             {\cf20 //Int16}\par
00690 \par
00691             {\cf18 float} idCC4CSminint16 = 0;\par
00692             {\cf18 float} idCC4CSmaxint16 = 0;\par
00693             {\cf20 //Int32}\par
00694             {\cf18 float} idCC4CSminint32 = 0;\par
00695             {\cf18 float} idCC4CSmaxint32 = 0;\par
00696             {\cf20 //Float}\par
00697             {\cf18 float} idCC4CSminfloat = 0;\par
00698             {\cf18 float} idCC4CSmaxfloat = 0;\par
00699             {\cf20 //Tot}\par
00700             {\cf18 float} idCC4CSmin = 0;\par
00701             {\cf18 float} idCC4CSmax = 0;\par
00702 \par
00703             {\cf20 //TODO: ciclo con tutti 0!}\par
00704             array[0] = {\cf17 new} {\cf18 float}[2];\par
00705             array[0][0] = idCC4CSminint8;\par
00706             array[0][1] = idCC4CSmaxint8;\par
00707             array[1] = {\cf17 new} {\cf18 float}[2];\par
00708             array[1][0] = idCC4CSminint16;\par
00709             array[1][1] = idCC4CSmaxint16;\par
00710             array[2] = {\cf17 new} {\cf18 float}[2];\par
00711             array[2][0] = idCC4CSminint32;\par
00712             array[2][1] = idCC4CSmaxint32;\par
00713             array[3] = {\cf17 new} {\cf18 float}[2];\par
00714             array[3][0] = idCC4CSminfloat;\par
00715             array[3][1] = idCC4CSmaxfloat;\par
00716             array[4] = {\cf17 new} {\cf18 float}[2];\par
00717             array[4][0] = idCC4CSmin;\par
00718             array[4][1] = idCC4CSmax;\par
00719             pu.setCC4S(array);\par
00720 \par
00721             {\cf20 // PU-Power (W)}\par
00722             pu.setPower(0);\par
00723 \par
00724             {\cf20 // PU-MIPS}\par
00725             {\cf18 float} idMIPS = 0;\par
00726             pu.setMIPS(idMIPS);\par
00727 \par
00728             {\cf20 // PU-I4CS}\par
00729             {\cf18 float} idI4CSmin = 0;\par
00730             pu.setI4CSmin(idI4CSmin);\par
00731             {\cf18 float} idI4CSmax = 0;\par
00732             pu.setI4CSmax(idI4CSmax);\par
00733 \par
00734             {\cf20 // PU-Vdd (V)}\par
00735             {\cf18 float} idVdd = 0;\par
00736             pu.setVdd(idVdd);\par
00737 \par
00738             {\cf20 // PU-Idd (A)}\par
00739             {\cf18 float} idIdd = 0;\par
00740             pu.setIdd(idIdd);\par
00741 \par
00742             {\cf20 // PU-overheadCS (us)}\par
00743             {\cf18 float} idOver = 0;\par
00744             pu.setOverheadCS(sc_time(({\cf18 int})idOver, SC_US));\par
00745 \par
00746             vpu.push_back(pu);\par
00747 \par
00748         \}\par
00749         bb.setProcessor(vpu);\par
00750 \par
00751         {\cf20 // LOCAL MEMORY}\par
00752 \par
00753         {\cf20 //CODE SIZE}\par
00754         bb.setCodeSize(0);\par
00755 \par
00756         {\cf20 //DATA SIZE}\par
00757         bb.setDataSize(0);\par
00758 \par
00759         {\cf20 //eQG}\par
00760         bb.setEqG(0);\par
00761 \par
00762         {\cf20 // Free Running time}\par
00763         {\cf18 float} lmFreeRunningTime = 0;\par
00764         bb.setFRT(lmFreeRunningTime);\par
00765         vbb.push_back(bb);\par
00766     \}\par
00767 \par
00768     {\cf19 return} vbb;\par
00769 \}\par
}
{
\ql
References NBB, ProcessingUnit::setCC4S(), BasicBlock::setCodeSize(), BasicBlock::setDataSize(), BasicBlock::setEqG(), ProcessingUnit::setFrequency(), BasicBlock::setFRT(), ProcessingUnit::setI4CSmax(), ProcessingUnit::setI4CSmin(), ProcessingUnit::setId(), BasicBlock::setId(), ProcessingUnit::setIdd(), ProcessingUnit::setISA(), ProcessingUnit::setMIPS(), ProcessingUnit::setName(), BasicBlock::setName(), ProcessingUnit::setOverheadCS(), ProcessingUnit::setPower(), BasicBlock::setProcessor(), ProcessingUnit::setProcessorType(), BasicBlock::setType(), and ProcessingUnit::setVdd().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_a77bb622cef7c79dab7463d02a2125542_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v generateChannelInstances\:SystemManager}
{\xe \v SystemManager\:generateChannelInstances}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< {\b Channel} > SystemManager::generateChannelInstances ()}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 198 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00199 \{\par
00200     vector<Channel> vch;\par
00201 \par
00202     {\cf20 // parsing xml file}\par
00203 \par
00204     xml_document myDoc;\par
00205     xml_parse_result myResult = myDoc.load_file(APPLICATION);\par
00206     xml_node instancesLL = myDoc.child({\cf22 "instancesLL"});\par
00207 \par
00208     {\cf20 //channel parameters}\par
00209 \par
00210     xml_node_iterator seqChannel_it;\par
00211 \par
00212     {\cf19 for} (seqChannel_it=instancesLL.begin(); seqChannel_it!=instancesLL.end(); ++seqChannel_it)\{\par
00213 \par
00214         xml_node_iterator channel_node_it = seqChannel_it->begin();\par
00215 \par
00216         Channel ch;\par
00217 \par
00218         {\cf18 char}* temp;\par
00219 \par
00220         {\cf20 // CH-NAME}\par
00221         {\cf18 string} name = channel_node_it->child_value();\par
00222         ch.setName(name);\par
00223 \par
00224         {\cf20 // CH-ID}\par
00225         channel_node_it++;\par
00226         temp = ({\cf18 char}*) channel_node_it->child_value();\par
00227         {\cf18 int}  {\cf18 id} = atoi(temp);\par
00228         ch.setId({\cf18 id});\par
00229 \par
00230         {\cf20 // writer ID}\par
00231         channel_node_it++;\par
00232         temp = ({\cf18 char}*) channel_node_it->child_value();\par
00233         {\cf18 int}  w_id = atoi(temp);\par
00234         ch.setW_id(w_id);\par
00235 \par
00236         {\cf20 // reader ID}\par
00237         channel_node_it++;\par
00238         temp = ({\cf18 char}*) channel_node_it->child_value();\par
00239         {\cf18 int}  r_id = atoi(temp);\par
00240         ch.setR_id(r_id);\par
00241 \par
00242         {\cf20 // CH-width (logical width)}\par
00243         channel_node_it++;\par
00244         temp = ({\cf18 char}*) channel_node_it->child_value();\par
00245         {\cf18 int}  width = atoi(temp);\par
00246         ch.setWidth(width);\par
00247 \par
00248         ch.setNum(0);\par
00249 \par
00250         vch.push_back(ch);\par
00251 \par
00252     \}\par
00253 \par
00254     {\cf19 return} vch;\par
00255 \}\par
}
{
\ql
References APPLICATION, Channel::setId(), Channel::setName(), Channel::setNum(), Channel::setR_id(), Channel::setW_id(), and Channel::setWidth().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_a98b6400619bc75fc9333426b38b1d24b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v generatePhysicalLinkInstances\:SystemManager}
{\xe \v SystemManager\:generatePhysicalLinkInstances}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< {\b PhysicalLink} > SystemManager::generatePhysicalLinkInstances ()}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 854 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00855 \{\par
00856     vector<PhysicalLink> VPL;\par
00857 \par
00858     {\cf19 for} ({\cf18 int} i = 0; i < NPL; i++)\{\par
00859 \par
00860         PhysicalLink pl;\par
00861 \par
00862         pl.setId(i);\par
00863 \par
00864         pl.setName({\cf22 "dummy"});\par
00865 \par
00866         pl.physical_width=1; {\cf20 // width of the physical link}\par
00867         pl.tcomm=sc_time(0, SC_MS); {\cf20 // LP: (bandwidth / phisycal_widht = 1/sec=hz (inverto)) ( per 1000)  (non sforare i 5 ms)}\par
00868         pl.tacomm=sc_time(0, SC_MS); {\cf20 // LP: tcomm * K (es:K=1)}\par
00869         pl.bandwidth=0; {\cf20 // bandwidth in bit/s}\par
00870         pl.a2=0; {\cf20 // a2 coefficient of energy curve}\par
00871         pl.a1=0; {\cf20 // a1 coefficient of energy curve}\par
00872 \par
00873         VPL.push_back(pl);\par
00874     \}\par
00875 \par
00876     {\cf19 return} VPL;\par
00877 \}\par
}
{
\ql
References PhysicalLink::a1, PhysicalLink::a2, PhysicalLink::bandwidth, NPL, PhysicalLink::physical_width, PhysicalLink::setId(), PhysicalLink::setName(), PhysicalLink::tacomm, and PhysicalLink::tcomm.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_a056fabdd037cf3a1c2e6e20764784159_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v generateProcessInstances\:SystemManager}
{\xe \v SystemManager\:generateProcessInstances}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< {\b Process} > SystemManager::generateProcessInstances ()}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00091                                                         \{\par
00092 \par
00093     vector<Process> vps2;\par
00094 \par
00095     {\cf18 int} exp_id = 0;\par
00096 \par
00097     {\cf18 int} processId;\par
00098 \par
00099     pugi::xml_document doc;\par
00100     pugi::xml_parse_result result = doc.load_file(APPLICATION);\par
00101 \par
00102     xml_node instancesPS2 = doc.child({\cf22 "instancesPS"});\par
00103 \par
00104     {\cf19 for} (pugi::xml_node xn_process = instancesPS2.first_child(); !xn_process.empty(); xn_process = xn_process.next_sibling())\{\par
00105 \par
00106         Process pi;\par
00107 \par
00108         {\cf20 // Process Name}\par
00109         pi.setName(xn_process.child_value({\cf22 "name"}));\par
00110 \par
00111         {\cf20 // Process id}\par
00112         processId = atoi(({\cf18 char}*) xn_process.child_value({\cf22 "id"}));\par
00113         pi.setId(processId);\par
00114 \par
00115         {\cf20 // Process Priority}\par
00116         pi.setPriority(atoi(({\cf18 char}*) xn_process.child_value({\cf22 "priority"})));\par
00117 \par
00118         {\cf20 // Process Criticality}\par
00119         pi.setCriticality(atoi(({\cf18 char}*) xn_process.child_value({\cf22 "criticality"})));\par
00120 \par
00121         {\cf20 // Process eqGate (HW size)}\par
00122         xml_node eqGate = xn_process.child({\cf22 "eqGate"});\par
00123         pi.setEqGate(({\cf18 float})eqGate.attribute({\cf22 "value"}).as_int());\par
00124 \par
00125         {\cf20 // Process dataType}\par
00126         pi.setDataType(atoi(({\cf18 char}*) xn_process.child_value({\cf22 "dataType"})));\par
00127 \par
00128         {\cf20 // Process MemSize (SW Size)}\par
00129         xml_node memSize = xn_process.child({\cf22 "memSize"});\par
00130 \par
00131         xml_node codeSize = memSize.child({\cf22 "codeSize"});\par
00132         {\cf19 for} (pugi::xml_node processorModel = codeSize.child({\cf22 "processorModel"}); processorModel; processorModel = processorModel.next_sibling()) \{\par
00133             pi.setCodeSize( processorModel.attribute({\cf22 "name"}).as_string(), processorModel.attribute({\cf22 "value"}).as_int() );\par
00134         \}\par
00135 \par
00136         xml_node dataSize = memSize.child({\cf22 "dataSize"});\par
00137         {\cf19 for} (pugi::xml_node processorModel = dataSize.child({\cf22 "processorModel"}); processorModel; processorModel = processorModel.next_sibling()) \{\par
00138             pi.setDataSize( processorModel.attribute({\cf22 "name"}).as_string(), processorModel.attribute({\cf22 "value"}).as_int() );\par
00139         \}\par
00140 \par
00141         {\cf20 // Process Affinity}\par
00142 \par
00143         xml_node affinity = xn_process.child({\cf22 "affinity"});\par
00144         {\cf19 for} (pugi::xml_node processorType = affinity.child({\cf22 "processorType"}); processorType; processorType = processorType.next_sibling()) \{\par
00145             {\cf18 string} processorType_name = processorType.attribute({\cf22 "name"}).as_string();\par
00146             {\cf18 float} affinity_value = processorType.attribute({\cf22 "value"}).as_float();\par
00147             pi.setAffinity(processorType_name, affinity_value);\par
00148         \}\par
00149 \par
00150         {\cf20 // Process Concurrency}\par
00151 \par
00152         xml_node concurrency = xn_process.child({\cf22 "concurrency"});\par
00153         {\cf19 for} (pugi::xml_node xn_cprocessId = concurrency.child({\cf22 "processId"}); xn_cprocessId; xn_cprocessId = xn_cprocessId.next_sibling()) \{\par
00154             {\cf18 unsigned} {\cf18 int} process_id_n = xn_cprocessId.attribute({\cf22 "id"}).as_int();\par
00155             {\cf18 float} process_concurrency_value = xn_cprocessId.attribute({\cf22 "value"}).as_float();\par
00156             pi.setConcurrency(process_id_n, process_concurrency_value);\par
00157         \}\par
00158 \par
00159         {\cf20 // Process Load}\par
00160 \par
00161         xml_node load = xn_process.child({\cf22 "load"});\par
00162         {\cf19 for} (pugi::xml_node processorId = load.child({\cf22 "processorId"}); processorId; processorId = processorId.next_sibling()) \{\par
00163             {\cf18 unsigned} {\cf18 int} processor_id_n = processorId.attribute({\cf22 "id"}).as_int();\par
00164             {\cf18 float} process_load_value = processorId.attribute({\cf22 "value"}).as_float();\par
00165             pi.setLoad(processor_id_n, process_load_value);\par
00166         \}\par
00167 \par
00168         {\cf20 // Process time (init)}\par
00169         pi.processTime = sc_time(0, SC_MS);\par
00170 \par
00171         {\cf20 // Process energy (init)}\par
00172         pi.setEnergy(0);\par
00173 \par
00174         {\cf20 // Process Communication}\par
00175         {\cf20 // TO DO}\par
00176 \par
00177         {\cf19 if}(processId == exp_id)\{\par
00178             vps2.push_back(pi);\par
00179             exp_id++;\par
00180         \} {\cf19 else} \{\par
00181             cout << {\cf22 "XML for application is corrupted\\n"};\par
00182             exit(11);\par
00183         \}\par
00184 \par
00185     \}\par
00186     {\cf19 if}(exp_id != NPS)\{\par
00187         cout << {\cf22 "XML for application is corrupted (NPS)\\n"};\par
00188         exit(11);\par
00189     \}\par
00190 \par
00191     doc.reset();\par
00192 \par
00193     {\cf19 return} vps2;\par
00194 \par
00195 \}\par
}
{
\ql
References APPLICATION, NPS, Process::processTime, Process::setAffinity(), Process::setCodeSize(), Process::setConcurrency(), Process::setCriticality(), Process::setDataSize(), Process::setDataType(), Process::setEnergy(), Process::setEqGate(), Process::setId(), Process::setLoad(), Process::setName(), and Process::setPriority().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_a545df7d9bd60c4d42797a7233a1f4d61_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getAllocationPS_BB\:SystemManager}
{\xe \v SystemManager\:getAllocationPS_BB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< int > SystemManager::getAllocationPS_BB (int  {\i bb_id})}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 273 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00274 \{\par
00275     vector<int> pu_alloc;\par
00276     {\cf19 for} ({\cf18 unsigned} {\cf18 int} j = 2; j < allocationPS_BB.size(); j++) {\cf20 // 0 and 1 are the testbench}\par
00277     \{\par
00278         {\cf19 if} (allocationPS_BB[j] == bb_id) pu_alloc.push_back(j);\par
00279     \}\par
00280     {\cf19 return} pu_alloc;\par
00281 \}\par
}
}
{\xe \v getFRL\:SystemManager}
{\xe \v SystemManager\:getFRL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float * SystemManager::getFRL ()}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1241 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01241                                  \{\par
01242         {\cf19 return} this->FRL;\par
01243     \}\par
}
{
\ql
Referenced by sc_main().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_ae7fbae6170e9f5e8aca0c436221dcf41_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getFRT\:SystemManager}
{\xe \v SystemManager\:getFRT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time SystemManager::getFRT ()}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1226 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01226                                  \{\par
01227         {\cf19 return} this->FRT;\par
01228     \}\par
}
}
{\xe \v increaseEstimatedEnergy\:SystemManager}
{\xe \v SystemManager\:increaseEstimatedEnergy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::increaseEstimatedEnergy (int  {\i processId})}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1091 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01092     \{\par
01093         VPS[processId].energy += updateEstimatedEnergy(processId); {\cf20 // Cumulated sum of the statement execution energy}\par
01094     \}\par
}
}
{\xe \v increaseSimulatedTime\:SystemManager}
{\xe \v SystemManager\:increaseSimulatedTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::increaseSimulatedTime (int  {\i processId})}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1085 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01086     \{\par
01087         VPS[processId].processTime += updateSimulatedTime(processId); {\cf20 // Cumulated sum of the statement execution time}\par
01088     \}\par
}
}
{\xe \v increaseTimer\:SystemManager}
{\xe \v SystemManager\:increaseTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::increaseTimer (int  {\i processId}, sc_time  {\i delta})}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1097 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01098     \{\par
01099         VPS[processId].processTime += delta; {\cf20 // Cumulated sum of the statement execution time}\par
01100     \}\par
}
}
{\xe \v loadEst\:SystemManager}
{\xe \v SystemManager\:loadEst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float * SystemManager::loadEst (sc_time  {\i FRT_n})}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1234 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01234                                                \{\par
01235     {\cf19 for}({\cf18 unsigned} i =2; i<VPS.size(); i++)\{\par
01236             FRL[i] = (float) ((VPS[i].processTime/VPS[i].profiling)/(FRT_n/VPS[i].profiling)); {\cf20 //}\par
01237     \}\par
01238     {\cf19 return} FRL;\par
01239     \}\par
}
{
\ql
Referenced by sc_main().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_acf868dd1af35168e9e37a62b1a03780b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mappingCH\:SystemManager}
{\xe \v SystemManager\:mappingCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::mappingCH ()}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 967 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00967                              \{\par
00968     {\cf19 for} ({\cf18 int} j = 0; j < NCH; j++)\{\par
00969         {\cf18 int} linkId = 0;\par
00970         allocationCH_PL.push_back(linkId);\par
00971     \}\par
00972 \}\par
}
{
\ql
References NCH.}\par
}
{\xe \v mappingPS\:SystemManager}
{\xe \v SystemManager\:mappingPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::mappingPS ()}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 921 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00921                              \{\par
00922     {\cf19 for} ({\cf18 int} j = 0; j<NPS; j++)\{\par
00923         {\cf18 int} bbId = 0;\par
00924         allocationPS_BB.push_back(bbId);\par
00925     \}\par
00926 \}\par
}
{
\ql
References NPS.}\par
}
{\xe \v PS_Profiling\:SystemManager}
{\xe \v SystemManager\:PS_Profiling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::PS_Profiling (int  {\i processId})}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 261 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00262 \{\par
00263     VPS[processId].profiling++;\par
00264 \}\par
}
}
{\xe \v setFRT\:SystemManager}
{\xe \v SystemManager\:setFRT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::setFRT (sc_time  {\i x})}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1230 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01230                                        \{\par
01231         FRT = x;\par
01232     \}\par
}
{
\ql
Referenced by sc_main().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_a2babb39c1fc59e1d02782e3e39ea9412_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateEstimatedEnergy\:SystemManager}
{\xe \v SystemManager\:updateEstimatedEnergy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float SystemManager::updateEstimatedEnergy (int  {\i processId})}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1005 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01006     \{\par
01007         {\cf18 float} J4CS;\par
01008         {\cf18 float} P;\par
01009         {\cf19 if}(energyComputation == {\cf22 "EPC"}) \{\par
01010             {\cf20 // EPC --> J4CS = CC4CSaff * EPC = CC4CSaff * (P/f)}\par
01011 \par
01012             {\cf20 // Id representing process dominant datatype }\par
01013             {\cf18 int} dataType = VPS[processId].getDataType();\par
01014 \par
01015 \par
01016             {\cf20 //I HAVE TO ADD A LOOP IN ORDER TO TAKE THE PARAMETERS OF EACH PROCESSOR (?) **********************}\par
01017 \par
01018             {\cf18 float} CC4Smin = VBB[allocationPS_BB[processId]].getProcessors()[0].getCC4S()[dataType][0]; {\cf20 // Average/min number of clock cycles needed by the PU to execute a C statement}\par
01019 \par
01020             {\cf20 //float CC4Smin = VBB[allocationPS_BB[processId]].getCC4S()[dataType][0]; // Average/min number of clock cycles needed by the PU to execute a C statement}\par
01021 \par
01022             {\cf20 //float CC4Smax = VBB[allocationPS_BB[processId]].getCC4S()[dataType][1];}\par
01023             {\cf18 float} CC4Smax = VBB[allocationPS_BB[processId]].getProcessors()[0].getCC4S()[dataType][1];{\cf20 // Average/max number of clock cycles needed by the PU to execute a C statement}\par
01024 \par
01025             {\cf20 // Affinity-based interpolation }\par
01026             {\cf18 float} CC4Saff = CC4Smin + ((CC4Smax-CC4Smin)*(1-VPS[processId].getAffinityByName(VBB[allocationPS_BB[processId]].getProcessors()[0].getProcessorType())));\par
01027 \par
01028             {\cf19 if}(this->checkSPP(processId)) \{\par
01029                 {\cf20 // if the process is on a SPP (HW) --> P = Vdd * Idd (V*A = W)}\par
01030 \par
01031                 P = VBB[allocationPS_BB[processId]].getProcessors()[0].getVdd() * VBB[allocationPS_BB[processId]].getProcessors()[0].getIdd();\par
01032 \par
01033             \} {\cf19 else} \{\par
01034                 {\cf20 // if the process is on a GPP/DSP (SW) --> P (W)}\par
01035 \par
01036                 P = VBB[allocationPS_BB[processId]].getProcessors()[0].getPower();\par
01037 \par
01038             \}\par
01039             {\cf20 // EPC = P/f (W/MHz = uJ)}\par
01040             {\cf18 float} EPC = P / VBB[allocationPS_BB[processId]].getProcessors()[0].getFrequency();\par
01041 \par
01042             J4CS = CC4Saff * EPC; {\cf20 // uJ}\par
01043         \} {\cf19 else} \{ \par
01044             {\cf20 // EPI }\par
01045 \par
01046             {\cf19 if}(this->checkSPP(processId)) \{\par
01047                 {\cf20 // if the process is on a SPP (HW) --> J4CS = CC4CSaff * P * (1/f)}\par
01048 \par
01049                 {\cf20 // Id representing process dominant datatype }\par
01050                 {\cf18 int} dataType = VPS[processId].getDataType();    \par
01051 \par
01052                 {\cf18 float} CC4Smin = VBB[allocationPS_BB[processId]].getProcessors()[0].getCC4S()[dataType][0]; {\cf20 // Average/min number of clock cycles needed by the PU to execute a C statement}\par
01053 \par
01054                 {\cf18 float} CC4Smax = VBB[allocationPS_BB[processId]].getProcessors()[0].getCC4S()[dataType][1]; {\cf20 // Average/max number of clock cycles needed by the PU to execute a C statement}\par
01055 \par
01056                 {\cf20 // Affinity-based interpolation }\par
01057                 {\cf18 float} CC4Saff = CC4Smin + ((CC4Smax-CC4Smin)*(1-VPS[processId].getAffinityByName(VBB[allocationPS_BB[processId]].getProcessors()[0].getProcessorType())));\par
01058 \par
01059                 {\cf20 // P = Vdd * Idd (V*A = W)}\par
01060                 P = VBB[allocationPS_BB[processId]].getProcessors()[0].getVdd() * VBB[allocationPS_BB[processId]].getProcessors()[0].getIdd();\par
01061 \par
01062                 J4CS = CC4Saff * (P / VBB[allocationPS_BB[processId]].getProcessors()[0].getFrequency()); {\cf20 // uJ}\par
01063             \} {\cf19 else} \{\par
01064                 {\cf20 // if the process is on a GPP/DSP (SW) --> J4CS = I4CSaff * EPI = I4CSaff * (P/MIPS)}\par
01065 \par
01066                 {\cf18 float} I4CSmin = VBB[allocationPS_BB[processId]].getProcessors()[0].getI4CSmin(); {\cf20 // Average/min number of assembly instructions to execute a C statement}\par
01067 \par
01068                 {\cf18 float} I4CSmax = VBB[allocationPS_BB[processId]].getProcessors()[0].getI4CSmax(); {\cf20 // Average/max number of assembly instructions to execute a C statement}\par
01069 \par
01070                 {\cf20 // Affinity-based interpolation }\par
01071                 {\cf18 float} I4CSaff = I4CSmin + ((I4CSmax-I4CSmin)*(1-VPS[processId].getAffinityByName(VBB[allocationPS_BB[processId]].getProcessors()[0].getProcessorType())));\par
01072 \par
01073                 P = VBB[allocationPS_BB[processId]].getProcessors()[0].getPower(); {\cf20 // Watt}\par
01074 \par
01075                 {\cf20 // EPI = P/MIPS (uJ/instr)}\par
01076                 {\cf18 float} EPI = P / VBB[allocationPS_BB[processId]].getProcessors()[0].getMIPS();\par
01077 \par
01078                 J4CS = I4CSaff * EPI; {\cf20 // uJ}\par
01079             \}\par
01080         \} \par
01081         {\cf19 return} J4CS;\par
01082     \}\par
}
{
\ql
References energyComputation.}\par
}
{\xe \v updateSimulatedTime\:SystemManager}
{\xe \v SystemManager\:updateSimulatedTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time SystemManager::updateSimulatedTime (int  {\i processId})}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 985 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00986     \{   \par
00987         {\cf20 // Id representing process dominant datatype }\par
00988         {\cf18 int} dataType = VPS[processId].getDataType();\par
00989 \par
00990 \par
00991         {\cf20 //*********************VPU WAS CHANGED IN VBB**********************}\par
00992         {\cf18 float} CC4Smin = VBB[allocationPS_BB[processId]].getProcessors()[0].getCC4S()[dataType][0]; {\cf20 // Average/min number of clock cycles needed by the PU to execute a C statement}\par
00993         {\cf18 float} CC4Smax = VBB[allocationPS_BB[processId]].getProcessors()[0].getCC4S()[dataType][1]; {\cf20 // Average/max number of clock cycles needed by the PU to execute a C statement}\par
00994 \par
00995         {\cf20 // Affinity-based interpolation and round up of CC4CSaff}\par
00996         {\cf18 unsigned} {\cf18 int} CC4Saff = ({\cf18 unsigned} int) ceil(CC4Smin + ((CC4Smax-CC4Smin)*(1-VPS[processId].getAffinityByName(VBB[allocationPS_BB[processId]].getProcessors()[0].getProcessorType()))));\par
00997 \par
00998         {\cf18 float} frequency = VBB[allocationPS_BB[processId]].getProcessors()[0].getFrequency(); {\cf20 // Frequency of the processor (MHz)}\par
00999         sc_time value((CC4Saff/(frequency*1000)), SC_MS); {\cf20 // Average time (ms) needed to execute a C statement}\par
01000 \par
01001         {\cf19 return} value;\par
01002     \}\par
}
}
{\xe \v updateXmlConCom\:SystemManager}
{\xe \v SystemManager\:updateXmlConCom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::updateXmlConCom (float  {\i matrixCONC_PS_N}[10][10], unsigned int  {\i matrixCOM}[10][10], float  {\i matrixCONC_CH_N}[15][15])}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 331 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00332 \{\par
00333     pugi::xml_document myDoc;\par
00334     pugi::xml_parse_result myResult = myDoc.load_file({\cf22 "./XML/application.xml"});\par
00335     cout << {\cf22 "XML result: "} << myResult.description() << endl;\par
00336 \par
00337     {\cf20 //method 2: use object/node structure}\par
00338     pugi::xml_node instancesPS = myDoc.child({\cf22 "instancesPS"});\par
00339 \par
00340     {\cf19 for} (xml_node_iterator seqProcess_it = instancesPS.begin(); seqProcess_it != instancesPS.end(); ++seqProcess_it)\{\par
00341         {\cf18 int} Id = atoi(seqProcess_it->child_value({\cf22 "id"}));\par
00342 \par
00343         {\cf19 if} (seqProcess_it->child({\cf22 "concurrency"}))\{\par
00344             pugi::xml_node concurrency = seqProcess_it->child({\cf22 "concurrency"});\par
00345             {\cf19 for} ({\cf18 int} i = 0; i<NPS; i++)\{\par
00346                 {\cf19 if} (i != Id)\{\par
00347                     pugi::xml_node conc_it = concurrency.append_child({\cf22 "processId"});\par
00348                     conc_it.append_attribute({\cf22 "id"}).set_value(i);\par
00349                     conc_it.append_attribute({\cf22 "value"}).set_value(matrixCONC_PS_N[Id][i]);\par
00350                 \}\par
00351             \}\par
00352         \}\par
00353         {\cf19 else}\{\par
00354             pugi::xml_node concurrency = seqProcess_it->append_child({\cf22 "concurrency"});\par
00355             {\cf19 for} ({\cf18 int} i = 0; i<NPS; i++)\{\par
00356                 {\cf19 if} (i != Id)\{\par
00357                     pugi::xml_node conc_it = concurrency.append_child({\cf22 "processId"});\par
00358                     conc_it.append_attribute({\cf22 "id"}).set_value(i);\par
00359                     conc_it.append_attribute({\cf22 "value"}).set_value(matrixCONC_PS_N[Id][i]);\par
00360                 \}\par
00361             \}\par
00362         \}\par
00363     \}\par
00364 \par
00365     {\cf20 //method 2: use object/node structure}\par
00366     pugi::xml_node instancesCOM = myDoc.child({\cf22 "instancesPS"});\par
00367 \par
00368     {\cf19 for} (pugi::xml_node_iterator seqProcess_it = instancesCOM.begin(); seqProcess_it != instancesCOM.end(); ++seqProcess_it)\{\par
00369         {\cf18 int} Id = atoi(seqProcess_it->child_value({\cf22 "id"}));\par
00370 \par
00371         {\cf19 if} (seqProcess_it->child({\cf22 "comunication"}))\{\par
00372             pugi::xml_node comunication = seqProcess_it->child({\cf22 "comunication"});\par
00373             {\cf19 for} ({\cf18 int} i = 0; i<NPS; i++)\{\par
00374                 {\cf19 if} (i != Id)\{\par
00375                     pugi::xml_node com_it = comunication.append_child({\cf22 "rec"});\par
00376                     com_it.append_attribute({\cf22 "idRec"}).set_value(i);\par
00377                     com_it.append_attribute({\cf22 "value"}).set_value(matrixCOM[Id][i]);\par
00378                 \}\par
00379             \}\par
00380         \}\par
00381         {\cf19 else}\{\par
00382             pugi::xml_node comunication = seqProcess_it->append_child({\cf22 "comunication"});\par
00383             {\cf19 for} ({\cf18 int} i = 0; i<NPS; i++)\{\par
00384                 {\cf19 if} (i != Id)\{\par
00385                     pugi::xml_node com_it = comunication.append_child({\cf22 "rec"});\par
00386                     com_it.append_attribute({\cf22 "idRec"}).set_value(i);\par
00387                     com_it.append_attribute({\cf22 "value"}).set_value(matrixCOM[Id][i]);\par
00388                 \}\par
00389             \}\par
00390         \}\par
00391 \par
00392     \}\par
00393 \par
00394     pugi::xml_node instancesLL = myDoc.child({\cf22 "instancesLL"});\par
00395 \par
00396     {\cf19 for} (xml_node_iterator seqLink_it = instancesLL.begin(); seqLink_it != instancesLL.end(); ++seqLink_it)\{\par
00397         {\cf18 int} Id = atoi(seqLink_it->child_value({\cf22 "id"}));\par
00398 \par
00399         {\cf19 if} (seqLink_it->child({\cf22 "concurrency"}))\{\par
00400             pugi::xml_node concurrencyL = seqLink_it->child({\cf22 "concurrency"});\par
00401             {\cf19 for} ({\cf18 int} i = 0; i<NCH; i++)\{\par
00402                 {\cf19 if} (i != Id)\{\par
00403                     pugi::xml_node concL_it = concurrencyL.append_child({\cf22 "channelId"});\par
00404                     concL_it.append_attribute({\cf22 "id"}).set_value(i);\par
00405                     concL_it.append_attribute({\cf22 "value"}).set_value(matrixCONC_CH_N[Id][i]);\par
00406                 \}\par
00407             \}\par
00408         \}\par
00409         {\cf19 else}\{\par
00410             pugi::xml_node concurrencyL = seqLink_it->append_child({\cf22 "concurrency"});\par
00411             {\cf19 for} ({\cf18 int} i = 0; i<NCH; i++)\{\par
00412                 {\cf19 if} (i != Id)\{\par
00413                     pugi::xml_node concL_it = concurrencyL.append_child({\cf22 "channelId"});\par
00414                     concL_it.append_attribute({\cf22 "id"}).set_value(i);\par
00415                     concL_it.append_attribute({\cf22 "value"}).set_value(matrixCONC_CH_N[Id][i]);\par
00416                 \}\par
00417             \}\par
00418         \}\par
00419     \}\par
00420 \par
00421     cout << {\cf22 "Saving result: "} << myDoc.save_file({\cf22 "./XML/application.xml"}) << endl;\par
00422     myDoc.reset();\par
00423     cout << endl;\par
00424 \}\par
}
{
\ql
References NCH, and NPS.}\par
{
\ql
Referenced by sc_main().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_a5f16a17547d2cd543180e06e555304e7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateXmlEnergy\:SystemManager}
{\xe \v SystemManager\:updateXmlEnergy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::updateXmlEnergy ()}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1159 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01160     \{\par
01161 \par
01162         pugi::xml_document myDoc;\par
01163         pugi::xml_parse_result myResult = myDoc.load_file({\cf22 "./XML/application.xml"});\par
01164         cout << {\cf22 "XML result: "} << myResult.description() << endl;\par
01165 \par
01166         {\cf20 //method 2: use object/node structure}\par
01167         pugi::xml_node instancesPS = myDoc.child({\cf22 "instancesPS"});\par
01168 \par
01170 \par
01171         pugi::xml_node instancesPS2 = myDoc.child({\cf22 "instancesPS"});\par
01172         {\cf18 float} sumEnergyTot=0;\par
01173         {\cf19 for} (xml_node_iterator seqProcess_it2=instancesPS2.begin(); seqProcess_it2!=instancesPS2.end(); ++seqProcess_it2)\{\par
01174             {\cf18 int} Id = atoi(seqProcess_it2->child_value({\cf22 "id"}));\par
01175             {\cf19 if}(seqProcess_it2->child({\cf22 "energy"}))\{\par
01176                 pugi::xml_node energy = seqProcess_it2->child({\cf22 "energy"});\par
01177                 pugi::xml_node energy_it = energy.append_child({\cf22 "processorId"});\par
01178                 energy_it.append_attribute({\cf22 "id"}).set_value(allocationPS_BB[Id]);\par
01179                 energy_it.append_attribute({\cf22 "value"}).set_value(VPS[Id].getEnergy());\par
01180             \}{\cf19 else}\{\par
01181                 pugi::xml_node energy = seqProcess_it2->append_child({\cf22 "energy"});\par
01182                 pugi::xml_node energy_it = energy.append_child({\cf22 "processorId"});\par
01183                 energy_it.append_attribute({\cf22 "id"}).set_value(allocationPS_BB[Id]);\par
01184                 energy_it.append_attribute({\cf22 "value"}).set_value(VPS[Id].getEnergy());\par
01185             \}\par
01186 \par
01187             sumEnergyTot+=VPS[Id].getEnergy();\par
01188         \}\par
01189 \par
01190         cout << {\cf22 "Saving result: "} << myDoc.save_file({\cf22 "./XML/application.xml"}) << endl;\par
01191         myDoc.reset();\par
01192         cout<<endl;\par
01193 \par
01194         pugi::xml_document myDoc2;\par
01195         pugi::xml_parse_result myResult2 = myDoc2.load_file({\cf22 "./XML/instancesTL.xml"});\par
01196         cout << {\cf22 "XML result: "} << myResult2.description() << endl;\par
01197 \par
01198         xml_node instancesBB = myDoc2.child({\cf22 "instancesBB"});\par
01199 \par
01200         {\cf19 for} (xml_node_iterator seqBB_it=instancesBB.begin(); seqBB_it!=instancesBB.end(); ++seqBB_it)\{\par
01201             {\cf18 int} Id = atoi(seqBB_it->child_value({\cf22 "id"}));\par
01203             {\cf19 if}(Id == allocationPS_BB[2])\{\par
01204                 {\cf19 if}(seqBB_it->child({\cf22 "energyEstimation"}))\{\par
01205                     pugi::xml_node energyEstimation = seqBB_it->child({\cf22 "energyEstimation"});\par
01206                     xml_node entot_node = energyEstimation.append_child({\cf22 "energyTOT"});\par
01207                     entot_node.append_attribute({\cf22 "id"}).set_value(allocationPS_BB[2]);\par
01208                     entot_node.append_attribute({\cf22 "value"}).set_value(sumEnergyTot);\par
01209                 \}{\cf19 else}\{\par
01210                     pugi::xml_node energyEstimation = seqBB_it->append_child({\cf22 "energyEstimation"});\par
01211                     xml_node entot_node = energyEstimation.append_child({\cf22 "energyTOT"});\par
01212                     entot_node.append_attribute({\cf22 "id"}).set_value(allocationPS_BB[2]);\par
01213                     entot_node.append_attribute({\cf22 "value"}).set_value(sumEnergyTot);\par
01214                 \}\par
01215             \}\par
01216         \}\par
01217         cout << {\cf22 "Saving result: "} << myDoc2.save_file({\cf22 "./XML/instancesTL.xml"}) << endl;\par
01218         myDoc2.reset();\par
01219         cout<<endl;\par
01220 \par
01221     \}\par
}
{
\ql
Referenced by sc_main().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_a99f32d48ffab81f6c16d86dedbede1e7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateXmlLoad\:SystemManager}
{\xe \v SystemManager\:updateXmlLoad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemManager::updateXmlLoad ()}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1316 of file SystemManager.cpp.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 01317     \{\par
01318         pugi::xml_document myDoc;\par
01319         pugi::xml_parse_result myResult = myDoc.load_file({\cf22 "./XML/application.xml"});\par
01320         cout << {\cf22 "XML result: "} << myResult.description() << endl;\par
01321 \par
01322         {\cf20 //method 2: use object/node structure}\par
01323         pugi::xml_node instancesPS = myDoc.child({\cf22 "instancesPS"});\par
01324 \par
01325         {\cf19 for} (xml_node_iterator seqProcess_it=instancesPS.begin(); seqProcess_it!=instancesPS.end(); ++seqProcess_it)\{\par
01326             {\cf18 int} Id = atoi(seqProcess_it->child_value({\cf22 "id"}));\par
01327 \par
01329 \par
01330             {\cf19 if}(seqProcess_it->child({\cf22 "load"}))\{\par
01331                 pugi::xml_node load = seqProcess_it->child({\cf22 "load"});\par
01332                 pugi::xml_node load_it = load.append_child({\cf22 "processorId"});\par
01333                 load_it.append_attribute({\cf22 "id"}).set_value(allocationPS_BB[Id]);\par
01334                 load_it.append_attribute({\cf22 "value"}).set_value(FRL[Id]);\par
01335             \}{\cf19 else}\{\par
01336                 pugi::xml_node load = seqProcess_it->append_child({\cf22 "load"});\par
01337                 pugi::xml_node load_it = load.append_child({\cf22 "processorId"});\par
01338                 load_it.append_attribute({\cf22 "id"}).set_value(allocationPS_BB[Id]);\par
01339                 load_it.append_attribute({\cf22 "value"}).set_value(FRL[Id]);\par
01340             \}\par
01341         \}\par
01342 \par
01344 \par
01346     {\cf20 //pugi::xml_node instancesPS2 = myDoc.child("instancesPS");}\par
01347 \par
01348     {\cf20 //for (pugi::xml_node_iterator seqProcess_it=instancesPS2.begin(); seqProcess_it!=instancesPS2.end(); ++seqProcess_it)\{}\par
01349     {\cf20 //  int Id = atoi(seqProcess_it->child_value("id"));}\par
01350     {\cf20 //}\par
01351     {\cf20 //  if(seqProcess_it->child("WCET"))\{}\par
01352     {\cf20 //      pugi::xml_node comunication = seqProcess_it->child("WCET");}\par
01353     {\cf20 //      for (int i=0; i<NPS; i++)\{}\par
01354     {\cf20 //          if(i!=Id)\{}\par
01355     {\cf20 //              pugi::xml_node wcet_it = comunication.append_child("processorId");}\par
01356     {\cf20 //              double wcet_task = (VPS[Id].processTime.to_seconds());}\par
01357     {\cf20 //              wcet_it.append_attribute("id").set_value(i);}\par
01358     {\cf20 //              wcet_it.append_attribute("value").set_value((wcet_task/VPS[Id].profiling)*1000000.0);}\par
01359     {\cf20 //          \}}\par
01360     {\cf20 //      \}}\par
01361     {\cf20 //  \}else\{}\par
01362     {\cf20 //      pugi::xml_node WCET = seqProcess_it->append_child("WCET");}\par
01363     {\cf20 //      for (int i=0; i<VPU.size(); i++)\{}\par
01364     {\cf20 //          if(i!=Id)\{}\par
01365     {\cf20 //              pugi::xml_node wcet_it = WCET.append_child("processorId");}\par
01366     {\cf20 //              double wcet_task = (VPS[Id].processTime.to_seconds());}\par
01367     {\cf20 //              wcet_it.append_attribute("id").set_value(i);}\par
01368     {\cf20 //              wcet_it.append_attribute("value").set_value((wcet_task/VPS[Id].profiling)*1000000.0);}\par
01369     {\cf20 //          \}}\par
01370     {\cf20 //      \}}\par
01371     {\cf20 //  \}}\par
01372     {\cf20 //\}}\par
01373 \par
01375 \par
01376     {\cf20 //pugi::xml_node instancesPS3 = myDoc.child("instancesPS");}\par
01377 \par
01378     {\cf20 //for (xml_node_iterator seqLink_it=instancesPS3.begin(); seqLink_it!=instancesPS3.end(); ++seqLink_it)\{}\par
01379     {\cf20 //  int Id = atoi(seqLink_it->child_value("id"));}\par
01380     {\cf20 //}\par
01381     {\cf20 //  if(seqLink_it->child("Period"))\{}\par
01382     {\cf20 //      pugi::xml_node Period = seqLink_it->child("Period");}\par
01383     {\cf20 //      for (int i=0; i<NPS; i++)\{}\par
01384     {\cf20 //          if(i!=Id)\{}\par
01385     {\cf20 //              pugi::xml_node period_it = Period.append_child("processorId");}\par
01386     {\cf20 //              period_it.append_attribute("id").set_value(i);}\par
01387     {\cf20 //              double period_value = (FRT.to_seconds());}\par
01388     {\cf20 //              period_it.append_attribute("value").set_value((period_value/VPS[Id].profiling)*1000000.0);}\par
01389     {\cf20 //          \}}\par
01390     {\cf20 //      \}}\par
01391     {\cf20 //  \}else\{}\par
01392     {\cf20 //      pugi::xml_node Period = seqLink_it->append_child("Period");}\par
01393     {\cf20 //      for (int i=0; i<NPS; i++)\{}\par
01394     {\cf20 //          if(i!=Id)\{}\par
01395     {\cf20 //              pugi::xml_node period_it = Period.append_child("processorId");}\par
01396     {\cf20 //              period_it.append_attribute("id").set_value(i);}\par
01397     {\cf20 //              double period_value = (FRT.to_seconds());}\par
01398     {\cf20 //              period_it.append_attribute("value").set_value((period_value/VPS[Id].profiling)*1000000.0);}\par
01399     {\cf20 //          \}}\par
01400     {\cf20 //      \}}\par
01401     {\cf20 //  \}}\par
01402     {\cf20 //\}}\par
01403 \par
01405 \par
01406     {\cf20 //  pugi::xml_node instancesPS4 = myDoc.child("instancesPS");}\par
01407 \par
01408     {\cf20 //for (xml_node_iterator seqLink_it=instancesPS4.begin(); seqLink_it!=instancesPS4.end(); ++seqLink_it)\{}\par
01409     {\cf20 //  int Id = atoi(seqLink_it->child_value("id"));}\par
01410 \par
01411     {\cf20 //  if(seqLink_it->child("Deadline"))\{}\par
01412     {\cf20 //      pugi::xml_node Deadline = seqLink_it->child("Deadline");}\par
01413     {\cf20 //      for (int i=0; i<NPS; i++)\{}\par
01414     {\cf20 //          if(i!=Id)\{}\par
01415     {\cf20 //              pugi::xml_node dead_it = Deadline.append_child("processorId");}\par
01416     {\cf20 //              dead_it.append_attribute("id").set_value(i);}\par
01417     {\cf20 //              double deadline_value = (FRT.to_seconds());}\par
01418     {\cf20 //              double dead_tot = (deadline_value/VPS[Id].profiling)*1000000.0;}\par
01419     {\cf20 //              cout<<"VPS["<<Id<<"].profiling -->  "<<VPS[Id].profiling<<endl;}\par
01420     {\cf20 //              dead_it.append_attribute("value").set_value(dead_tot);}\par
01421     {\cf20 //          \}}\par
01422     {\cf20 //      \}}\par
01423     {\cf20 //  \}else\{}\par
01424     {\cf20 //      pugi::xml_node Deadline = seqLink_it->append_child("Deadline");}\par
01425     {\cf20 //      for (int i=0; i<NPS; i++)\{}\par
01426     {\cf20 //          if(i!=Id)\{}\par
01427     {\cf20 //              pugi::xml_node dead_it = Deadline.append_child("processorId");}\par
01428     {\cf20 //              dead_it.append_attribute("id").set_value(i);}\par
01429     {\cf20 //              double deadline_value = (FRT.to_seconds());}\par
01430     {\cf20 //              double dead_tot = (deadline_value/VPS[Id].profiling)*1000000.0;}\par
01431     {\cf20 //              dead_it.append_attribute("value").set_value(dead_tot);}\par
01432     {\cf20 //          \}}\par
01433     {\cf20 //      \}}\par
01434     {\cf20 //  \}}\par
01435     {\cf20 //\}}\par
01436 \par
01437     cout << {\cf22 "Saving result: "} << myDoc.save_file({\cf22 "./XML/application.xml"}) << endl;\par
01438     myDoc.reset();\par
01439     cout<<endl;\par
01440 \par
01441     {\cf20 /* pugi::xml_document myDoc2;}\par
01442 {\cf20     pugi::xml_parse_result myResult2 = myDoc2.load_file("./XML/instancesTL.xml");}\par
01443 {\cf20     cout << "XML result: " << myResult2.description() << endl;}\par
01444 {\cf20 }\par
01445 {\cf20     xml_node instancesBB = myDoc2.child("instancesBB");}\par
01446 {\cf20 }\par
01447 {\cf20     for (xml_node_iterator seqBB_it=instancesBB.begin(); seqBB_it!=instancesBB.end(); ++seqBB_it)\{}\par
01448 {\cf20         int Id = atoi(seqBB_it->child_value("id"));}\par
01449 {\cf20 }\par
01451 {\cf20 }\par
01452 {\cf20         if(seqBB_it->child("loadEstimation"))\{}\par
01453 {\cf20             pugi::xml_node loadEstimation = seqBB_it->child("loadEstimation");}\par
01454 {\cf20             xml_node frl_node = loadEstimation.child("FreeRunningTime");}\par
01455 {\cf20             if(!(allocationPS_BB[Id] != Id))}\par
01456 {\cf20             \{}\par
01457 {\cf20                 sc_time local_frt = FRT;}\par
01458 {\cf20                 //frl_node.attribute("value")=(local_frt.to_double()*1000); //another solution for the number conversion}\par
01459 {\cf20                 frl_node.attribute("value")=(local_frt.to_seconds()*1000);}\par
01460 {\cf20             \}}\par
01461 {\cf20         \}else\{}\par
01462 {\cf20                 pugi::xml_node loadEstimation = seqBB_it->append_child("loadEstimation");}\par
01463 {\cf20                 xml_node frl_node = loadEstimation.append_child("FreeRunningTime");}\par
01464 {\cf20                 if(allocationPS_BB[Id] == Id)}\par
01465 {\cf20                 \{}\par
01466 {\cf20                     sc_time local_frt = FRT;}\par
01467 {\cf20                     //frl_node.attribute("value")=(local_frt.to_double()*1000);  //another solution for the number conversion}\par
01468 {\cf20                     frl_node.attribute("value")=(local_frt.to_seconds()*1000);}\par
01469 {\cf20                 \}}\par
01470 {\cf20 }\par
01471 {\cf20             \}}\par
01472 {\cf20     \}}\par
01473 {\cf20 }\par
01474 {\cf20     cout << "Saving result: " << myDoc2.save_file("./XML/instancesTL.xml") << endl;}\par
01475 {\cf20     myDoc2.reset();}\par
01476 {\cf20     cout<<endl; */}\par
01477 \par
01479 \par
01480     pugi::xml_document myDoc2;\par
01481     pugi::xml_parse_result myResult2 = myDoc2.load_file({\cf22 "./XML/instancesTL.xml"});\par
01482     cout << {\cf22 "XML result: "} << myResult2.description() << endl;\par
01483 \par
01484     xml_node instancesBB = myDoc2.child({\cf22 "instancesBB"});\par
01485 \par
01486     {\cf19 for} (xml_node_iterator seqBB_it=instancesBB.begin(); seqBB_it!=instancesBB.end(); ++seqBB_it)\{\par
01487         {\cf18 int} Id = atoi(seqBB_it->child_value({\cf22 "id"}));\par
01489         {\cf19 if}(Id == allocationPS_BB[2])\{\par
01490             {\cf19 if}(seqBB_it->child({\cf22 "loadEstimation"}))\{\par
01491                 pugi::xml_node energyEstimation = seqBB_it->child({\cf22 "loadEstimation"});\par
01492                 xml_node entot_node = energyEstimation.append_child({\cf22 "FreeRunningTime"});\par
01493                 entot_node.append_attribute({\cf22 "id"}).set_value(allocationPS_BB[2]);\par
01494                 sc_time local_frt = FRT;\par
01495                 entot_node.append_attribute({\cf22 "value"}).set_value(local_frt.to_seconds()*1000);\par
01496             \}{\cf19 else}\{\par
01497                 pugi::xml_node energyEstimation = seqBB_it->append_child({\cf22 "energyEstimation"});\par
01498                 xml_node entot_node = energyEstimation.append_child({\cf22 "energyTOT"});\par
01499                 entot_node.append_attribute({\cf22 "id"}).set_value(allocationPS_BB[2]);\par
01500                 sc_time local_frt = FRT;\par
01501                 entot_node.append_attribute({\cf22 "value"}).set_value(local_frt.to_seconds()*1000);\par
01502             \}\par
01503         \}\par
01504     \}\par
01505     cout << {\cf22 "Saving result: "} << myDoc2.save_file({\cf22 "./XML/instancesTL.xml"}) << endl;\par
01506     myDoc2.reset();\par
01507     cout<<endl;\par
01508 \par
01509 \}\par
}
{
\ql
Referenced by sc_main().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_system_manager_afb69c0fedadb6e806e6576ad07c51162_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v allocationCH_PL\:SystemManager}
{\xe \v SystemManager\:allocationCH_PL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<int> SystemManager::allocationCH_PL}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file SystemManager.h.}\par
{
\ql
Referenced by sc_csp_channel< T >::init(), sc_csp_channel< T >::sc_csp_channel(), and sc_main().}\par
}
{\xe \v allocationPS_BB\:SystemManager}
{\xe \v SystemManager\:allocationPS_BB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<int> SystemManager::allocationPS_BB}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 107 of file SystemManager.h.}\par
{
\ql
Referenced by sc_csp_channel< T >::init(), sc_csp_channel< T >::read(), sc_main(), SC_MODULE(), and sc_csp_channel< T >::write().}\par
}
{\xe \v FRL\:SystemManager}
{\xe \v SystemManager\:FRL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float SystemManager::FRL[10]}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 172 of file SystemManager.h.}\par
}
{\xe \v FRT\:SystemManager}
{\xe \v SystemManager\:FRT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sc_time SystemManager::FRT}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 175 of file SystemManager.h.}\par
}
{\xe \v VBB\:SystemManager}
{\xe \v SystemManager\:VBB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<{\b BasicBlock}> SystemManager::VBB}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 100 of file SystemManager.h.}\par
{
\ql
Referenced by sc_csp_channel< T >::init(), sc_main(), and SC_MODULE().}\par
}
{\xe \v VCH\:SystemManager}
{\xe \v SystemManager\:VCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<{\b Channel}> SystemManager::VCH}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file SystemManager.h.}\par
{
\ql
Referenced by sc_csp_channel< T >::sc_csp_channel(), sc_main(), and sc_csp_channel< T >::write().}\par
}
{\xe \v VPL\:SystemManager}
{\xe \v SystemManager\:VPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<{\b PhysicalLink}> SystemManager::VPL}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file SystemManager.h.}\par
{
\ql
Referenced by sc_csp_channel< T >::init(), sc_csp_channel< T >::sc_csp_channel(), and sc_main().}\par
}
{\xe \v VPS\:SystemManager}
{\xe \v SystemManager\:VPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<{\b Process}> SystemManager::VPS}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file SystemManager.h.}\par
{
\ql
Referenced by sc_main(), and SC_MODULE().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b SystemManager.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HepsycodeDesign/src/{\b SystemManager.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/datatype.h File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/datatype.h}
{\xe \v HepsycodeDesign/src/datatype.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Datatype Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <systemc.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for datatype.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "datatype_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "datatype_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir8e_parameters}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir8m to fir8e. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir8e_results}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8e_results} }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir8s_parameters}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8s_parameters} }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir8s_results}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct {\b fir8s_results} }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir16e_parameters}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16m to fir16e. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir16e_results}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16e to fir16m. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir16s_parameters}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16m to fir16s. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fir16s_results}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from fir16s to fir16m. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b gcde_parameters}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from gcdm to gcde. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b gcde_results}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Message from gcde to gcdm. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Datatype Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines all the FirFirGCD related datatypes. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/define.h File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/define.h}
{\xe \v HepsycodeDesign/src/define.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define Documented file. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "define_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NPS}\~ 10\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SBM DEPENDENT. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NCH}\~ 15\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TAP8}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TAP16}\~ 16\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NUMBER_OF_INPUTS}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NBB}\~ 5\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FirFirGCD: constants related to the HW architecture. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NPL}\~ 3\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BBs IDs (#id in the tag is starting from 0 to be aligned with istancesTL) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b APPLICATION}\~ "./XML/application.xml"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SBM INDEPENDENT: DO NOT CHANGE. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAPPING_PS_BB}\~ "./XML/mappingPS.xml"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAPPING_LC_PL}\~ "./XML/mappingCH.xml"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b energyComputation}\~ "EPC"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Costants related to energy consumption estimation. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b p_id} \{ {\b stimulus_id}, 
{\b display_id}, 
{\b fir8m_id}, 
{\b fir8e_id}, 
{\b fir8s_id}, 
{\b fir16m_id}, 
{\b fir16e_id}, 
{\b fir16s_id}, 
{\b gcdm_id}, 
{\b gcde_id}, 
{\b s_fir8m_fir8e_id}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b bb_id} \{ {\b BB8051_0_id}, 
{\b BB8051_1_id}, 
{\b BBleon3_0_id}, 
{\b BBleon3_1_id}, 
{\b BBArtix7_0_id}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b state} \{ {\b undefined}, 
{\b waiting}, 
{\b ready}, 
{\b running}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Costants related to processes/schedulers states and BB/modes. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b mode} \{ {\b off}, 
{\b suspended}, 
{\b active}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines all the FirFirGCD related defines. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/display.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/display.cpp}
{\xe \v HepsycodeDesign/src/display.cpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Display Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "display.h"}\par
{\f2 #include "define.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for display.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "display_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Display Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Display module: SystemC Module specifying the functionality of the Display component \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/display.h File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/display.h}
{\xe \v HepsycodeDesign/src/display.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Display Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <systemc.h>}\par
{\f2 #include "sc_csp_channel_ifs.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for display.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "display_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "display_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SC_MODULE} (display)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Display Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Display: Display (feedback) file \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/macros.h File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/macros.h}
{\xe \v HepsycodeDesign/src/macros.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macros Documented file. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "macros_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_S}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_P}(X)\~ {\b pSystemManager}->PS_Profiling(X);\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_SCHED_CS}(X,  i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRE_WAIT}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POST_WAIT}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_S_TIMER}(X,  Y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_PS_STATE}(X)\~ {\b pSchedulingManager}->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VPS[X].getEnergy() << "; Process;" << X << "; State;" << pSchedulingManager->process_state[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_PS_STATE_THIS}(X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VPS[X].getEnergy() << "; Process;" << X << "; State;" << this->process_state[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_CH_STATE}(X)\~ {\b pSchedulingManager}->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VCH[X].working_energy << "; Channel;" << X << "; State;" << pSchedulingManager->channel_state[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_CH_STATE_THIS}(X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << pSystemManager->VCH[X].working_energy << "; Channel;" << X << "; State;" << this->channel_state[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_BB_STATE}(X)\~ {\b pSchedulingManager}->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << 0 << "; BB;" << X << "; Mode;" << pSchedulingManager->BB_mode[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_BB_STATE_THIS}(X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << 0 << "; BB;" << X << "; Mode;" << this->BB_mode[X] << endl;\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEPSY_TRACE_SCHED_STATE}(X)\~ this->LOG << "Execution Time;" << sc_time_stamp().to_seconds() << "; Energy;" << this->sched_en[X] << "; Scheduler;" << X << "; State;" << this->scheduler_state[X] << endl;\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macros Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macros: Macros file \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/main.cpp}
{\xe \v HepsycodeDesign/src/main.cpp}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <iomanip>}\par
{\f2 #include <time.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <systemc.h>}\par
{\f2 #include "define.h"}\par
{\f2 #include "sc_csp_channel_ifs.h"}\par
{\f2 #include "datatype.h"}\par
{\f2 #include "stim_gen.h"}\par
{\f2 #include "mainsystem.h"}\par
{\f2 #include "display.h"}\par
{\f2 #include "sc_csp_channel.h"}\par
{\f2 #include "SchedulingManager.h"}\par
{\f2 #include "SystemManager.h"}\par
{\f2 #include "tl.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for main.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sc_main} (int a, char *b[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemManager} * {\b pSystemManager} = new {\b SystemManager}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SchedulingManager * {\b pSchedulingManager} = new SchedulingManager("SchedulingManager")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sampling_period} = 1000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stop_concurrency_sampling} =false\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Details. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/mainsystem.h File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/mainsystem.h}
{\xe \v HepsycodeDesign/src/mainsystem.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mainsystem Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "define.h"}\par
{\f2 #include "sc_csp_channel_ifs.h"}\par
{\f2 #include "sc_csp_channel.h"}\par
{\f2 #include "datatype.h"}\par
{\f2 #include "SystemManager.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for mainsystem.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mainsystem_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "mainsystem_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SC_MODULE} (mainsystem)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mainsystem Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Details. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/processesInstr/fir16_evaluation.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/processesInstr/fir16_evaluation.cpp}
{\xe \v HepsycodeDesign/src/processesInstr/fir16_evaluation.cpp}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR16 Evaluation Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../mainsystem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for fir16_evaluation.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fir16__evaluation_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR16 Evaluation Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR_16 Evaluation process: CSP {\b Process} specifying the functionality of the FIR16 Evaluation component \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/processesInstr/fir16_main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/processesInstr/fir16_main.cpp}
{\xe \v HepsycodeDesign/src/processesInstr/fir16_main.cpp}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR16 Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../mainsystem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for fir16_main.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fir16__main_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR16 Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR_16 process: CSP {\b Process} specifying the functionality of the FIR16 component. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/processesInstr/fir16_shifting.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/processesInstr/fir16_shifting.cpp}
{\xe \v HepsycodeDesign/src/processesInstr/fir16_shifting.cpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR16 Shifting Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../mainsystem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for fir16_shifting.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fir16__shifting_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR16 Shifting Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR_16 Shifting process: CSP {\b Process} specifying the functionality of the FIR16 Shifting component \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/processesInstr/fir8_evaluation.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/processesInstr/fir8_evaluation.cpp}
{\xe \v HepsycodeDesign/src/processesInstr/fir8_evaluation.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR8 Evaluation Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../mainsystem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for fir8_evaluation.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fir8__evaluation_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR8 Evaluation Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR_8 Evaluation process: CSP {\b Process} specifying the functionality of the FIR8 Evaluation component \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/processesInstr/fir8_main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/processesInstr/fir8_main.cpp}
{\xe \v HepsycodeDesign/src/processesInstr/fir8_main.cpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR8 Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../mainsystem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for fir8_main.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fir8__main_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR8 Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR_8 process: CSP {\b Process} specifying the functionality of the FIR8 component. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/processesInstr/fir8_shifting.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/processesInstr/fir8_shifting.cpp}
{\xe \v HepsycodeDesign/src/processesInstr/fir8_shifting.cpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR8 Shifting Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../mainsystem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for fir8_shifting.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fir8__shifting_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR8 Shifting Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FIR_8 Shifting process: CSP {\b Process} specifying the functionality of the FIR8 Shifting component \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/processesInstr/gcd_evaluation.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/processesInstr/gcd_evaluation.cpp}
{\xe \v HepsycodeDesign/src/processesInstr/gcd_evaluation.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GCD Evaluation Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../mainsystem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for gcd_evaluation.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "gcd__evaluation_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GCD Evaluation Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GCD Evaluation process: CSP {\b Process} specifying the functionality of the GCD Evaluation component \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/processesInstr/gcd_main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/processesInstr/gcd_main.cpp}
{\xe \v HepsycodeDesign/src/processesInstr/gcd_main.cpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GCD Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../mainsystem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for gcd_main.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "gcd__main_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GCD Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GCD process: CSP {\b Process} specifying the functionality of the GCD component. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/sc_csp_channel.h File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/sc_csp_channel.h}
{\xe \v HepsycodeDesign/src/sc_csp_channel.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The sc_csp_channel<T> primitive channel class documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "sysc/communication/sc_communication_ids.h"}\par
{\f2 #include "sysc/communication/sc_prim_channel.h"}\par
{\f2 #include "sysc/kernel/sc_event.h"}\par
{\f2 #include "sysc/kernel/sc_simcontext.h"}\par
{\f2 #include "sysc/tracing/sc_trace.h"}\par
{\f2 #include <typeinfo>}\par
{\f2 #include "sc_csp_channel_ifs.h"}\par
{\f2 #include "define.h"}\par
{\f2 #include "SystemManager.h"}\par
{\f2 #include "SchedulingManager.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for sc_csp_channel.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sc__csp__channel_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sc__csp__channel_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b sc_csp_channel< T >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemManager} * {\b pSystemManager}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SchedulingManager * {\b pSchedulingManager}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The sc_csp_channel<T> primitive channel class documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Details. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/sc_csp_channel_ifs.h File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/sc_csp_channel_ifs.h}
{\xe \v HepsycodeDesign/src/sc_csp_channel_ifs.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The sc_csp_channel<T> interface classes documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "sysc/communication/sc_interface.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for sc_csp_channel_ifs.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sc__csp__channel__ifs_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sc__csp__channel__ifs_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b sc_core::sc_csp_channel_in_if< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b sc_core::sc_csp_channel_out_if< T >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
 {\b sc_core}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The sc_csp_channel<T> interface classes documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Details. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/SchedulingManager.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/SchedulingManager.cpp}
{\xe \v HepsycodeDesign/src/SchedulingManager.cpp}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scheduling Manager Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <vector>}\par
{\f2 #include "SchedulingManager.h"}\par
{\f2 #include "SystemManager.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for SchedulingManager.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_scheduling_manager_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemManager} * {\b pSystemManager}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stop_concurrency_sampling}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sampling_period}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scheduling Manager Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scheduling Manager: HEPSIM Scheduling Manager. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/SchedulingManager.h File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/SchedulingManager.h}
{\xe \v HepsycodeDesign/src/SchedulingManager.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HEPSIM Scheduling Manager Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <map>}\par
{\f2 #include <systemc.h>}\par
{\f2 #include "SystemManager.h"}\par
{\f2 #include "tl.h"}\par
{\f2 #include "define.h"}\par
{\f2 #include "macros.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for SchedulingManager.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_scheduling_manager_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_scheduling_manager_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SC_MODULE} (SchedulingManager)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemManager} * {\b pSystemManager}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HEPSIM Scheduling Manager Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scheduling Manager: Scheduling Manager file \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/stim_gen.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/stim_gen.cpp}
{\xe \v HepsycodeDesign/src/stim_gen.cpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stim_gen.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for stim_gen.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "stim__gen_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stop_concurrency_sampling}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/stim_gen.h File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/stim_gen.h}
{\xe \v HepsycodeDesign/src/stim_gen.h}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stimulus Generation Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <systemc.h>}\par
{\f2 #include "sc_csp_channel_ifs.h"}\par
{\f2 #include "define.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for stim_gen.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "stim__gen_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "stim__gen_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SC_MODULE} (stim_gen)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stimulus Generation Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Details. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/SystemManager.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/SystemManager.cpp}
{\xe \v HepsycodeDesign/src/SystemManager.cpp}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System Manager Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <systemc.h>}\par
{\f2 #include <iostream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <string.h>}\par
{\f2 #include "tl.h"}\par
{\f2 #include "pugixml.hpp"}\par
{\f2 #include "SystemManager.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for SystemManager.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_system_manager_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System Manager Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System Manager: HEPSIM System Manager. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/SystemManager.h File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/SystemManager.h}
{\xe \v HepsycodeDesign/src/SystemManager.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HEPSIM System Manager Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <systemc.h>}\par
{\f2 #include <iostream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <vector>}\par
{\f2 #include "tl.h"}\par
{\f2 #include "define.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for SystemManager.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_system_manager_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_system_manager_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SystemManager}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HEPSIM System Manager Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System Manager: System Manager file \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/tl.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/tl.cpp}
{\xe \v HepsycodeDesign/src/tl.cpp}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Technologies library Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <systemc.h>}\par
{\f2 #include "tl.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for tl.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tl_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Technologies library Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Technologies Library: HEPSIM Technologies library. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HepsycodeDesign/src/tl.h File Reference\par \pard\plain 
{\tc\tcl2 \v HepsycodeDesign/src/tl.h}
{\xe \v HepsycodeDesign/src/tl.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HEPSIM Technologies Library Documented file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <systemc.h>}\par
{\f2 #include <iostream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <map>}\par
{\f2 #include <set>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for tl.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tl_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tl_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ProcessingUnit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Memory}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Process}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BasicBlock}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PhysicalLink}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Channel}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HEPSIM Technologies Library Documented file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Technologies Library: Technologies Library file \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}